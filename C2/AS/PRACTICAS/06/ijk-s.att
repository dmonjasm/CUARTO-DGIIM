
ijk-s:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000001020 <.plt>:
    1020:	ff 35 22 3f 00 00    	pushq  0x3f22(%rip)        # 4f48 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 23 3f 00 00 	bnd jmpq *0x3f23(%rip)        # 4f50 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop

Desensamblado de la sección .plt.got:

0000000000001120 <__cxa_finalize@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 a5 3e 00 00 	bnd jmpq *0x3ea5(%rip)        # 4fd0 <__cxa_finalize@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .plt.sec:

0000000000001130 <std::ostream::put(char)@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 1d 3e 00 00 	bnd jmpq *0x3e1d(%rip)        # 4f58 <std::ostream::put(char)@GLIBCXX_3.4>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <std::chrono::_V2::system_clock::now()@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 15 3e 00 00 	bnd jmpq *0x3e15(%rip)        # 4f60 <std::chrono::_V2::system_clock::now()@GLIBCXX_3.4.19>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <strlen@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 0d 3e 00 00 	bnd jmpq *0x3e0d(%rip)        # 4f68 <strlen@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <memset@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 05 3e 00 00 	bnd jmpq *0x3e05(%rip)        # 4f70 <memset@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__assert_fail@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 fd 3d 00 00 	bnd jmpq *0x3dfd(%rip)        # 4f78 <__assert_fail@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <std::ostream::flush()@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 f5 3d 00 00 	bnd jmpq *0x3df5(%rip)        # 4f80 <std::ostream::flush()@GLIBCXX_3.4>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <__cxa_atexit@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 ed 3d 00 00 	bnd jmpq *0x3ded(%rip)        # 4f88 <__cxa_atexit@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <__stack_chk_fail@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 e5 3d 00 00 	bnd jmpq *0x3de5(%rip)        # 4f90 <__stack_chk_fail@GLIBC_2.4>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 dd 3d 00 00 	bnd jmpq *0x3ddd(%rip)        # 4f98 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <std::ctype<char>::_M_widen_init() const@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 d5 3d 00 00 	bnd jmpq *0x3dd5(%rip)        # 4fa0 <std::ctype<char>::_M_widen_init() const@GLIBCXX_3.4.11>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <std::__throw_bad_cast()@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 cd 3d 00 00 	bnd jmpq *0x3dcd(%rip)        # 4fa8 <std::__throw_bad_cast()@GLIBCXX_3.4>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <std::ios_base::Init::Init()@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 c5 3d 00 00 	bnd jmpq *0x3dc5(%rip)        # 4fb0 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 bd 3d 00 00 	bnd jmpq *0x3dbd(%rip)        # 4fb8 <std::ostream& std::ostream::_M_insert<double>(double)@GLIBCXX_3.4.9>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <memmove@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 b5 3d 00 00 	bnd jmpq *0x3db5(%rip)        # 4fc0 <memmove@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 ad 3d 00 00 	bnd jmpq *0x3dad(%rip)        # 4fc8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@GLIBCXX_3.4>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .text:

0000000000001220 <main>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	55                   	push   %rbp
    1225:	48 8d 05 34 bf 00 00 	lea    0xbf34(%rip),%rax        # d160 <b>
    122c:	c5 fd 6f 0d 6c 1e 00 	vmovdqa 0x1e6c(%rip),%ymm1        # 30a0 <_IO_stdin_used+0xa0>
    1233:	00 
    1234:	c5 fd 6f 05 84 1e 00 	vmovdqa 0x1e84(%rip),%ymm0        # 30c0 <_IO_stdin_used+0xc0>
    123b:	00 
    123c:	48 89 e5             	mov    %rsp,%rbp
    123f:	48 8d 15 1a 3f 00 00 	lea    0x3f1a(%rip),%rdx        # 5160 <c>
    1246:	48 8d 88 00 80 00 00 	lea    0x8000(%rax),%rcx
    124d:	c5 fd 7f 08          	vmovdqa %ymm1,(%rax)
    1251:	c5 fd 7f 02          	vmovdqa %ymm0,(%rdx)
    1255:	48 05 00 01 00 00    	add    $0x100,%rax
    125b:	c5 fd 7f 88 20 ff ff 	vmovdqa %ymm1,-0xe0(%rax)
    1262:	ff 
    1263:	c5 fd 7f 42 20       	vmovdqa %ymm0,0x20(%rdx)
    1268:	c5 fd 7f 88 40 ff ff 	vmovdqa %ymm1,-0xc0(%rax)
    126f:	ff 
    1270:	c5 fd 7f 42 40       	vmovdqa %ymm0,0x40(%rdx)
    1275:	c5 fd 7f 88 60 ff ff 	vmovdqa %ymm1,-0xa0(%rax)
    127c:	ff 
    127d:	c5 fd 7f 42 60       	vmovdqa %ymm0,0x60(%rdx)
    1282:	c5 fd 7f 48 80       	vmovdqa %ymm1,-0x80(%rax)
    1287:	c5 fd 7f 82 80 00 00 	vmovdqa %ymm0,0x80(%rdx)
    128e:	00 
    128f:	c5 fd 7f 48 a0       	vmovdqa %ymm1,-0x60(%rax)
    1294:	c5 fd 7f 82 a0 00 00 	vmovdqa %ymm0,0xa0(%rdx)
    129b:	00 
    129c:	c5 fd 7f 48 c0       	vmovdqa %ymm1,-0x40(%rax)
    12a1:	c5 fd 7f 82 c0 00 00 	vmovdqa %ymm0,0xc0(%rdx)
    12a8:	00 
    12a9:	c5 fd 7f 48 e0       	vmovdqa %ymm1,-0x20(%rax)
    12ae:	48 81 c2 00 01 00 00 	add    $0x100,%rdx
    12b5:	c5 fd 7f 42 e0       	vmovdqa %ymm0,-0x20(%rdx)
    12ba:	48 39 c1             	cmp    %rax,%rcx
    12bd:	75 8e                	jne    124d <main+0x2d>
    12bf:	48 8d 35 a3 1d 00 00 	lea    0x1da3(%rip),%rsi        # 3069 <_IO_stdin_used+0x69>
    12c6:	48 8d 3d a3 01 00 00 	lea    0x1a3(%rip),%rdi        # 1470 <ijk()>
    12cd:	c5 f8 77             	vzeroupper 
    12d0:	e8 0b 09 00 00       	callq  1be0 <void test<void ()>(void (&)(), char const*)>
    12d5:	48 8d 35 91 1d 00 00 	lea    0x1d91(%rip),%rsi        # 306d <_IO_stdin_used+0x6d>
    12dc:	48 8d 3d 1d 02 00 00 	lea    0x21d(%rip),%rdi        # 1500 <ikj()>
    12e3:	e8 f8 08 00 00       	callq  1be0 <void test<void ()>(void (&)(), char const*)>
    12e8:	48 8d 35 82 1d 00 00 	lea    0x1d82(%rip),%rsi        # 3071 <_IO_stdin_used+0x71>
    12ef:	48 8d 3d 8a 04 00 00 	lea    0x48a(%rip),%rdi        # 1780 <jik()>
    12f6:	e8 e5 08 00 00       	callq  1be0 <void test<void ()>(void (&)(), char const*)>
    12fb:	48 8d 35 73 1d 00 00 	lea    0x1d73(%rip),%rsi        # 3075 <_IO_stdin_used+0x75>
    1302:	48 8d 3d 07 05 00 00 	lea    0x507(%rip),%rdi        # 1810 <jki()>
    1309:	e8 d2 08 00 00       	callq  1be0 <void test<void ()>(void (&)(), char const*)>
    130e:	48 8d 35 64 1d 00 00 	lea    0x1d64(%rip),%rsi        # 3079 <_IO_stdin_used+0x79>
    1315:	48 8d 3d f4 05 00 00 	lea    0x5f4(%rip),%rdi        # 1910 <kij()>
    131c:	e8 bf 08 00 00       	callq  1be0 <void test<void ()>(void (&)(), char const*)>
    1321:	48 8d 35 55 1d 00 00 	lea    0x1d55(%rip),%rsi        # 307d <_IO_stdin_used+0x7d>
    1328:	48 8d 3d e1 06 00 00 	lea    0x6e1(%rip),%rdi        # 1a10 <kji()>
    132f:	e8 ac 08 00 00       	callq  1be0 <void test<void ()>(void (&)(), char const*)>
    1334:	31 c0                	xor    %eax,%eax
    1336:	5d                   	pop    %rbp
    1337:	c3                   	retq   
    1338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    133f:	00 

0000000000001340 <_GLOBAL__sub_I_a>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	48 83 ec 08          	sub    $0x8,%rsp
    1348:	48 8d 3d 11 be 01 00 	lea    0x1be11(%rip),%rdi        # 1d160 <std::__ioinit>
    134f:	e8 8c fe ff ff       	callq  11e0 <std::ios_base::Init::Init()@plt>
    1354:	48 8b 3d 9d 3c 00 00 	mov    0x3c9d(%rip),%rdi        # 4ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    135b:	48 8d 15 a6 3c 00 00 	lea    0x3ca6(%rip),%rdx        # 5008 <__dso_handle>
    1362:	48 8d 35 f7 bd 01 00 	lea    0x1bdf7(%rip),%rsi        # 1d160 <std::__ioinit>
    1369:	48 83 c4 08          	add    $0x8,%rsp
    136d:	e9 1e fe ff ff       	jmpq   1190 <__cxa_atexit@plt>
    1372:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1379:	00 00 00 
    137c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001380 <_start>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	31 ed                	xor    %ebp,%ebp
    1386:	49 89 d1             	mov    %rdx,%r9
    1389:	5e                   	pop    %rsi
    138a:	48 89 e2             	mov    %rsp,%rdx
    138d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1391:	50                   	push   %rax
    1392:	54                   	push   %rsp
    1393:	4c 8d 05 56 0d 00 00 	lea    0xd56(%rip),%r8        # 20f0 <__libc_csu_fini>
    139a:	48 8d 0d df 0c 00 00 	lea    0xcdf(%rip),%rcx        # 2080 <__libc_csu_init>
    13a1:	48 8d 3d 78 fe ff ff 	lea    -0x188(%rip),%rdi        # 1220 <main>
    13a8:	ff 15 32 3c 00 00    	callq  *0x3c32(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    13ae:	f4                   	hlt    
    13af:	90                   	nop

00000000000013b0 <deregister_tm_clones>:
    13b0:	48 8d 3d 59 3c 00 00 	lea    0x3c59(%rip),%rdi        # 5010 <__TMC_END__>
    13b7:	48 8d 05 52 3c 00 00 	lea    0x3c52(%rip),%rax        # 5010 <__TMC_END__>
    13be:	48 39 f8             	cmp    %rdi,%rax
    13c1:	74 15                	je     13d8 <deregister_tm_clones+0x28>
    13c3:	48 8b 05 0e 3c 00 00 	mov    0x3c0e(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable>
    13ca:	48 85 c0             	test   %rax,%rax
    13cd:	74 09                	je     13d8 <deregister_tm_clones+0x28>
    13cf:	ff e0                	jmpq   *%rax
    13d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13d8:	c3                   	retq   
    13d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013e0 <register_tm_clones>:
    13e0:	48 8d 3d 29 3c 00 00 	lea    0x3c29(%rip),%rdi        # 5010 <__TMC_END__>
    13e7:	48 8d 35 22 3c 00 00 	lea    0x3c22(%rip),%rsi        # 5010 <__TMC_END__>
    13ee:	48 29 fe             	sub    %rdi,%rsi
    13f1:	48 89 f0             	mov    %rsi,%rax
    13f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    13f8:	48 c1 f8 03          	sar    $0x3,%rax
    13fc:	48 01 c6             	add    %rax,%rsi
    13ff:	48 d1 fe             	sar    %rsi
    1402:	74 14                	je     1418 <register_tm_clones+0x38>
    1404:	48 8b 05 e5 3b 00 00 	mov    0x3be5(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable>
    140b:	48 85 c0             	test   %rax,%rax
    140e:	74 08                	je     1418 <register_tm_clones+0x38>
    1410:	ff e0                	jmpq   *%rax
    1412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1418:	c3                   	retq   
    1419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001420 <__do_global_dtors_aux>:
    1420:	f3 0f 1e fa          	endbr64 
    1424:	80 3d 25 3d 00 00 00 	cmpb   $0x0,0x3d25(%rip)        # 5150 <completed.8061>
    142b:	75 2b                	jne    1458 <__do_global_dtors_aux+0x38>
    142d:	55                   	push   %rbp
    142e:	48 83 3d 9a 3b 00 00 	cmpq   $0x0,0x3b9a(%rip)        # 4fd0 <__cxa_finalize@GLIBC_2.2.5>
    1435:	00 
    1436:	48 89 e5             	mov    %rsp,%rbp
    1439:	74 0c                	je     1447 <__do_global_dtors_aux+0x27>
    143b:	48 8b 3d c6 3b 00 00 	mov    0x3bc6(%rip),%rdi        # 5008 <__dso_handle>
    1442:	e8 d9 fc ff ff       	callq  1120 <__cxa_finalize@plt>
    1447:	e8 64 ff ff ff       	callq  13b0 <deregister_tm_clones>
    144c:	c6 05 fd 3c 00 00 01 	movb   $0x1,0x3cfd(%rip)        # 5150 <completed.8061>
    1453:	5d                   	pop    %rbp
    1454:	c3                   	retq   
    1455:	0f 1f 00             	nopl   (%rax)
    1458:	c3                   	retq   
    1459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001460 <frame_dummy>:
    1460:	f3 0f 1e fa          	endbr64 
    1464:	e9 77 ff ff ff       	jmpq   13e0 <register_tm_clones>
    1469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001470 <ijk()>:
    1470:	f3 0f 1e fa          	endbr64 
    1474:	4c 8d 0d e5 bc 00 00 	lea    0xbce5(%rip),%r9        # d160 <b>
    147b:	53                   	push   %rbx
    147c:	4c 8d 1d dd 3c 01 00 	lea    0x13cdd(%rip),%r11        # 15160 <a>
    1483:	49 8d 99 00 80 00 00 	lea    0x8000(%r9),%rbx
    148a:	4c 8d 15 cf bd 00 00 	lea    0xbdcf(%rip),%r10        # d260 <b+0x100>
    1491:	48 8d 3d c8 bc 00 00 	lea    0xbcc8(%rip),%rdi        # d160 <b>
    1498:	4d 89 d8             	mov    %r11,%r8
    149b:	41 0f b7 30          	movzwl (%r8),%esi
    149f:	48 8d 87 00 80 ff ff 	lea    -0x8000(%rdi),%rax
    14a6:	4c 89 c9             	mov    %r9,%rcx
    14a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    14b0:	0f b7 11             	movzwl (%rcx),%edx
    14b3:	48 05 00 01 00 00    	add    $0x100,%rax
    14b9:	66 0f af 90 00 ff ff 	imul   -0x100(%rax),%dx
    14c0:	ff 
    14c1:	48 83 c1 02          	add    $0x2,%rcx
    14c5:	01 d6                	add    %edx,%esi
    14c7:	48 39 c7             	cmp    %rax,%rdi
    14ca:	75 e4                	jne    14b0 <ijk()+0x40>
    14cc:	48 83 c7 02          	add    $0x2,%rdi
    14d0:	66 41 89 30          	mov    %si,(%r8)
    14d4:	49 83 c0 02          	add    $0x2,%r8
    14d8:	49 39 fa             	cmp    %rdi,%r10
    14db:	75 be                	jne    149b <ijk()+0x2b>
    14dd:	49 81 c1 00 01 00 00 	add    $0x100,%r9
    14e4:	49 81 c3 00 01 00 00 	add    $0x100,%r11
    14eb:	49 39 d9             	cmp    %rbx,%r9
    14ee:	75 a1                	jne    1491 <ijk()+0x21>
    14f0:	5b                   	pop    %rbx
    14f1:	c3                   	retq   
    14f2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    14f9:	00 00 00 00 
    14fd:	0f 1f 00             	nopl   (%rax)

0000000000001500 <ikj()>:
    1500:	f3 0f 1e fa          	endbr64 
    1504:	4c 8d 15 55 bc 00 00 	lea    0xbc55(%rip),%r10        # d160 <b>
    150b:	4c 89 d7             	mov    %r10,%rdi
    150e:	48 8d 05 4b 3c 01 00 	lea    0x13c4b(%rip),%rax        # 15160 <a>
    1515:	45 31 c0             	xor    %r8d,%r8d
    1518:	4c 8d 0d 41 3c 00 00 	lea    0x3c41(%rip),%r9        # 5160 <c>
    151f:	48 8d 15 3a 3c 00 00 	lea    0x3c3a(%rip),%rdx        # 5160 <c>
    1526:	be 02 00 00 00       	mov    $0x2,%esi
    152b:	c4 e2 7d 79 44 77 fc 	vpbroadcastw -0x4(%rdi,%rsi,2),%ymm0
    1532:	c4 e2 7d 79 4c 77 fe 	vpbroadcastw -0x2(%rdi,%rsi,2),%ymm1
    1539:	c5 fd d5 12          	vpmullw (%rdx),%ymm0,%ymm2
    153d:	c5 ed fd 10          	vpaddw (%rax),%ymm2,%ymm2
    1541:	c5 75 d5 82 00 01 00 	vpmullw 0x100(%rdx),%ymm1,%ymm8
    1548:	00 
    1549:	c5 3d fd c2          	vpaddw %ymm2,%ymm8,%ymm8
    154d:	c5 7d 7f 00          	vmovdqa %ymm8,(%rax)
    1551:	c5 fd d5 52 20       	vpmullw 0x20(%rdx),%ymm0,%ymm2
    1556:	c5 ed fd 50 20       	vpaddw 0x20(%rax),%ymm2,%ymm2
    155b:	c5 f5 d5 ba 20 01 00 	vpmullw 0x120(%rdx),%ymm1,%ymm7
    1562:	00 
    1563:	c5 c5 fd fa          	vpaddw %ymm2,%ymm7,%ymm7
    1567:	c5 fd 7f 78 20       	vmovdqa %ymm7,0x20(%rax)
    156c:	c5 fd d5 52 40       	vpmullw 0x40(%rdx),%ymm0,%ymm2
    1571:	c5 ed fd 50 40       	vpaddw 0x40(%rax),%ymm2,%ymm2
    1576:	c5 f5 d5 b2 40 01 00 	vpmullw 0x140(%rdx),%ymm1,%ymm6
    157d:	00 
    157e:	c5 cd fd f2          	vpaddw %ymm2,%ymm6,%ymm6
    1582:	c5 fd 7f 70 40       	vmovdqa %ymm6,0x40(%rax)
    1587:	c5 fd d5 52 60       	vpmullw 0x60(%rdx),%ymm0,%ymm2
    158c:	c5 ed fd 50 60       	vpaddw 0x60(%rax),%ymm2,%ymm2
    1591:	c5 f5 d5 aa 60 01 00 	vpmullw 0x160(%rdx),%ymm1,%ymm5
    1598:	00 
    1599:	c5 d5 fd ea          	vpaddw %ymm2,%ymm5,%ymm5
    159d:	c5 fd 7f 68 60       	vmovdqa %ymm5,0x60(%rax)
    15a2:	c5 fd d5 92 80 00 00 	vpmullw 0x80(%rdx),%ymm0,%ymm2
    15a9:	00 
    15aa:	c5 ed fd 90 80 00 00 	vpaddw 0x80(%rax),%ymm2,%ymm2
    15b1:	00 
    15b2:	c5 f5 d5 a2 80 01 00 	vpmullw 0x180(%rdx),%ymm1,%ymm4
    15b9:	00 
    15ba:	c5 dd fd e2          	vpaddw %ymm2,%ymm4,%ymm4
    15be:	c5 fd 7f a0 80 00 00 	vmovdqa %ymm4,0x80(%rax)
    15c5:	00 
    15c6:	c5 fd d5 92 a0 00 00 	vpmullw 0xa0(%rdx),%ymm0,%ymm2
    15cd:	00 
    15ce:	c5 ed fd 90 a0 00 00 	vpaddw 0xa0(%rax),%ymm2,%ymm2
    15d5:	00 
    15d6:	c5 f5 d5 9a a0 01 00 	vpmullw 0x1a0(%rdx),%ymm1,%ymm3
    15dd:	00 
    15de:	c5 e5 fd da          	vpaddw %ymm2,%ymm3,%ymm3
    15e2:	c5 fd 7f 98 a0 00 00 	vmovdqa %ymm3,0xa0(%rax)
    15e9:	00 
    15ea:	c5 fd d5 92 c0 00 00 	vpmullw 0xc0(%rdx),%ymm0,%ymm2
    15f1:	00 
    15f2:	c5 ed fd 90 c0 00 00 	vpaddw 0xc0(%rax),%ymm2,%ymm2
    15f9:	00 
    15fa:	c5 75 d5 8a c0 01 00 	vpmullw 0x1c0(%rdx),%ymm1,%ymm9
    1601:	00 
    1602:	c5 b5 fd d2          	vpaddw %ymm2,%ymm9,%ymm2
    1606:	c5 fd 7f 90 c0 00 00 	vmovdqa %ymm2,0xc0(%rax)
    160d:	00 
    160e:	c5 fd d5 82 e0 00 00 	vpmullw 0xe0(%rdx),%ymm0,%ymm0
    1615:	00 
    1616:	c5 fd fd 80 e0 00 00 	vpaddw 0xe0(%rax),%ymm0,%ymm0
    161d:	00 
    161e:	48 63 ce             	movslq %esi,%rcx
    1621:	c5 f5 d5 8a e0 01 00 	vpmullw 0x1e0(%rdx),%ymm1,%ymm1
    1628:	00 
    1629:	48 83 c6 02          	add    $0x2,%rsi
    162d:	c5 f5 fd c8          	vpaddw %ymm0,%ymm1,%ymm1
    1631:	c5 fd 7f 88 e0 00 00 	vmovdqa %ymm1,0xe0(%rax)
    1638:	00 
    1639:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
    1640:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
    1647:	0f 85 de fe ff ff    	jne    152b <ikj()+0x2b>
    164d:	49 63 f0             	movslq %r8d,%rsi
    1650:	48 c1 e6 07          	shl    $0x7,%rsi
    1654:	48 01 ce             	add    %rcx,%rsi
    1657:	c4 c2 7d 79 04 72    	vpbroadcastw (%r10,%rsi,2),%ymm0
    165d:	48 c1 e1 08          	shl    $0x8,%rcx
    1661:	49 8d 14 09          	lea    (%r9,%rcx,1),%rdx
    1665:	c5 7d d5 0a          	vpmullw (%rdx),%ymm0,%ymm9
    1669:	c4 41 35 fd c0       	vpaddw %ymm8,%ymm9,%ymm8
    166e:	c5 7d d5 4a 20       	vpmullw 0x20(%rdx),%ymm0,%ymm9
    1673:	c5 b5 fd ff          	vpaddw %ymm7,%ymm9,%ymm7
    1677:	c5 7d d5 4a 40       	vpmullw 0x40(%rdx),%ymm0,%ymm9
    167c:	c5 35 fd ce          	vpaddw %ymm6,%ymm9,%ymm9
    1680:	c5 fd d5 72 60       	vpmullw 0x60(%rdx),%ymm0,%ymm6
    1685:	c5 cd fd f5          	vpaddw %ymm5,%ymm6,%ymm6
    1689:	c5 fd d5 aa 80 00 00 	vpmullw 0x80(%rdx),%ymm0,%ymm5
    1690:	00 
    1691:	c5 d5 fd ec          	vpaddw %ymm4,%ymm5,%ymm5
    1695:	c5 fd d5 a2 a0 00 00 	vpmullw 0xa0(%rdx),%ymm0,%ymm4
    169c:	00 
    169d:	c5 dd fd e3          	vpaddw %ymm3,%ymm4,%ymm4
    16a1:	c5 fd d5 9a c0 00 00 	vpmullw 0xc0(%rdx),%ymm0,%ymm3
    16a8:	00 
    16a9:	c5 fd d5 82 e0 00 00 	vpmullw 0xe0(%rdx),%ymm0,%ymm0
    16b0:	00 
    16b1:	c5 fd fd c9          	vpaddw %ymm1,%ymm0,%ymm1
    16b5:	c4 e2 7d 79 87 fe 00 	vpbroadcastw 0xfe(%rdi),%ymm0
    16bc:	00 00 
    16be:	49 8d 94 09 00 01 00 	lea    0x100(%r9,%rcx,1),%rdx
    16c5:	00 
    16c6:	c5 e5 fd da          	vpaddw %ymm2,%ymm3,%ymm3
    16ca:	c5 fd d5 12          	vpmullw (%rdx),%ymm0,%ymm2
    16ce:	c4 41 6d fd c0       	vpaddw %ymm8,%ymm2,%ymm8
    16d3:	c5 7d 7f 00          	vmovdqa %ymm8,(%rax)
    16d7:	c5 fd d5 52 20       	vpmullw 0x20(%rdx),%ymm0,%ymm2
    16dc:	c5 ed fd ff          	vpaddw %ymm7,%ymm2,%ymm7
    16e0:	c5 fd 7f 78 20       	vmovdqa %ymm7,0x20(%rax)
    16e5:	c5 fd d5 52 40       	vpmullw 0x40(%rdx),%ymm0,%ymm2
    16ea:	c4 c1 6d fd d1       	vpaddw %ymm9,%ymm2,%ymm2
    16ef:	c5 fd 7f 50 40       	vmovdqa %ymm2,0x40(%rax)
    16f4:	c5 fd d5 52 60       	vpmullw 0x60(%rdx),%ymm0,%ymm2
    16f9:	c5 ed fd d6          	vpaddw %ymm6,%ymm2,%ymm2
    16fd:	c5 fd 7f 50 60       	vmovdqa %ymm2,0x60(%rax)
    1702:	c5 fd d5 92 80 00 00 	vpmullw 0x80(%rdx),%ymm0,%ymm2
    1709:	00 
    170a:	c5 ed fd d5          	vpaddw %ymm5,%ymm2,%ymm2
    170e:	c5 fd 7f 90 80 00 00 	vmovdqa %ymm2,0x80(%rax)
    1715:	00 
    1716:	c5 fd d5 92 a0 00 00 	vpmullw 0xa0(%rdx),%ymm0,%ymm2
    171d:	00 
    171e:	c5 ed fd d4          	vpaddw %ymm4,%ymm2,%ymm2
    1722:	c5 fd 7f 90 a0 00 00 	vmovdqa %ymm2,0xa0(%rax)
    1729:	00 
    172a:	c5 fd d5 92 c0 00 00 	vpmullw 0xc0(%rdx),%ymm0,%ymm2
    1731:	00 
    1732:	c5 ed fd d3          	vpaddw %ymm3,%ymm2,%ymm2
    1736:	c5 fd 7f 90 c0 00 00 	vmovdqa %ymm2,0xc0(%rax)
    173d:	00 
    173e:	c5 fd d5 82 e0 00 00 	vpmullw 0xe0(%rdx),%ymm0,%ymm0
    1745:	00 
    1746:	41 ff c0             	inc    %r8d
    1749:	c5 fd fd c1          	vpaddw %ymm1,%ymm0,%ymm0
    174d:	c5 fd 7f 80 e0 00 00 	vmovdqa %ymm0,0xe0(%rax)
    1754:	00 
    1755:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
    175c:	48 05 00 01 00 00    	add    $0x100,%rax
    1762:	41 81 f8 80 00 00 00 	cmp    $0x80,%r8d
    1769:	0f 85 b0 fd ff ff    	jne    151f <ikj()+0x1f>
    176f:	c5 f8 77             	vzeroupper 
    1772:	c3                   	retq   
    1773:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    177a:	00 00 00 00 
    177e:	66 90                	xchg   %ax,%ax

0000000000001780 <jik()>:
    1780:	f3 0f 1e fa          	endbr64 
    1784:	4c 8d 1d d5 39 00 00 	lea    0x39d5(%rip),%r11        # 5160 <c>
    178b:	49 8d bb 00 80 00 00 	lea    0x8000(%r11),%rdi
    1792:	53                   	push   %rbx
    1793:	4c 8d 15 c6 b9 01 00 	lea    0x1b9c6(%rip),%r10        # 1d160 <std::__ioinit>
    179a:	48 8d 9f 00 01 00 00 	lea    0x100(%rdi),%rbx
    17a1:	4d 8d 82 00 80 ff ff 	lea    -0x8000(%r10),%r8
    17a8:	4c 8d 0d b1 b9 00 00 	lea    0xb9b1(%rip),%r9        # d160 <b>
    17af:	41 0f b7 30          	movzwl (%r8),%esi
    17b3:	4c 89 d8             	mov    %r11,%rax
    17b6:	4c 89 c9             	mov    %r9,%rcx
    17b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    17c0:	0f b7 11             	movzwl (%rcx),%edx
    17c3:	48 05 00 01 00 00    	add    $0x100,%rax
    17c9:	66 0f af 90 00 ff ff 	imul   -0x100(%rax),%dx
    17d0:	ff 
    17d1:	48 83 c1 02          	add    $0x2,%rcx
    17d5:	01 d6                	add    %edx,%esi
    17d7:	48 39 c7             	cmp    %rax,%rdi
    17da:	75 e4                	jne    17c0 <jik()+0x40>
    17dc:	66 41 89 30          	mov    %si,(%r8)
    17e0:	49 81 c0 00 01 00 00 	add    $0x100,%r8
    17e7:	49 81 c1 00 01 00 00 	add    $0x100,%r9
    17ee:	4d 39 c2             	cmp    %r8,%r10
    17f1:	75 bc                	jne    17af <jik()+0x2f>
    17f3:	48 83 c7 02          	add    $0x2,%rdi
    17f7:	49 83 c2 02          	add    $0x2,%r10
    17fb:	49 83 c3 02          	add    $0x2,%r11
    17ff:	48 39 df             	cmp    %rbx,%rdi
    1802:	75 9d                	jne    17a1 <jik()+0x21>
    1804:	5b                   	pop    %rbx
    1805:	c3                   	retq   
    1806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    180d:	00 00 00 

0000000000001810 <jki()>:
    1810:	f3 0f 1e fa          	endbr64 
    1814:	41 57                	push   %r15
    1816:	4c 8d 15 43 39 01 00 	lea    0x13943(%rip),%r10        # 15160 <a>
    181d:	4c 8d 1d 3c b9 00 00 	lea    0xb93c(%rip),%r11        # d160 <b>
    1824:	41 56                	push   %r14
    1826:	49 8d ba 00 80 00 00 	lea    0x8000(%r10),%rdi
    182d:	4c 8d 0d 2c 39 00 00 	lea    0x392c(%rip),%r9        # 5160 <c>
    1834:	41 55                	push   %r13
    1836:	41 54                	push   %r12
    1838:	55                   	push   %rbp
    1839:	49 8d ab 02 80 00 00 	lea    0x8002(%r11),%rbp
    1840:	53                   	push   %rbx
    1841:	31 db                	xor    %ebx,%ebx
    1843:	48 89 ee             	mov    %rbp,%rsi
    1846:	4d 89 cd             	mov    %r9,%r13
    1849:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    184f:	45 0f b7 75 00       	movzwl 0x0(%r13),%r14d
    1854:	45 0f b7 85 00 01 00 	movzwl 0x100(%r13),%r8d
    185b:	00 
    185c:	48 8d 86 00 80 ff ff 	lea    -0x8000(%rsi),%rax
    1863:	4c 89 d2             	mov    %r10,%rdx
    1866:	0f b7 48 fe          	movzwl -0x2(%rax),%ecx
    186a:	44 0f b7 38          	movzwl (%rax),%r15d
    186e:	41 0f af ce          	imul   %r14d,%ecx
    1872:	45 0f af f8          	imul   %r8d,%r15d
    1876:	48 05 00 01 00 00    	add    $0x100,%rax
    187c:	44 01 f9             	add    %r15d,%ecx
    187f:	66 01 0a             	add    %cx,(%rdx)
    1882:	48 81 c2 00 01 00 00 	add    $0x100,%rdx
    1889:	48 39 f0             	cmp    %rsi,%rax
    188c:	75 d8                	jne    1866 <jki()+0x56>
    188e:	45 8d 44 24 01       	lea    0x1(%r12),%r8d
    1893:	41 83 c4 02          	add    $0x2,%r12d
    1897:	49 81 c5 00 02 00 00 	add    $0x200,%r13
    189e:	48 8d 70 04          	lea    0x4(%rax),%rsi
    18a2:	41 83 fc 7f          	cmp    $0x7f,%r12d
    18a6:	75 a7                	jne    184f <jki()+0x3f>
    18a8:	4d 63 c0             	movslq %r8d,%r8
    18ab:	4c 89 c0             	mov    %r8,%rax
    18ae:	48 c1 e0 08          	shl    $0x8,%rax
    18b2:	41 0f b7 34 01       	movzwl (%r9,%rax,1),%esi
    18b7:	4b 8d 14 43          	lea    (%r11,%r8,2),%rdx
    18bb:	4c 89 d0             	mov    %r10,%rax
    18be:	66 90                	xchg   %ax,%ax
    18c0:	0f b7 0a             	movzwl (%rdx),%ecx
    18c3:	48 81 c2 00 01 00 00 	add    $0x100,%rdx
    18ca:	0f af ce             	imul   %esi,%ecx
    18cd:	66 01 08             	add    %cx,(%rax)
    18d0:	48 05 00 01 00 00    	add    $0x100,%rax
    18d6:	48 39 f8             	cmp    %rdi,%rax
    18d9:	75 e5                	jne    18c0 <jki()+0xb0>
    18db:	49 ff c0             	inc    %r8
    18de:	41 81 f8 80 00 00 00 	cmp    $0x80,%r8d
    18e5:	75 c4                	jne    18ab <jki()+0x9b>
    18e7:	48 ff c3             	inc    %rbx
    18ea:	49 83 c2 02          	add    $0x2,%r10
    18ee:	48 8d 78 02          	lea    0x2(%rax),%rdi
    18f2:	49 83 c1 02          	add    $0x2,%r9
    18f6:	48 81 fb 80 00 00 00 	cmp    $0x80,%rbx
    18fd:	0f 85 40 ff ff ff    	jne    1843 <jki()+0x33>
    1903:	5b                   	pop    %rbx
    1904:	5d                   	pop    %rbp
    1905:	41 5c                	pop    %r12
    1907:	41 5d                	pop    %r13
    1909:	41 5e                	pop    %r14
    190b:	41 5f                	pop    %r15
    190d:	c3                   	retq   
    190e:	66 90                	xchg   %ax,%ax

0000000000001910 <kij()>:
    1910:	f3 0f 1e fa          	endbr64 
    1914:	48 8d 15 45 38 00 00 	lea    0x3845(%rip),%rdx        # 5160 <c>
    191b:	48 8d 3d 3e b8 00 00 	lea    0xb83e(%rip),%rdi        # d160 <b>
    1922:	4c 8d 82 00 80 00 00 	lea    0x8000(%rdx),%r8
    1929:	48 8d 35 30 b8 01 00 	lea    0x1b830(%rip),%rsi        # 1d160 <std::__ioinit>
    1930:	48 8d 05 29 38 01 00 	lea    0x13829(%rip),%rax        # 15160 <a>
    1937:	48 89 f9             	mov    %rdi,%rcx
    193a:	c4 e2 7d 79 01       	vpbroadcastw (%rcx),%ymm0
    193f:	48 05 00 01 00 00    	add    $0x100,%rax
    1945:	c5 fd d5 0a          	vpmullw (%rdx),%ymm0,%ymm1
    1949:	c5 f5 fd 88 00 ff ff 	vpaddw -0x100(%rax),%ymm1,%ymm1
    1950:	ff 
    1951:	48 81 c1 00 01 00 00 	add    $0x100,%rcx
    1958:	c5 fd 7f 88 00 ff ff 	vmovdqa %ymm1,-0x100(%rax)
    195f:	ff 
    1960:	c5 fd d5 4a 20       	vpmullw 0x20(%rdx),%ymm0,%ymm1
    1965:	c5 f5 fd 88 20 ff ff 	vpaddw -0xe0(%rax),%ymm1,%ymm1
    196c:	ff 
    196d:	c5 fd 7f 88 20 ff ff 	vmovdqa %ymm1,-0xe0(%rax)
    1974:	ff 
    1975:	c5 fd d5 4a 40       	vpmullw 0x40(%rdx),%ymm0,%ymm1
    197a:	c5 f5 fd 88 40 ff ff 	vpaddw -0xc0(%rax),%ymm1,%ymm1
    1981:	ff 
    1982:	c5 fd 7f 88 40 ff ff 	vmovdqa %ymm1,-0xc0(%rax)
    1989:	ff 
    198a:	c5 fd d5 4a 60       	vpmullw 0x60(%rdx),%ymm0,%ymm1
    198f:	c5 f5 fd 88 60 ff ff 	vpaddw -0xa0(%rax),%ymm1,%ymm1
    1996:	ff 
    1997:	c5 fd 7f 88 60 ff ff 	vmovdqa %ymm1,-0xa0(%rax)
    199e:	ff 
    199f:	c5 fd d5 8a 80 00 00 	vpmullw 0x80(%rdx),%ymm0,%ymm1
    19a6:	00 
    19a7:	c5 f5 fd 48 80       	vpaddw -0x80(%rax),%ymm1,%ymm1
    19ac:	c5 fd 7f 48 80       	vmovdqa %ymm1,-0x80(%rax)
    19b1:	c5 fd d5 8a a0 00 00 	vpmullw 0xa0(%rdx),%ymm0,%ymm1
    19b8:	00 
    19b9:	c5 f5 fd 48 a0       	vpaddw -0x60(%rax),%ymm1,%ymm1
    19be:	c5 fd 7f 48 a0       	vmovdqa %ymm1,-0x60(%rax)
    19c3:	c5 fd d5 8a c0 00 00 	vpmullw 0xc0(%rdx),%ymm0,%ymm1
    19ca:	00 
    19cb:	c5 f5 fd 48 c0       	vpaddw -0x40(%rax),%ymm1,%ymm1
    19d0:	c5 fd 7f 48 c0       	vmovdqa %ymm1,-0x40(%rax)
    19d5:	c5 fd d5 82 e0 00 00 	vpmullw 0xe0(%rdx),%ymm0,%ymm0
    19dc:	00 
    19dd:	c5 fd fd 40 e0       	vpaddw -0x20(%rax),%ymm0,%ymm0
    19e2:	c5 fd 7f 40 e0       	vmovdqa %ymm0,-0x20(%rax)
    19e7:	48 39 f0             	cmp    %rsi,%rax
    19ea:	0f 85 4a ff ff ff    	jne    193a <kij()+0x2a>
    19f0:	48 81 c2 00 01 00 00 	add    $0x100,%rdx
    19f7:	48 83 c7 02          	add    $0x2,%rdi
    19fb:	4c 39 c2             	cmp    %r8,%rdx
    19fe:	0f 85 2c ff ff ff    	jne    1930 <kij()+0x20>
    1a04:	c5 f8 77             	vzeroupper 
    1a07:	c3                   	retq   
    1a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1a0f:	00 

0000000000001a10 <kji()>:
    1a10:	f3 0f 1e fa          	endbr64 
    1a14:	48 8d 0d 45 b7 00 00 	lea    0xb745(%rip),%rcx        # d160 <b>
    1a1b:	48 8d 35 3e 37 00 00 	lea    0x373e(%rip),%rsi        # 5160 <c>
    1a22:	4c 8d 89 00 01 00 00 	lea    0x100(%rcx),%r9
    1a29:	4c 8d 05 30 38 01 00 	lea    0x13830(%rip),%r8        # 15260 <a+0x100>
    1a30:	48 89 f7             	mov    %rsi,%rdi
    1a33:	48 8d 15 26 37 01 00 	lea    0x13726(%rip),%rdx        # 15160 <a>
    1a3a:	c5 fd 6f 0f          	vmovdqa (%rdi),%ymm1
    1a3e:	31 c0                	xor    %eax,%eax
    1a40:	c4 e2 7d 79 04 01    	vpbroadcastw (%rcx,%rax,1),%ymm0
    1a46:	c5 fd d5 c1          	vpmullw %ymm1,%ymm0,%ymm0
    1a4a:	c5 fd fd 04 02       	vpaddw (%rdx,%rax,1),%ymm0,%ymm0
    1a4f:	c5 fd 7f 04 02       	vmovdqa %ymm0,(%rdx,%rax,1)
    1a54:	48 05 00 01 00 00    	add    $0x100,%rax
    1a5a:	48 3d 00 80 00 00    	cmp    $0x8000,%rax
    1a60:	75 de                	jne    1a40 <kji()+0x30>
    1a62:	48 83 c2 20          	add    $0x20,%rdx
    1a66:	48 83 c7 20          	add    $0x20,%rdi
    1a6a:	4c 39 c2             	cmp    %r8,%rdx
    1a6d:	75 cb                	jne    1a3a <kji()+0x2a>
    1a6f:	48 83 c1 02          	add    $0x2,%rcx
    1a73:	48 81 c6 00 01 00 00 	add    $0x100,%rsi
    1a7a:	49 39 c9             	cmp    %rcx,%r9
    1a7d:	75 b1                	jne    1a30 <kji()+0x20>
    1a7f:	c5 f8 77             	vzeroupper 
    1a82:	c3                   	retq   
    1a83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1a8a:	00 00 00 
    1a8d:	0f 1f 00             	nopl   (%rax)

0000000000001a90 <std::ctype<char>::do_widen(char) const>:
    1a90:	f3 0f 1e fa          	endbr64 
    1a94:	89 f0                	mov    %esi,%eax
    1a96:	c3                   	retq   
    1a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1a9e:	00 00 

0000000000001aa0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)>:
    1aa0:	f3 0f 1e fa          	endbr64 
    1aa4:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    1aa8:	49 89 c2             	mov    %rax,%r10
    1aab:	49 c1 ea 3f          	shr    $0x3f,%r10
    1aaf:	49 01 c2             	add    %rax,%r10
    1ab2:	49 89 d3             	mov    %rdx,%r11
    1ab5:	49 d1 fa             	sar    %r10
    1ab8:	41 83 e3 01          	and    $0x1,%r11d
    1abc:	4c 39 d6             	cmp    %r10,%rsi
    1abf:	0f 8d bb 00 00 00    	jge    1b80 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xe0>
    1ac5:	49 89 f1             	mov    %rsi,%r9
    1ac8:	eb 20                	jmp    1aea <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x4a>
    1aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1ad0:	48 ff c8             	dec    %rax
    1ad3:	4c 8d 04 c7          	lea    (%rdi,%rax,8),%r8
    1ad7:	c4 c1 7b 10 08       	vmovsd (%r8),%xmm1
    1adc:	c4 a1 7b 11 0c cf    	vmovsd %xmm1,(%rdi,%r9,8)
    1ae2:	49 39 c2             	cmp    %rax,%r10
    1ae5:	7e 30                	jle    1b17 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x77>
    1ae7:	49 89 c1             	mov    %rax,%r9
    1aea:	49 8d 49 01          	lea    0x1(%r9),%rcx
    1aee:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    1af2:	48 c1 e1 04          	shl    $0x4,%rcx
    1af6:	c5 fb 10 4c 0f f8    	vmovsd -0x8(%rdi,%rcx,1),%xmm1
    1afc:	4c 8d 04 0f          	lea    (%rdi,%rcx,1),%r8
    1b00:	c4 c1 79 2f 08       	vcomisd (%r8),%xmm1
    1b05:	77 c9                	ja     1ad0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x30>
    1b07:	c4 c1 7b 10 08       	vmovsd (%r8),%xmm1
    1b0c:	c4 a1 7b 11 0c cf    	vmovsd %xmm1,(%rdi,%r9,8)
    1b12:	49 39 c2             	cmp    %rax,%r10
    1b15:	7f d0                	jg     1ae7 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x47>
    1b17:	4d 85 db             	test   %r11,%r11
    1b1a:	74 74                	je     1b90 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xf0>
    1b1c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1b20:	48 89 d1             	mov    %rdx,%rcx
    1b23:	48 c1 e9 3f          	shr    $0x3f,%rcx
    1b27:	48 01 d1             	add    %rdx,%rcx
    1b2a:	48 d1 f9             	sar    %rcx
    1b2d:	48 39 f0             	cmp    %rsi,%rax
    1b30:	7f 2f                	jg     1b61 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xc1>
    1b32:	eb 3c                	jmp    1b70 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xd0>
    1b34:	0f 1f 40 00          	nopl   0x0(%rax)
    1b38:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    1b3c:	48 89 d0             	mov    %rdx,%rax
    1b3f:	48 c1 e8 3f          	shr    $0x3f,%rax
    1b43:	48 01 d0             	add    %rdx,%rax
    1b46:	c4 c1 7b 10 09       	vmovsd (%r9),%xmm1
    1b4b:	48 d1 f8             	sar    %rax
    1b4e:	48 89 c2             	mov    %rax,%rdx
    1b51:	c4 c1 7b 11 08       	vmovsd %xmm1,(%r8)
    1b56:	48 89 c8             	mov    %rcx,%rax
    1b59:	48 39 ce             	cmp    %rcx,%rsi
    1b5c:	7d 72                	jge    1bd0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x130>
    1b5e:	48 89 d1             	mov    %rdx,%rcx
    1b61:	4c 8d 0c cf          	lea    (%rdi,%rcx,8),%r9
    1b65:	c4 c1 79 2f 01       	vcomisd (%r9),%xmm0
    1b6a:	4c 8d 04 c7          	lea    (%rdi,%rax,8),%r8
    1b6e:	77 c8                	ja     1b38 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x98>
    1b70:	c4 c1 7b 11 00       	vmovsd %xmm0,(%r8)
    1b75:	c3                   	retq   
    1b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1b7d:	00 00 00 
    1b80:	4c 8d 04 f7          	lea    (%rdi,%rsi,8),%r8
    1b84:	4d 85 db             	test   %r11,%r11
    1b87:	75 e7                	jne    1b70 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xd0>
    1b89:	48 89 f0             	mov    %rsi,%rax
    1b8c:	0f 1f 40 00          	nopl   0x0(%rax)
    1b90:	48 83 ea 02          	sub    $0x2,%rdx
    1b94:	48 89 d1             	mov    %rdx,%rcx
    1b97:	48 c1 e9 3f          	shr    $0x3f,%rcx
    1b9b:	48 01 ca             	add    %rcx,%rdx
    1b9e:	48 d1 fa             	sar    %rdx
    1ba1:	48 39 c2             	cmp    %rax,%rdx
    1ba4:	0f 85 72 ff ff ff    	jne    1b1c <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x7c>
    1baa:	48 8d 44 00 02       	lea    0x2(%rax,%rax,1),%rax
    1baf:	c5 fb 10 4c c7 f8    	vmovsd -0x8(%rdi,%rax,8),%xmm1
    1bb5:	48 ff c8             	dec    %rax
    1bb8:	c4 c1 7b 11 08       	vmovsd %xmm1,(%r8)
    1bbd:	4c 8d 04 c7          	lea    (%rdi,%rax,8),%r8
    1bc1:	e9 56 ff ff ff       	jmpq   1b1c <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x7c>
    1bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1bcd:	00 00 00 
    1bd0:	4d 89 c8             	mov    %r9,%r8
    1bd3:	c4 c1 7b 11 00       	vmovsd %xmm0,(%r8)
    1bd8:	c3                   	retq   
    1bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001be0 <void test<void ()>(void (&)(), char const*)>:
    1be0:	f3 0f 1e fa          	endbr64 
    1be4:	41 57                	push   %r15
    1be6:	ba 00 80 00 00       	mov    $0x8000,%edx
    1beb:	41 56                	push   %r14
    1bed:	41 55                	push   %r13
    1bef:	49 89 fd             	mov    %rdi,%r13
    1bf2:	48 8d 3d 67 35 01 00 	lea    0x13567(%rip),%rdi        # 15160 <a>
    1bf9:	41 54                	push   %r12
    1bfb:	55                   	push   %rbp
    1bfc:	48 89 f5             	mov    %rsi,%rbp
    1bff:	31 f6                	xor    %esi,%esi
    1c01:	53                   	push   %rbx
    1c02:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    1c09:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    1c0e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1c15:	00 00 
    1c17:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
    1c1e:	00 
    1c1f:	31 c0                	xor    %eax,%eax
    1c21:	49 89 df             	mov    %rbx,%r15
    1c24:	e8 37 f5 ff ff       	callq  1160 <memset@plt>
    1c29:	4c 8d a4 24 18 01 00 	lea    0x118(%rsp),%r12
    1c30:	00 
    1c31:	e8 0a f5 ff ff       	callq  1140 <std::chrono::_V2::system_clock::now()@plt>
    1c36:	49 89 c6             	mov    %rax,%r14
    1c39:	41 ff d5             	callq  *%r13
    1c3c:	e8 ff f4 ff ff       	callq  1140 <std::chrono::_V2::system_clock::now()@plt>
    1c41:	4c 29 f0             	sub    %r14,%rax
    1c44:	c5 d9 57 e4          	vxorpd %xmm4,%xmm4,%xmm4
    1c48:	c4 e1 db 2a c0       	vcvtsi2sd %rax,%xmm4,%xmm0
    1c4d:	49 83 c7 08          	add    $0x8,%r15
    1c51:	c5 fb 5e 05 2f 14 00 	vdivsd 0x142f(%rip),%xmm0,%xmm0        # 3088 <_IO_stdin_used+0x88>
    1c58:	00 
    1c59:	c4 c1 7b 11 47 f8    	vmovsd %xmm0,-0x8(%r15)
    1c5f:	4d 39 fc             	cmp    %r15,%r12
    1c62:	75 cd                	jne    1c31 <void test<void ()>(void (&)(), char const*)+0x51>
    1c64:	c5 fb 10 54 24 10    	vmovsd 0x10(%rsp),%xmm2
    1c6a:	b9 0a 00 00 00       	mov    $0xa,%ecx
    1c6f:	b8 08 01 00 00       	mov    $0x108,%eax
    1c74:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
    1c7b:	00 
    1c7c:	48 c1 f8 04          	sar    $0x4,%rax
    1c80:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    1c84:	c5 fb 10 5b 08       	vmovsd 0x8(%rbx),%xmm3
    1c89:	c5 fb 10 08          	vmovsd (%rax),%xmm1
    1c8d:	c4 c1 7b 10 44 24 f8 	vmovsd -0x8(%r12),%xmm0
    1c94:	c5 f9 2f cb          	vcomisd %xmm3,%xmm1
    1c98:	48 8d 53 08          	lea    0x8(%rbx),%rdx
    1c9c:	0f 86 61 02 00 00    	jbe    1f03 <void test<void ()>(void (&)(), char const*)+0x323>
    1ca2:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    1ca6:	0f 87 6b 02 00 00    	ja     1f17 <void test<void ()>(void (&)(), char const*)+0x337>
    1cac:	c5 f9 2f c3          	vcomisd %xmm3,%xmm0
    1cb0:	0f 86 22 03 00 00    	jbe    1fd8 <void test<void ()>(void (&)(), char const*)+0x3f8>
    1cb6:	c5 fb 11 03          	vmovsd %xmm0,(%rbx)
    1cba:	c4 c1 7b 11 54 24 f8 	vmovsd %xmm2,-0x8(%r12)
    1cc1:	c5 f9 28 c2          	vmovapd %xmm2,%xmm0
    1cc5:	c5 fb 10 0b          	vmovsd (%rbx),%xmm1
    1cc9:	4c 89 e0             	mov    %r12,%rax
    1ccc:	0f 1f 40 00          	nopl   0x0(%rax)
    1cd0:	c5 fb 10 12          	vmovsd (%rdx),%xmm2
    1cd4:	c5 f9 2f ca          	vcomisd %xmm2,%xmm1
    1cd8:	77 37                	ja     1d11 <void test<void ()>(void (&)(), char const*)+0x131>
    1cda:	48 83 e8 08          	sub    $0x8,%rax
    1cde:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    1ce2:	76 13                	jbe    1cf7 <void test<void ()>(void (&)(), char const*)+0x117>
    1ce4:	0f 1f 40 00          	nopl   0x0(%rax)
    1ce8:	c5 fb 10 40 f8       	vmovsd -0x8(%rax),%xmm0
    1ced:	48 83 e8 08          	sub    $0x8,%rax
    1cf1:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    1cf5:	77 f1                	ja     1ce8 <void test<void ()>(void (&)(), char const*)+0x108>
    1cf7:	48 39 c2             	cmp    %rax,%rdx
    1cfa:	73 1b                	jae    1d17 <void test<void ()>(void (&)(), char const*)+0x137>
    1cfc:	c5 fb 10 00          	vmovsd (%rax),%xmm0
    1d00:	c5 fb 11 02          	vmovsd %xmm0,(%rdx)
    1d04:	c5 fb 11 10          	vmovsd %xmm2,(%rax)
    1d08:	c5 fb 10 0b          	vmovsd (%rbx),%xmm1
    1d0c:	c5 fb 10 40 f8       	vmovsd -0x8(%rax),%xmm0
    1d11:	48 83 c2 08          	add    $0x8,%rdx
    1d15:	eb b9                	jmp    1cd0 <void test<void ()>(void (&)(), char const*)+0xf0>
    1d17:	48 39 f2             	cmp    %rsi,%rdx
    1d1a:	0f 86 0b 02 00 00    	jbe    1f2b <void test<void ()>(void (&)(), char const*)+0x34b>
    1d20:	49 89 d4             	mov    %rdx,%r12
    1d23:	4c 89 e0             	mov    %r12,%rax
    1d26:	48 29 d8             	sub    %rbx,%rax
    1d29:	c5 f9 28 d1          	vmovapd %xmm1,%xmm2
    1d2d:	48 83 f8 18          	cmp    $0x18,%rax
    1d31:	0f 8e 07 02 00 00    	jle    1f3e <void test<void ()>(void (&)(), char const*)+0x35e>
    1d37:	48 ff c9             	dec    %rcx
    1d3a:	0f 85 3c ff ff ff    	jne    1c7c <void test<void ()>(void (&)(), char const*)+0x9c>
    1d40:	4c 8d ac 24 98 00 00 	lea    0x98(%rsp),%r13
    1d47:	00 
    1d48:	4d 89 ef             	mov    %r13,%r15
    1d4b:	49 29 df             	sub    %rbx,%r15
    1d4e:	49 83 ff 08          	cmp    $0x8,%r15
    1d52:	7e 41                	jle    1d95 <void test<void ()>(void (&)(), char const*)+0x1b5>
    1d54:	4c 89 fa             	mov    %r15,%rdx
    1d57:	48 c1 fa 03          	sar    $0x3,%rdx
    1d5b:	48 8d 42 fe          	lea    -0x2(%rdx),%rax
    1d5f:	49 89 c6             	mov    %rax,%r14
    1d62:	49 c1 ee 3f          	shr    $0x3f,%r14
    1d66:	49 01 c6             	add    %rax,%r14
    1d69:	49 d1 fe             	sar    %r14
    1d6c:	eb 03                	jmp    1d71 <void test<void ()>(void (&)(), char const*)+0x191>
    1d6e:	49 ff ce             	dec    %r14
    1d71:	c4 a1 7b 10 04 f3    	vmovsd (%rbx,%r14,8),%xmm0
    1d77:	4c 89 f6             	mov    %r14,%rsi
    1d7a:	48 89 df             	mov    %rbx,%rdi
    1d7d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1d82:	e8 19 fd ff ff       	callq  1aa0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)>
    1d87:	4d 85 f6             	test   %r14,%r14
    1d8a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1d8f:	75 dd                	jne    1d6e <void test<void ()>(void (&)(), char const*)+0x18e>
    1d91:	c5 fb 10 13          	vmovsd (%rbx),%xmm2
    1d95:	49 c1 ff 03          	sar    $0x3,%r15
    1d99:	4d 39 ec             	cmp    %r13,%r12
    1d9c:	77 0b                	ja     1da9 <void test<void ()>(void (&)(), char const*)+0x1c9>
    1d9e:	eb 3b                	jmp    1ddb <void test<void ()>(void (&)(), char const*)+0x1fb>
    1da0:	49 83 c5 08          	add    $0x8,%r13
    1da4:	4d 39 ec             	cmp    %r13,%r12
    1da7:	76 32                	jbe    1ddb <void test<void ()>(void (&)(), char const*)+0x1fb>
    1da9:	c4 c1 79 2f 55 00    	vcomisd 0x0(%r13),%xmm2
    1daf:	76 ef                	jbe    1da0 <void test<void ()>(void (&)(), char const*)+0x1c0>
    1db1:	c5 fb 10 0b          	vmovsd (%rbx),%xmm1
    1db5:	c4 c1 7b 10 45 00    	vmovsd 0x0(%r13),%xmm0
    1dbb:	4c 89 fa             	mov    %r15,%rdx
    1dbe:	c4 c1 7b 11 4d 00    	vmovsd %xmm1,0x0(%r13)
    1dc4:	31 f6                	xor    %esi,%esi
    1dc6:	48 89 df             	mov    %rbx,%rdi
    1dc9:	49 83 c5 08          	add    $0x8,%r13
    1dcd:	e8 ce fc ff ff       	callq  1aa0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)>
    1dd2:	c5 fb 10 13          	vmovsd (%rbx),%xmm2
    1dd6:	4d 39 ec             	cmp    %r13,%r12
    1dd9:	77 ce                	ja     1da9 <void test<void ()>(void (&)(), char const*)+0x1c9>
    1ddb:	c5 fb 10 84 24 90 00 	vmovsd 0x90(%rsp),%xmm0
    1de2:	00 00 
    1de4:	c5 fb 11 03          	vmovsd %xmm0,(%rbx)
    1de8:	c5 fb 11 94 24 90 00 	vmovsd %xmm2,0x90(%rsp)
    1def:	00 00 
    1df1:	48 85 ed             	test   %rbp,%rbp
    1df4:	0f 84 25 02 00 00    	je     201f <void test<void ()>(void (&)(), char const*)+0x43f>
    1dfa:	48 89 ef             	mov    %rbp,%rdi
    1dfd:	e8 4e f3 ff ff       	callq  1150 <strlen@plt>
    1e02:	48 89 c2             	mov    %rax,%rdx
    1e05:	48 89 ee             	mov    %rbp,%rsi
    1e08:	48 8d 3d 31 32 00 00 	lea    0x3231(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1e0f:	e8 9c f3 ff ff       	callq  11b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1e14:	48 8d 1d 25 32 00 00 	lea    0x3225(%rip),%rbx        # 5040 <std::cout@@GLIBCXX_3.4>
    1e1b:	48 8d 35 e2 11 00 00 	lea    0x11e2(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1e22:	ba 01 00 00 00       	mov    $0x1,%edx
    1e27:	48 8d 3d 12 32 00 00 	lea    0x3212(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1e2e:	e8 7d f3 ff ff       	callq  11b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1e33:	48 8b 0d 06 32 00 00 	mov    0x3206(%rip),%rcx        # 5040 <std::cout@@GLIBCXX_3.4>
    1e3a:	c5 fb 10 84 24 90 00 	vmovsd 0x90(%rsp),%xmm0
    1e41:	00 00 
    1e43:	48 8b 51 e8          	mov    -0x18(%rcx),%rdx
    1e47:	48 8d 3d f2 31 00 00 	lea    0x31f2(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1e4e:	48 01 da             	add    %rbx,%rdx
    1e51:	8b 42 18             	mov    0x18(%rdx),%eax
    1e54:	48 c7 42 08 02 00 00 	movq   $0x2,0x8(%rdx)
    1e5b:	00 
    1e5c:	25 fb fe ff ff       	and    $0xfffffefb,%eax
    1e61:	83 c8 04             	or     $0x4,%eax
    1e64:	89 42 18             	mov    %eax,0x18(%rdx)
    1e67:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    1e6b:	48 c7 44 03 10 06 00 	movq   $0x6,0x10(%rbx,%rax,1)
    1e72:	00 00 
    1e74:	e8 77 f3 ff ff       	callq  11f0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    1e79:	48 89 c5             	mov    %rax,%rbp
    1e7c:	ba 02 00 00 00       	mov    $0x2,%edx
    1e81:	48 8d 35 7e 11 00 00 	lea    0x117e(%rip),%rsi        # 3006 <_IO_stdin_used+0x6>
    1e88:	48 89 c7             	mov    %rax,%rdi
    1e8b:	e8 20 f3 ff ff       	callq  11b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1e90:	48 8b 45 00          	mov    0x0(%rbp),%rax
    1e94:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    1e98:	4c 8b a4 05 f0 00 00 	mov    0xf0(%rbp,%rax,1),%r12
    1e9f:	00 
    1ea0:	4d 85 e4             	test   %r12,%r12
    1ea3:	0f 84 cb 01 00 00    	je     2074 <void test<void ()>(void (&)(), char const*)+0x494>
    1ea9:	41 80 7c 24 38 00    	cmpb   $0x0,0x38(%r12)
    1eaf:	0f 84 38 01 00 00    	je     1fed <void test<void ()>(void (&)(), char const*)+0x40d>
    1eb5:	41 0f be 74 24 43    	movsbl 0x43(%r12),%esi
    1ebb:	48 89 ef             	mov    %rbp,%rdi
    1ebe:	e8 6d f2 ff ff       	callq  1130 <std::ostream::put(char)@plt>
    1ec3:	48 89 c7             	mov    %rax,%rdi
    1ec6:	e8 b5 f2 ff ff       	callq  1180 <std::ostream::flush()@plt>
    1ecb:	66 81 3d 8a b2 01 00 	cmpw   $0x6300,0x1b28a(%rip)        # 1d15e <a+0x7ffe>
    1ed2:	00 63 
    1ed4:	0f 85 7b 01 00 00    	jne    2055 <void test<void ()>(void (&)(), char const*)+0x475>
    1eda:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
    1ee1:	00 
    1ee2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1ee9:	00 00 
    1eeb:	0f 85 5f 01 00 00    	jne    2050 <void test<void ()>(void (&)(), char const*)+0x470>
    1ef1:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    1ef8:	5b                   	pop    %rbx
    1ef9:	5d                   	pop    %rbp
    1efa:	41 5c                	pop    %r12
    1efc:	41 5d                	pop    %r13
    1efe:	41 5e                	pop    %r14
    1f00:	41 5f                	pop    %r15
    1f02:	c3                   	retq   
    1f03:	c5 f9 2f c3          	vcomisd %xmm3,%xmm0
    1f07:	0f 87 cb 00 00 00    	ja     1fd8 <void test<void ()>(void (&)(), char const*)+0x3f8>
    1f0d:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    1f11:	0f 87 9f fd ff ff    	ja     1cb6 <void test<void ()>(void (&)(), char const*)+0xd6>
    1f17:	c5 fb 11 0b          	vmovsd %xmm1,(%rbx)
    1f1b:	c5 fb 11 10          	vmovsd %xmm2,(%rax)
    1f1f:	c4 c1 7b 10 44 24 f8 	vmovsd -0x8(%r12),%xmm0
    1f26:	e9 9a fd ff ff       	jmpq   1cc5 <void test<void ()>(void (&)(), char const*)+0xe5>
    1f2b:	48 89 d3             	mov    %rdx,%rbx
    1f2e:	4c 89 e0             	mov    %r12,%rax
    1f31:	48 29 d8             	sub    %rbx,%rax
    1f34:	48 83 f8 18          	cmp    $0x18,%rax
    1f38:	0f 8f f9 fd ff ff    	jg     1d37 <void test<void ()>(void (&)(), char const*)+0x157>
    1f3e:	4c 39 e3             	cmp    %r12,%rbx
    1f41:	0f 84 aa fe ff ff    	je     1df1 <void test<void ()>(void (&)(), char const*)+0x211>
    1f47:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
    1f4b:	4d 39 ec             	cmp    %r13,%r12
    1f4e:	0f 84 9d fe ff ff    	je     1df1 <void test<void ()>(void (&)(), char const*)+0x211>
    1f54:	41 be 08 00 00 00    	mov    $0x8,%r14d
    1f5a:	eb 3b                	jmp    1f97 <void test<void ()>(void (&)(), char const*)+0x3b7>
    1f5c:	49 39 dd             	cmp    %rbx,%r13
    1f5f:	74 21                	je     1f82 <void test<void ()>(void (&)(), char const*)+0x3a2>
    1f61:	4a 8d 04 33          	lea    (%rbx,%r14,1),%rax
    1f65:	4c 89 ea             	mov    %r13,%rdx
    1f68:	48 29 da             	sub    %rbx,%rdx
    1f6b:	48 89 de             	mov    %rbx,%rsi
    1f6e:	48 89 c7             	mov    %rax,%rdi
    1f71:	c5 fb 11 44 24 08    	vmovsd %xmm0,0x8(%rsp)
    1f77:	e8 84 f2 ff ff       	callq  1200 <memmove@plt>
    1f7c:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    1f82:	c5 fb 11 03          	vmovsd %xmm0,(%rbx)
    1f86:	49 83 c5 08          	add    $0x8,%r13
    1f8a:	4d 39 ec             	cmp    %r13,%r12
    1f8d:	0f 84 5e fe ff ff    	je     1df1 <void test<void ()>(void (&)(), char const*)+0x211>
    1f93:	c5 fb 10 13          	vmovsd (%rbx),%xmm2
    1f97:	c4 c1 7b 10 45 00    	vmovsd 0x0(%r13),%xmm0
    1f9d:	c5 f9 2f d0          	vcomisd %xmm0,%xmm2
    1fa1:	77 b9                	ja     1f5c <void test<void ()>(void (&)(), char const*)+0x37c>
    1fa3:	c4 c1 7b 10 4d f8    	vmovsd -0x8(%r13),%xmm1
    1fa9:	49 8d 45 f8          	lea    -0x8(%r13),%rax
    1fad:	c5 f9 2f c8          	vcomisd %xmm0,%xmm1
    1fb1:	0f 86 8d 00 00 00    	jbe    2044 <void test<void ()>(void (&)(), char const*)+0x464>
    1fb7:	c5 fb 10 08          	vmovsd (%rax),%xmm1
    1fbb:	48 89 c2             	mov    %rax,%rdx
    1fbe:	c5 fb 11 48 08       	vmovsd %xmm1,0x8(%rax)
    1fc3:	c5 fb 10 48 f8       	vmovsd -0x8(%rax),%xmm1
    1fc8:	48 83 e8 08          	sub    $0x8,%rax
    1fcc:	c5 f9 2f c8          	vcomisd %xmm0,%xmm1
    1fd0:	77 e5                	ja     1fb7 <void test<void ()>(void (&)(), char const*)+0x3d7>
    1fd2:	c5 fb 11 02          	vmovsd %xmm0,(%rdx)
    1fd6:	eb ae                	jmp    1f86 <void test<void ()>(void (&)(), char const*)+0x3a6>
    1fd8:	c5 fb 11 1b          	vmovsd %xmm3,(%rbx)
    1fdc:	c5 fb 11 53 08       	vmovsd %xmm2,0x8(%rbx)
    1fe1:	c4 c1 7b 10 44 24 f8 	vmovsd -0x8(%r12),%xmm0
    1fe8:	e9 d8 fc ff ff       	jmpq   1cc5 <void test<void ()>(void (&)(), char const*)+0xe5>
    1fed:	4c 89 e7             	mov    %r12,%rdi
    1ff0:	e8 cb f1 ff ff       	callq  11c0 <std::ctype<char>::_M_widen_init() const@plt>
    1ff5:	49 8b 04 24          	mov    (%r12),%rax
    1ff9:	48 8d 15 90 fa ff ff 	lea    -0x570(%rip),%rdx        # 1a90 <std::ctype<char>::do_widen(char) const>
    2000:	48 8b 40 30          	mov    0x30(%rax),%rax
    2004:	be 0a 00 00 00       	mov    $0xa,%esi
    2009:	48 39 d0             	cmp    %rdx,%rax
    200c:	0f 84 a9 fe ff ff    	je     1ebb <void test<void ()>(void (&)(), char const*)+0x2db>
    2012:	4c 89 e7             	mov    %r12,%rdi
    2015:	ff d0                	callq  *%rax
    2017:	0f be f0             	movsbl %al,%esi
    201a:	e9 9c fe ff ff       	jmpq   1ebb <void test<void ()>(void (&)(), char const*)+0x2db>
    201f:	48 8b 05 1a 30 00 00 	mov    0x301a(%rip),%rax        # 5040 <std::cout@@GLIBCXX_3.4>
    2026:	48 8d 1d 13 30 00 00 	lea    0x3013(%rip),%rbx        # 5040 <std::cout@@GLIBCXX_3.4>
    202d:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    2031:	48 01 df             	add    %rbx,%rdi
    2034:	8b 77 20             	mov    0x20(%rdi),%esi
    2037:	83 ce 01             	or     $0x1,%esi
    203a:	e8 d1 f1 ff ff       	callq  1210 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    203f:	e9 d7 fd ff ff       	jmpq   1e1b <void test<void ()>(void (&)(), char const*)+0x23b>
    2044:	4c 89 ea             	mov    %r13,%rdx
    2047:	c5 fb 11 02          	vmovsd %xmm0,(%rdx)
    204b:	e9 36 ff ff ff       	jmpq   1f86 <void test<void ()>(void (&)(), char const*)+0x3a6>
    2050:	e8 4b f1 ff ff       	callq  11a0 <__stack_chk_fail@plt>
    2055:	48 8d 0d bc 0f 00 00 	lea    0xfbc(%rip),%rcx        # 3018 <_IO_stdin_used+0x18>
    205c:	ba 51 00 00 00       	mov    $0x51,%edx
    2061:	48 8d 35 a1 0f 00 00 	lea    0xfa1(%rip),%rsi        # 3009 <_IO_stdin_used+0x9>
    2068:	48 8d 3d d9 0f 00 00 	lea    0xfd9(%rip),%rdi        # 3048 <_IO_stdin_used+0x48>
    206f:	e8 fc f0 ff ff       	callq  1170 <__assert_fail@plt>
    2074:	e8 57 f1 ff ff       	callq  11d0 <std::__throw_bad_cast()@plt>
    2079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002080 <__libc_csu_init>:
    2080:	f3 0f 1e fa          	endbr64 
    2084:	41 57                	push   %r15
    2086:	4c 8d 3d 9b 2c 00 00 	lea    0x2c9b(%rip),%r15        # 4d28 <__frame_dummy_init_array_entry>
    208d:	41 56                	push   %r14
    208f:	49 89 d6             	mov    %rdx,%r14
    2092:	41 55                	push   %r13
    2094:	49 89 f5             	mov    %rsi,%r13
    2097:	41 54                	push   %r12
    2099:	41 89 fc             	mov    %edi,%r12d
    209c:	55                   	push   %rbp
    209d:	48 8d 2d 94 2c 00 00 	lea    0x2c94(%rip),%rbp        # 4d38 <__do_global_dtors_aux_fini_array_entry>
    20a4:	53                   	push   %rbx
    20a5:	4c 29 fd             	sub    %r15,%rbp
    20a8:	48 83 ec 08          	sub    $0x8,%rsp
    20ac:	e8 4f ef ff ff       	callq  1000 <_init>
    20b1:	48 c1 fd 03          	sar    $0x3,%rbp
    20b5:	74 1f                	je     20d6 <__libc_csu_init+0x56>
    20b7:	31 db                	xor    %ebx,%ebx
    20b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    20c0:	4c 89 f2             	mov    %r14,%rdx
    20c3:	4c 89 ee             	mov    %r13,%rsi
    20c6:	44 89 e7             	mov    %r12d,%edi
    20c9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    20cd:	48 83 c3 01          	add    $0x1,%rbx
    20d1:	48 39 dd             	cmp    %rbx,%rbp
    20d4:	75 ea                	jne    20c0 <__libc_csu_init+0x40>
    20d6:	48 83 c4 08          	add    $0x8,%rsp
    20da:	5b                   	pop    %rbx
    20db:	5d                   	pop    %rbp
    20dc:	41 5c                	pop    %r12
    20de:	41 5d                	pop    %r13
    20e0:	41 5e                	pop    %r14
    20e2:	41 5f                	pop    %r15
    20e4:	c3                   	retq   
    20e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    20ec:	00 00 00 00 

00000000000020f0 <__libc_csu_fini>:
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	c3                   	retq   

Desensamblado de la sección .fini:

00000000000020f8 <_fini>:
    20f8:	f3 0f 1e fa          	endbr64 
    20fc:	48 83 ec 08          	sub    $0x8,%rsp
    2100:	48 83 c4 08          	add    $0x8,%rsp
    2104:	c3                   	retq   
