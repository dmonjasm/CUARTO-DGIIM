
ijk-f:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000001020 <.plt>:
    1020:	ff 35 22 3f 00 00    	pushq  0x3f22(%rip)        # 4f48 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 23 3f 00 00 	bnd jmpq *0x3f23(%rip)        # 4f50 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop

Desensamblado de la sección .plt.got:

0000000000001120 <__cxa_finalize@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 a5 3e 00 00 	bnd jmpq *0x3ea5(%rip)        # 4fd0 <__cxa_finalize@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .plt.sec:

0000000000001130 <std::ostream::put(char)@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 1d 3e 00 00 	bnd jmpq *0x3e1d(%rip)        # 4f58 <std::ostream::put(char)@GLIBCXX_3.4>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <std::chrono::_V2::system_clock::now()@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 15 3e 00 00 	bnd jmpq *0x3e15(%rip)        # 4f60 <std::chrono::_V2::system_clock::now()@GLIBCXX_3.4.19>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <strlen@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 0d 3e 00 00 	bnd jmpq *0x3e0d(%rip)        # 4f68 <strlen@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <memset@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 05 3e 00 00 	bnd jmpq *0x3e05(%rip)        # 4f70 <memset@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__assert_fail@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 fd 3d 00 00 	bnd jmpq *0x3dfd(%rip)        # 4f78 <__assert_fail@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <std::ostream::flush()@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 f5 3d 00 00 	bnd jmpq *0x3df5(%rip)        # 4f80 <std::ostream::flush()@GLIBCXX_3.4>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <__cxa_atexit@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 ed 3d 00 00 	bnd jmpq *0x3ded(%rip)        # 4f88 <__cxa_atexit@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <__stack_chk_fail@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 e5 3d 00 00 	bnd jmpq *0x3de5(%rip)        # 4f90 <__stack_chk_fail@GLIBC_2.4>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 dd 3d 00 00 	bnd jmpq *0x3ddd(%rip)        # 4f98 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <std::ctype<char>::_M_widen_init() const@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 d5 3d 00 00 	bnd jmpq *0x3dd5(%rip)        # 4fa0 <std::ctype<char>::_M_widen_init() const@GLIBCXX_3.4.11>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <std::__throw_bad_cast()@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 cd 3d 00 00 	bnd jmpq *0x3dcd(%rip)        # 4fa8 <std::__throw_bad_cast()@GLIBCXX_3.4>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <std::ios_base::Init::Init()@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 c5 3d 00 00 	bnd jmpq *0x3dc5(%rip)        # 4fb0 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 bd 3d 00 00 	bnd jmpq *0x3dbd(%rip)        # 4fb8 <std::ostream& std::ostream::_M_insert<double>(double)@GLIBCXX_3.4.9>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <memmove@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 b5 3d 00 00 	bnd jmpq *0x3db5(%rip)        # 4fc0 <memmove@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 ad 3d 00 00 	bnd jmpq *0x3dad(%rip)        # 4fc8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@GLIBCXX_3.4>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .text:

0000000000001220 <main>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	55                   	push   %rbp
    1225:	48 8d 05 34 3f 01 00 	lea    0x13f34(%rip),%rax        # 15160 <b>
    122c:	c5 fc 28 0d 6c 1e 00 	vmovaps 0x1e6c(%rip),%ymm1        # 30a0 <_IO_stdin_used+0xa0>
    1233:	00 
    1234:	c5 fc 28 05 84 1e 00 	vmovaps 0x1e84(%rip),%ymm0        # 30c0 <_IO_stdin_used+0xc0>
    123b:	00 
    123c:	48 89 e5             	mov    %rsp,%rbp
    123f:	48 8d 15 1a 3f 00 00 	lea    0x3f1a(%rip),%rdx        # 5160 <c>
    1246:	48 8d 88 00 00 01 00 	lea    0x10000(%rax),%rcx
    124d:	c5 fc 29 08          	vmovaps %ymm1,(%rax)
    1251:	c5 fc 29 02          	vmovaps %ymm0,(%rdx)
    1255:	48 05 00 02 00 00    	add    $0x200,%rax
    125b:	c5 fc 29 88 20 fe ff 	vmovaps %ymm1,-0x1e0(%rax)
    1262:	ff 
    1263:	c5 fc 29 42 20       	vmovaps %ymm0,0x20(%rdx)
    1268:	c5 fc 29 88 40 fe ff 	vmovaps %ymm1,-0x1c0(%rax)
    126f:	ff 
    1270:	c5 fc 29 42 40       	vmovaps %ymm0,0x40(%rdx)
    1275:	c5 fc 29 88 60 fe ff 	vmovaps %ymm1,-0x1a0(%rax)
    127c:	ff 
    127d:	c5 fc 29 42 60       	vmovaps %ymm0,0x60(%rdx)
    1282:	c5 fc 29 88 80 fe ff 	vmovaps %ymm1,-0x180(%rax)
    1289:	ff 
    128a:	c5 fc 29 82 80 00 00 	vmovaps %ymm0,0x80(%rdx)
    1291:	00 
    1292:	c5 fc 29 88 a0 fe ff 	vmovaps %ymm1,-0x160(%rax)
    1299:	ff 
    129a:	c5 fc 29 82 a0 00 00 	vmovaps %ymm0,0xa0(%rdx)
    12a1:	00 
    12a2:	c5 fc 29 88 c0 fe ff 	vmovaps %ymm1,-0x140(%rax)
    12a9:	ff 
    12aa:	c5 fc 29 82 c0 00 00 	vmovaps %ymm0,0xc0(%rdx)
    12b1:	00 
    12b2:	c5 fc 29 88 e0 fe ff 	vmovaps %ymm1,-0x120(%rax)
    12b9:	ff 
    12ba:	c5 fc 29 82 e0 00 00 	vmovaps %ymm0,0xe0(%rdx)
    12c1:	00 
    12c2:	c5 fc 29 88 00 ff ff 	vmovaps %ymm1,-0x100(%rax)
    12c9:	ff 
    12ca:	c5 fc 29 82 00 01 00 	vmovaps %ymm0,0x100(%rdx)
    12d1:	00 
    12d2:	c5 fc 29 88 20 ff ff 	vmovaps %ymm1,-0xe0(%rax)
    12d9:	ff 
    12da:	c5 fc 29 82 20 01 00 	vmovaps %ymm0,0x120(%rdx)
    12e1:	00 
    12e2:	c5 fc 29 88 40 ff ff 	vmovaps %ymm1,-0xc0(%rax)
    12e9:	ff 
    12ea:	c5 fc 29 82 40 01 00 	vmovaps %ymm0,0x140(%rdx)
    12f1:	00 
    12f2:	c5 fc 29 88 60 ff ff 	vmovaps %ymm1,-0xa0(%rax)
    12f9:	ff 
    12fa:	c5 fc 29 82 60 01 00 	vmovaps %ymm0,0x160(%rdx)
    1301:	00 
    1302:	c5 fc 29 48 80       	vmovaps %ymm1,-0x80(%rax)
    1307:	c5 fc 29 82 80 01 00 	vmovaps %ymm0,0x180(%rdx)
    130e:	00 
    130f:	c5 fc 29 48 a0       	vmovaps %ymm1,-0x60(%rax)
    1314:	c5 fc 29 82 a0 01 00 	vmovaps %ymm0,0x1a0(%rdx)
    131b:	00 
    131c:	c5 fc 29 48 c0       	vmovaps %ymm1,-0x40(%rax)
    1321:	c5 fc 29 82 c0 01 00 	vmovaps %ymm0,0x1c0(%rdx)
    1328:	00 
    1329:	c5 fc 29 48 e0       	vmovaps %ymm1,-0x20(%rax)
    132e:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
    1335:	c5 fc 29 42 e0       	vmovaps %ymm0,-0x20(%rdx)
    133a:	48 39 c1             	cmp    %rax,%rcx
    133d:	0f 85 0a ff ff ff    	jne    124d <main+0x2d>
    1343:	48 8d 35 1f 1d 00 00 	lea    0x1d1f(%rip),%rsi        # 3069 <_IO_stdin_used+0x69>
    134a:	48 8d 3d 9f 01 00 00 	lea    0x19f(%rip),%rdi        # 14f0 <ijk()>
    1351:	c5 f8 77             	vzeroupper 
    1354:	e8 67 0d 00 00       	callq  20c0 <void test<void ()>(void (&)(), char const*)>
    1359:	48 8d 35 0d 1d 00 00 	lea    0x1d0d(%rip),%rsi        # 306d <_IO_stdin_used+0x6d>
    1360:	48 8d 3d 19 02 00 00 	lea    0x219(%rip),%rdi        # 1580 <ikj()>
    1367:	e8 54 0d 00 00       	callq  20c0 <void test<void ()>(void (&)(), char const*)>
    136c:	48 8d 35 fe 1c 00 00 	lea    0x1cfe(%rip),%rsi        # 3071 <_IO_stdin_used+0x71>
    1373:	48 8d 3d 46 06 00 00 	lea    0x646(%rip),%rdi        # 19c0 <jik()>
    137a:	e8 41 0d 00 00       	callq  20c0 <void test<void ()>(void (&)(), char const*)>
    137f:	48 8d 35 ef 1c 00 00 	lea    0x1cef(%rip),%rsi        # 3075 <_IO_stdin_used+0x75>
    1386:	48 8d 3d c3 06 00 00 	lea    0x6c3(%rip),%rdi        # 1a50 <jki()>
    138d:	e8 2e 0d 00 00       	callq  20c0 <void test<void ()>(void (&)(), char const*)>
    1392:	48 8d 35 e0 1c 00 00 	lea    0x1ce0(%rip),%rsi        # 3079 <_IO_stdin_used+0x79>
    1399:	48 8d 3d 30 08 00 00 	lea    0x830(%rip),%rdi        # 1bd0 <kij()>
    13a0:	e8 1b 0d 00 00       	callq  20c0 <void test<void ()>(void (&)(), char const*)>
    13a5:	48 8d 35 d1 1c 00 00 	lea    0x1cd1(%rip),%rsi        # 307d <_IO_stdin_used+0x7d>
    13ac:	48 8d 3d ed 09 00 00 	lea    0x9ed(%rip),%rdi        # 1da0 <kji()>
    13b3:	e8 08 0d 00 00       	callq  20c0 <void test<void ()>(void (&)(), char const*)>
    13b8:	31 c0                	xor    %eax,%eax
    13ba:	5d                   	pop    %rbp
    13bb:	c3                   	retq   
    13bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000013c0 <_GLOBAL__sub_I_a>:
    13c0:	f3 0f 1e fa          	endbr64 
    13c4:	48 83 ec 08          	sub    $0x8,%rsp
    13c8:	48 8d 3d 91 3d 03 00 	lea    0x33d91(%rip),%rdi        # 35160 <std::__ioinit>
    13cf:	e8 0c fe ff ff       	callq  11e0 <std::ios_base::Init::Init()@plt>
    13d4:	48 8b 3d 1d 3c 00 00 	mov    0x3c1d(%rip),%rdi        # 4ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    13db:	48 8d 15 26 3c 00 00 	lea    0x3c26(%rip),%rdx        # 5008 <__dso_handle>
    13e2:	48 8d 35 77 3d 03 00 	lea    0x33d77(%rip),%rsi        # 35160 <std::__ioinit>
    13e9:	48 83 c4 08          	add    $0x8,%rsp
    13ed:	e9 9e fd ff ff       	jmpq   1190 <__cxa_atexit@plt>
    13f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    13f9:	00 00 00 
    13fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001400 <_start>:
    1400:	f3 0f 1e fa          	endbr64 
    1404:	31 ed                	xor    %ebp,%ebp
    1406:	49 89 d1             	mov    %rdx,%r9
    1409:	5e                   	pop    %rsi
    140a:	48 89 e2             	mov    %rsp,%rdx
    140d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1411:	50                   	push   %rax
    1412:	54                   	push   %rsp
    1413:	4c 8d 05 c6 11 00 00 	lea    0x11c6(%rip),%r8        # 25e0 <__libc_csu_fini>
    141a:	48 8d 0d 4f 11 00 00 	lea    0x114f(%rip),%rcx        # 2570 <__libc_csu_init>
    1421:	48 8d 3d f8 fd ff ff 	lea    -0x208(%rip),%rdi        # 1220 <main>
    1428:	ff 15 b2 3b 00 00    	callq  *0x3bb2(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    142e:	f4                   	hlt    
    142f:	90                   	nop

0000000000001430 <deregister_tm_clones>:
    1430:	48 8d 3d d9 3b 00 00 	lea    0x3bd9(%rip),%rdi        # 5010 <__TMC_END__>
    1437:	48 8d 05 d2 3b 00 00 	lea    0x3bd2(%rip),%rax        # 5010 <__TMC_END__>
    143e:	48 39 f8             	cmp    %rdi,%rax
    1441:	74 15                	je     1458 <deregister_tm_clones+0x28>
    1443:	48 8b 05 8e 3b 00 00 	mov    0x3b8e(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable>
    144a:	48 85 c0             	test   %rax,%rax
    144d:	74 09                	je     1458 <deregister_tm_clones+0x28>
    144f:	ff e0                	jmpq   *%rax
    1451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1458:	c3                   	retq   
    1459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001460 <register_tm_clones>:
    1460:	48 8d 3d a9 3b 00 00 	lea    0x3ba9(%rip),%rdi        # 5010 <__TMC_END__>
    1467:	48 8d 35 a2 3b 00 00 	lea    0x3ba2(%rip),%rsi        # 5010 <__TMC_END__>
    146e:	48 29 fe             	sub    %rdi,%rsi
    1471:	48 89 f0             	mov    %rsi,%rax
    1474:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1478:	48 c1 f8 03          	sar    $0x3,%rax
    147c:	48 01 c6             	add    %rax,%rsi
    147f:	48 d1 fe             	sar    %rsi
    1482:	74 14                	je     1498 <register_tm_clones+0x38>
    1484:	48 8b 05 65 3b 00 00 	mov    0x3b65(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable>
    148b:	48 85 c0             	test   %rax,%rax
    148e:	74 08                	je     1498 <register_tm_clones+0x38>
    1490:	ff e0                	jmpq   *%rax
    1492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1498:	c3                   	retq   
    1499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014a0 <__do_global_dtors_aux>:
    14a0:	f3 0f 1e fa          	endbr64 
    14a4:	80 3d a5 3c 00 00 00 	cmpb   $0x0,0x3ca5(%rip)        # 5150 <completed.8061>
    14ab:	75 2b                	jne    14d8 <__do_global_dtors_aux+0x38>
    14ad:	55                   	push   %rbp
    14ae:	48 83 3d 1a 3b 00 00 	cmpq   $0x0,0x3b1a(%rip)        # 4fd0 <__cxa_finalize@GLIBC_2.2.5>
    14b5:	00 
    14b6:	48 89 e5             	mov    %rsp,%rbp
    14b9:	74 0c                	je     14c7 <__do_global_dtors_aux+0x27>
    14bb:	48 8b 3d 46 3b 00 00 	mov    0x3b46(%rip),%rdi        # 5008 <__dso_handle>
    14c2:	e8 59 fc ff ff       	callq  1120 <__cxa_finalize@plt>
    14c7:	e8 64 ff ff ff       	callq  1430 <deregister_tm_clones>
    14cc:	c6 05 7d 3c 00 00 01 	movb   $0x1,0x3c7d(%rip)        # 5150 <completed.8061>
    14d3:	5d                   	pop    %rbp
    14d4:	c3                   	retq   
    14d5:	0f 1f 00             	nopl   (%rax)
    14d8:	c3                   	retq   
    14d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014e0 <frame_dummy>:
    14e0:	f3 0f 1e fa          	endbr64 
    14e4:	e9 77 ff ff ff       	jmpq   1460 <register_tm_clones>
    14e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014f0 <ijk()>:
    14f0:	f3 0f 1e fa          	endbr64 
    14f4:	48 8d 3d 65 3c 01 00 	lea    0x13c65(%rip),%rdi        # 15160 <b>
    14fb:	4c 8d 05 5e 3c 02 00 	lea    0x23c5e(%rip),%r8        # 25160 <a>
    1502:	4c 8d 9f 00 00 01 00 	lea    0x10000(%rdi),%r11
    1509:	4c 8d 15 50 3c 01 00 	lea    0x13c50(%rip),%r10        # 15160 <b>
    1510:	4c 8d 0d 49 3c 00 00 	lea    0x3c49(%rip),%r9        # 5160 <c>
    1517:	4c 89 d1             	mov    %r10,%rcx
    151a:	31 f6                	xor    %esi,%esi
    151c:	c4 c1 7c 28 04 30    	vmovaps (%r8,%rsi,1),%ymm0
    1522:	48 89 fa             	mov    %rdi,%rdx
    1525:	4c 89 c8             	mov    %r9,%rax
    1528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    152f:	00 
    1530:	c4 e2 7d 18 0a       	vbroadcastss (%rdx),%ymm1
    1535:	48 05 00 02 00 00    	add    $0x200,%rax
    153b:	c4 e2 75 b8 80 00 fe 	vfmadd231ps -0x200(%rax),%ymm1,%ymm0
    1542:	ff ff 
    1544:	48 83 c2 04          	add    $0x4,%rdx
    1548:	48 39 c8             	cmp    %rcx,%rax
    154b:	75 e3                	jne    1530 <ijk()+0x40>
    154d:	c4 c1 7c 29 04 30    	vmovaps %ymm0,(%r8,%rsi,1)
    1553:	48 83 c6 20          	add    $0x20,%rsi
    1557:	49 83 c1 20          	add    $0x20,%r9
    155b:	48 8d 48 20          	lea    0x20(%rax),%rcx
    155f:	48 81 fe 00 02 00 00 	cmp    $0x200,%rsi
    1566:	75 b4                	jne    151c <ijk()+0x2c>
    1568:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
    156f:	49 81 c0 00 02 00 00 	add    $0x200,%r8
    1576:	4c 39 df             	cmp    %r11,%rdi
    1579:	75 95                	jne    1510 <ijk()+0x20>
    157b:	c5 f8 77             	vzeroupper 
    157e:	c3                   	retq   
    157f:	90                   	nop

0000000000001580 <ikj()>:
    1580:	f3 0f 1e fa          	endbr64 
    1584:	55                   	push   %rbp
    1585:	4c 8d 15 d4 3b 01 00 	lea    0x13bd4(%rip),%r10        # 15160 <b>
    158c:	4c 89 d7             	mov    %r10,%rdi
    158f:	48 89 e5             	mov    %rsp,%rbp
    1592:	48 8d 05 c7 3b 02 00 	lea    0x23bc7(%rip),%rax        # 25160 <a>
    1599:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
    159d:	45 31 c0             	xor    %r8d,%r8d
    15a0:	4c 8d 0d b9 3b 00 00 	lea    0x3bb9(%rip),%r9        # 5160 <c>
    15a7:	48 8d 15 b2 3b 00 00 	lea    0x3bb2(%rip),%rdx        # 5160 <c>
    15ae:	be 02 00 00 00       	mov    $0x2,%esi
    15b3:	c4 e2 7d 18 4c b7 f8 	vbroadcastss -0x8(%rdi,%rsi,4),%ymm1
    15ba:	c5 7c 28 32          	vmovaps (%rdx),%ymm14
    15be:	c4 e2 7d 18 44 b7 fc 	vbroadcastss -0x4(%rdi,%rsi,4),%ymm0
    15c5:	c4 62 75 a8 30       	vfmadd213ps (%rax),%ymm1,%ymm14
    15ca:	48 63 ce             	movslq %esi,%rcx
    15cd:	48 83 c6 02          	add    $0x2,%rsi
    15d1:	48 81 c2 00 04 00 00 	add    $0x400,%rdx
    15d8:	c4 62 7d b8 b2 00 fe 	vfmadd231ps -0x200(%rdx),%ymm0,%ymm14
    15df:	ff ff 
    15e1:	c5 7c 29 30          	vmovaps %ymm14,(%rax)
    15e5:	c5 7c 28 aa 20 fc ff 	vmovaps -0x3e0(%rdx),%ymm13
    15ec:	ff 
    15ed:	c4 62 75 a8 68 20    	vfmadd213ps 0x20(%rax),%ymm1,%ymm13
    15f3:	c4 62 7d b8 aa 20 fe 	vfmadd231ps -0x1e0(%rdx),%ymm0,%ymm13
    15fa:	ff ff 
    15fc:	c5 7c 29 68 20       	vmovaps %ymm13,0x20(%rax)
    1601:	c5 7c 28 a2 40 fc ff 	vmovaps -0x3c0(%rdx),%ymm12
    1608:	ff 
    1609:	c4 62 75 a8 60 40    	vfmadd213ps 0x40(%rax),%ymm1,%ymm12
    160f:	c4 62 7d b8 a2 40 fe 	vfmadd231ps -0x1c0(%rdx),%ymm0,%ymm12
    1616:	ff ff 
    1618:	c5 7c 29 60 40       	vmovaps %ymm12,0x40(%rax)
    161d:	c5 7c 28 9a 60 fc ff 	vmovaps -0x3a0(%rdx),%ymm11
    1624:	ff 
    1625:	c4 62 75 a8 58 60    	vfmadd213ps 0x60(%rax),%ymm1,%ymm11
    162b:	c4 62 7d b8 9a 60 fe 	vfmadd231ps -0x1a0(%rdx),%ymm0,%ymm11
    1632:	ff ff 
    1634:	c5 7c 29 58 60       	vmovaps %ymm11,0x60(%rax)
    1639:	c5 7c 28 92 80 fc ff 	vmovaps -0x380(%rdx),%ymm10
    1640:	ff 
    1641:	c4 62 75 a8 90 80 00 	vfmadd213ps 0x80(%rax),%ymm1,%ymm10
    1648:	00 00 
    164a:	c4 62 7d b8 92 80 fe 	vfmadd231ps -0x180(%rdx),%ymm0,%ymm10
    1651:	ff ff 
    1653:	c5 7c 29 90 80 00 00 	vmovaps %ymm10,0x80(%rax)
    165a:	00 
    165b:	c5 7c 28 8a a0 fc ff 	vmovaps -0x360(%rdx),%ymm9
    1662:	ff 
    1663:	c4 62 75 a8 88 a0 00 	vfmadd213ps 0xa0(%rax),%ymm1,%ymm9
    166a:	00 00 
    166c:	c4 62 7d b8 8a a0 fe 	vfmadd231ps -0x160(%rdx),%ymm0,%ymm9
    1673:	ff ff 
    1675:	c5 7c 29 88 a0 00 00 	vmovaps %ymm9,0xa0(%rax)
    167c:	00 
    167d:	c5 7c 28 82 c0 fc ff 	vmovaps -0x340(%rdx),%ymm8
    1684:	ff 
    1685:	c4 62 75 a8 80 c0 00 	vfmadd213ps 0xc0(%rax),%ymm1,%ymm8
    168c:	00 00 
    168e:	c4 62 7d b8 82 c0 fe 	vfmadd231ps -0x140(%rdx),%ymm0,%ymm8
    1695:	ff ff 
    1697:	c5 7c 29 80 c0 00 00 	vmovaps %ymm8,0xc0(%rax)
    169e:	00 
    169f:	c5 fc 28 ba e0 fc ff 	vmovaps -0x320(%rdx),%ymm7
    16a6:	ff 
    16a7:	c4 e2 75 a8 b8 e0 00 	vfmadd213ps 0xe0(%rax),%ymm1,%ymm7
    16ae:	00 00 
    16b0:	c4 e2 7d b8 ba e0 fe 	vfmadd231ps -0x120(%rdx),%ymm0,%ymm7
    16b7:	ff ff 
    16b9:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    16c0:	00 
    16c1:	c5 fc 28 b2 00 fd ff 	vmovaps -0x300(%rdx),%ymm6
    16c8:	ff 
    16c9:	c4 e2 75 a8 b0 00 01 	vfmadd213ps 0x100(%rax),%ymm1,%ymm6
    16d0:	00 00 
    16d2:	c4 e2 7d b8 b2 00 ff 	vfmadd231ps -0x100(%rdx),%ymm0,%ymm6
    16d9:	ff ff 
    16db:	c5 fc 29 b0 00 01 00 	vmovaps %ymm6,0x100(%rax)
    16e2:	00 
    16e3:	c5 fc 28 aa 20 fd ff 	vmovaps -0x2e0(%rdx),%ymm5
    16ea:	ff 
    16eb:	c4 e2 75 a8 a8 20 01 	vfmadd213ps 0x120(%rax),%ymm1,%ymm5
    16f2:	00 00 
    16f4:	c4 e2 7d b8 aa 20 ff 	vfmadd231ps -0xe0(%rdx),%ymm0,%ymm5
    16fb:	ff ff 
    16fd:	c5 fc 29 a8 20 01 00 	vmovaps %ymm5,0x120(%rax)
    1704:	00 
    1705:	c5 fc 28 a2 40 fd ff 	vmovaps -0x2c0(%rdx),%ymm4
    170c:	ff 
    170d:	c4 e2 75 a8 a0 40 01 	vfmadd213ps 0x140(%rax),%ymm1,%ymm4
    1714:	00 00 
    1716:	c4 e2 7d b8 a2 40 ff 	vfmadd231ps -0xc0(%rdx),%ymm0,%ymm4
    171d:	ff ff 
    171f:	c5 fc 29 a0 40 01 00 	vmovaps %ymm4,0x140(%rax)
    1726:	00 
    1727:	c5 fc 28 9a 60 fd ff 	vmovaps -0x2a0(%rdx),%ymm3
    172e:	ff 
    172f:	c4 e2 75 a8 98 60 01 	vfmadd213ps 0x160(%rax),%ymm1,%ymm3
    1736:	00 00 
    1738:	c4 e2 7d b8 9a 60 ff 	vfmadd231ps -0xa0(%rdx),%ymm0,%ymm3
    173f:	ff ff 
    1741:	c5 fc 29 98 60 01 00 	vmovaps %ymm3,0x160(%rax)
    1748:	00 
    1749:	c5 fc 28 92 80 fd ff 	vmovaps -0x280(%rdx),%ymm2
    1750:	ff 
    1751:	c4 e2 75 a8 90 80 01 	vfmadd213ps 0x180(%rax),%ymm1,%ymm2
    1758:	00 00 
    175a:	c4 e2 7d b8 52 80    	vfmadd231ps -0x80(%rdx),%ymm0,%ymm2
    1760:	c5 fc 29 90 80 01 00 	vmovaps %ymm2,0x180(%rax)
    1767:	00 
    1768:	c5 7c 28 ba a0 fd ff 	vmovaps -0x260(%rdx),%ymm15
    176f:	ff 
    1770:	c5 fc 29 54 24 c0    	vmovaps %ymm2,-0x40(%rsp)
    1776:	c4 62 75 a8 b8 a0 01 	vfmadd213ps 0x1a0(%rax),%ymm1,%ymm15
    177d:	00 00 
    177f:	c4 62 7d b8 7a a0    	vfmadd231ps -0x60(%rdx),%ymm0,%ymm15
    1785:	c5 7c 29 b8 a0 01 00 	vmovaps %ymm15,0x1a0(%rax)
    178c:	00 
    178d:	c5 7c 29 7c 24 e0    	vmovaps %ymm15,-0x20(%rsp)
    1793:	c5 7c 28 ba c0 fd ff 	vmovaps -0x240(%rdx),%ymm15
    179a:	ff 
    179b:	c4 62 75 a8 b8 c0 01 	vfmadd213ps 0x1c0(%rax),%ymm1,%ymm15
    17a2:	00 00 
    17a4:	c4 62 7d b8 7a c0    	vfmadd231ps -0x40(%rdx),%ymm0,%ymm15
    17aa:	c5 7c 29 b8 c0 01 00 	vmovaps %ymm15,0x1c0(%rax)
    17b1:	00 
    17b2:	c5 fc 28 90 e0 01 00 	vmovaps 0x1e0(%rax),%ymm2
    17b9:	00 
    17ba:	c4 e2 6d 98 8a e0 fd 	vfmadd132ps -0x220(%rdx),%ymm2,%ymm1
    17c1:	ff ff 
    17c3:	c4 e2 7d b8 4a e0    	vfmadd231ps -0x20(%rdx),%ymm0,%ymm1
    17c9:	c5 fc 29 88 e0 01 00 	vmovaps %ymm1,0x1e0(%rax)
    17d0:	00 
    17d1:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
    17d8:	0f 85 d5 fd ff ff    	jne    15b3 <ikj()+0x33>
    17de:	49 63 f0             	movslq %r8d,%rsi
    17e1:	48 c1 e6 07          	shl    $0x7,%rsi
    17e5:	48 01 ce             	add    %rcx,%rsi
    17e8:	c4 c2 7d 18 04 b2    	vbroadcastss (%r10,%rsi,4),%ymm0
    17ee:	48 c1 e1 09          	shl    $0x9,%rcx
    17f2:	49 8d 14 09          	lea    (%r9,%rcx,1),%rdx
    17f6:	c4 62 7d b8 82 c0 00 	vfmadd231ps 0xc0(%rdx),%ymm0,%ymm8
    17fd:	00 00 
    17ff:	c4 62 7d b8 32       	vfmadd231ps (%rdx),%ymm0,%ymm14
    1804:	c5 fc 28 54 24 c0    	vmovaps -0x40(%rsp),%ymm2
    180a:	c4 62 7d b8 6a 20    	vfmadd231ps 0x20(%rdx),%ymm0,%ymm13
    1810:	c4 62 7d b8 62 40    	vfmadd231ps 0x40(%rdx),%ymm0,%ymm12
    1816:	c5 7c 29 44 24 c0    	vmovaps %ymm8,-0x40(%rsp)
    181c:	c5 7c 28 44 24 e0    	vmovaps -0x20(%rsp),%ymm8
    1822:	c4 62 7d b8 5a 60    	vfmadd231ps 0x60(%rdx),%ymm0,%ymm11
    1828:	c4 62 7d b8 92 80 00 	vfmadd231ps 0x80(%rdx),%ymm0,%ymm10
    182f:	00 00 
    1831:	c4 62 7d b8 8a a0 00 	vfmadd231ps 0xa0(%rdx),%ymm0,%ymm9
    1838:	00 00 
    183a:	c4 e2 7d b8 ba e0 00 	vfmadd231ps 0xe0(%rdx),%ymm0,%ymm7
    1841:	00 00 
    1843:	c4 e2 7d b8 b2 00 01 	vfmadd231ps 0x100(%rdx),%ymm0,%ymm6
    184a:	00 00 
    184c:	c4 e2 7d b8 aa 20 01 	vfmadd231ps 0x120(%rdx),%ymm0,%ymm5
    1853:	00 00 
    1855:	c4 e2 7d b8 a2 40 01 	vfmadd231ps 0x140(%rdx),%ymm0,%ymm4
    185c:	00 00 
    185e:	c4 e2 7d b8 9a 60 01 	vfmadd231ps 0x160(%rdx),%ymm0,%ymm3
    1865:	00 00 
    1867:	c4 e2 7d b8 92 80 01 	vfmadd231ps 0x180(%rdx),%ymm0,%ymm2
    186e:	00 00 
    1870:	c4 62 7d b8 82 a0 01 	vfmadd231ps 0x1a0(%rdx),%ymm0,%ymm8
    1877:	00 00 
    1879:	c4 62 7d b8 ba c0 01 	vfmadd231ps 0x1c0(%rdx),%ymm0,%ymm15
    1880:	00 00 
    1882:	c4 e2 75 98 82 e0 01 	vfmadd132ps 0x1e0(%rdx),%ymm1,%ymm0
    1889:	00 00 
    188b:	c4 e2 7d 18 8f fc 01 	vbroadcastss 0x1fc(%rdi),%ymm1
    1892:	00 00 
    1894:	49 8d 94 09 00 02 00 	lea    0x200(%r9,%rcx,1),%rdx
    189b:	00 
    189c:	c4 62 75 b8 32       	vfmadd231ps (%rdx),%ymm1,%ymm14
    18a1:	41 ff c0             	inc    %r8d
    18a4:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
    18ab:	48 05 00 02 00 00    	add    $0x200,%rax
    18b1:	c5 7c 29 b0 00 fe ff 	vmovaps %ymm14,-0x200(%rax)
    18b8:	ff 
    18b9:	c4 62 75 b8 6a 20    	vfmadd231ps 0x20(%rdx),%ymm1,%ymm13
    18bf:	c5 7c 29 a8 20 fe ff 	vmovaps %ymm13,-0x1e0(%rax)
    18c6:	ff 
    18c7:	c4 62 75 b8 62 40    	vfmadd231ps 0x40(%rdx),%ymm1,%ymm12
    18cd:	c5 7c 29 a0 40 fe ff 	vmovaps %ymm12,-0x1c0(%rax)
    18d4:	ff 
    18d5:	c4 62 75 b8 5a 60    	vfmadd231ps 0x60(%rdx),%ymm1,%ymm11
    18db:	c5 7c 29 98 60 fe ff 	vmovaps %ymm11,-0x1a0(%rax)
    18e2:	ff 
    18e3:	c4 62 75 b8 92 80 00 	vfmadd231ps 0x80(%rdx),%ymm1,%ymm10
    18ea:	00 00 
    18ec:	c5 7c 29 90 80 fe ff 	vmovaps %ymm10,-0x180(%rax)
    18f3:	ff 
    18f4:	c4 62 75 b8 8a a0 00 	vfmadd231ps 0xa0(%rdx),%ymm1,%ymm9
    18fb:	00 00 
    18fd:	c5 7c 29 88 a0 fe ff 	vmovaps %ymm9,-0x160(%rax)
    1904:	ff 
    1905:	c5 7c 28 4c 24 c0    	vmovaps -0x40(%rsp),%ymm9
    190b:	c4 62 75 b8 8a c0 00 	vfmadd231ps 0xc0(%rdx),%ymm1,%ymm9
    1912:	00 00 
    1914:	c5 7c 29 88 c0 fe ff 	vmovaps %ymm9,-0x140(%rax)
    191b:	ff 
    191c:	c4 e2 75 b8 ba e0 00 	vfmadd231ps 0xe0(%rdx),%ymm1,%ymm7
    1923:	00 00 
    1925:	c5 fc 29 b8 e0 fe ff 	vmovaps %ymm7,-0x120(%rax)
    192c:	ff 
    192d:	c4 e2 75 b8 b2 00 01 	vfmadd231ps 0x100(%rdx),%ymm1,%ymm6
    1934:	00 00 
    1936:	c5 fc 29 b0 00 ff ff 	vmovaps %ymm6,-0x100(%rax)
    193d:	ff 
    193e:	c4 e2 75 b8 aa 20 01 	vfmadd231ps 0x120(%rdx),%ymm1,%ymm5
    1945:	00 00 
    1947:	c5 fc 29 a8 20 ff ff 	vmovaps %ymm5,-0xe0(%rax)
    194e:	ff 
    194f:	c4 e2 75 b8 a2 40 01 	vfmadd231ps 0x140(%rdx),%ymm1,%ymm4
    1956:	00 00 
    1958:	c5 fc 29 a0 40 ff ff 	vmovaps %ymm4,-0xc0(%rax)
    195f:	ff 
    1960:	c4 e2 75 b8 9a 60 01 	vfmadd231ps 0x160(%rdx),%ymm1,%ymm3
    1967:	00 00 
    1969:	c5 fc 29 98 60 ff ff 	vmovaps %ymm3,-0xa0(%rax)
    1970:	ff 
    1971:	c4 e2 75 b8 92 80 01 	vfmadd231ps 0x180(%rdx),%ymm1,%ymm2
    1978:	00 00 
    197a:	c5 fc 29 50 80       	vmovaps %ymm2,-0x80(%rax)
    197f:	c4 62 75 b8 82 a0 01 	vfmadd231ps 0x1a0(%rdx),%ymm1,%ymm8
    1986:	00 00 
    1988:	c5 7c 29 40 a0       	vmovaps %ymm8,-0x60(%rax)
    198d:	c4 62 75 b8 ba c0 01 	vfmadd231ps 0x1c0(%rdx),%ymm1,%ymm15
    1994:	00 00 
    1996:	c5 7c 29 78 c0       	vmovaps %ymm15,-0x40(%rax)
    199b:	c4 e2 75 b8 82 e0 01 	vfmadd231ps 0x1e0(%rdx),%ymm1,%ymm0
    19a2:	00 00 
    19a4:	c5 fc 29 40 e0       	vmovaps %ymm0,-0x20(%rax)
    19a9:	41 81 f8 80 00 00 00 	cmp    $0x80,%r8d
    19b0:	0f 85 f1 fb ff ff    	jne    15a7 <ikj()+0x27>
    19b6:	c5 f8 77             	vzeroupper 
    19b9:	c9                   	leaveq 
    19ba:	c3                   	retq   
    19bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000019c0 <jik()>:
    19c0:	f3 0f 1e fa          	endbr64 
    19c4:	4c 8d 05 95 37 00 00 	lea    0x3795(%rip),%r8        # 5160 <c>
    19cb:	49 8d 88 00 00 01 00 	lea    0x10000(%r8),%rcx
    19d2:	4c 8d 0d 87 37 03 00 	lea    0x33787(%rip),%r9        # 35160 <std::__ioinit>
    19d9:	4c 8d 91 00 02 00 00 	lea    0x200(%rcx),%r10
    19e0:	49 8d b1 00 00 ff ff 	lea    -0x10000(%r9),%rsi
    19e7:	48 8d 3d 72 37 01 00 	lea    0x13772(%rip),%rdi        # 15160 <b>
    19ee:	c5 fa 10 06          	vmovss (%rsi),%xmm0
    19f2:	4c 89 c0             	mov    %r8,%rax
    19f5:	48 89 fa             	mov    %rdi,%rdx
    19f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    19ff:	00 
    1a00:	c5 fa 10 0a          	vmovss (%rdx),%xmm1
    1a04:	48 05 00 02 00 00    	add    $0x200,%rax
    1a0a:	c4 e2 71 b9 80 00 fe 	vfmadd231ss -0x200(%rax),%xmm1,%xmm0
    1a11:	ff ff 
    1a13:	48 83 c2 04          	add    $0x4,%rdx
    1a17:	48 39 c8             	cmp    %rcx,%rax
    1a1a:	75 e4                	jne    1a00 <jik()+0x40>
    1a1c:	c5 fa 11 06          	vmovss %xmm0,(%rsi)
    1a20:	48 81 c6 00 02 00 00 	add    $0x200,%rsi
    1a27:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
    1a2e:	4c 39 ce             	cmp    %r9,%rsi
    1a31:	75 bb                	jne    19ee <jik()+0x2e>
    1a33:	48 8d 48 04          	lea    0x4(%rax),%rcx
    1a37:	4c 8d 4e 04          	lea    0x4(%rsi),%r9
    1a3b:	49 83 c0 04          	add    $0x4,%r8
    1a3f:	4c 39 d1             	cmp    %r10,%rcx
    1a42:	75 9c                	jne    19e0 <jik()+0x20>
    1a44:	c3                   	retq   
    1a45:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1a4c:	00 00 00 00 

0000000000001a50 <jki()>:
    1a50:	f3 0f 1e fa          	endbr64 
    1a54:	41 56                	push   %r14
    1a56:	4c 8d 1d 03 37 00 00 	lea    0x3703(%rip),%r11        # 5160 <c>
    1a5d:	4c 8d 15 fc 36 02 00 	lea    0x236fc(%rip),%r10        # 25160 <a>
    1a64:	41 55                	push   %r13
    1a66:	4c 8d 0d f3 36 01 00 	lea    0x136f3(%rip),%r9        # 15160 <b>
    1a6d:	4c 89 df             	mov    %r11,%rdi
    1a70:	41 54                	push   %r12
    1a72:	4c 89 d6             	mov    %r10,%rsi
    1a75:	45 31 c0             	xor    %r8d,%r8d
    1a78:	55                   	push   %rbp
    1a79:	53                   	push   %rbx
    1a7a:	49 8d 99 04 00 01 00 	lea    0x10004(%r9),%rbx
    1a81:	45 89 c5             	mov    %r8d,%r13d
    1a84:	48 89 d9             	mov    %rbx,%rcx
    1a87:	49 89 fc             	mov    %rdi,%r12
    1a8a:	bd 01 00 00 00       	mov    $0x1,%ebp
    1a8f:	c4 c1 7a 10 14 24    	vmovss (%r12),%xmm2
    1a95:	c4 c1 7a 10 8c 24 00 	vmovss 0x200(%r12),%xmm1
    1a9c:	02 00 00 
    1a9f:	48 8d 81 00 00 ff ff 	lea    -0x10000(%rcx),%rax
    1aa6:	48 89 f2             	mov    %rsi,%rdx
    1aa9:	c5 fa 10 40 fc       	vmovss -0x4(%rax),%xmm0
    1aae:	48 05 00 02 00 00    	add    $0x200,%rax
    1ab4:	c4 e2 69 a9 02       	vfmadd213ss (%rdx),%xmm2,%xmm0
    1ab9:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
    1ac0:	c4 e2 71 b9 80 00 fe 	vfmadd231ss -0x200(%rax),%xmm1,%xmm0
    1ac7:	ff ff 
    1ac9:	c5 fa 11 82 00 fe ff 	vmovss %xmm0,-0x200(%rdx)
    1ad0:	ff 
    1ad1:	48 39 c8             	cmp    %rcx,%rax
    1ad4:	75 d3                	jne    1aa9 <jki()+0x59>
    1ad6:	8d 55 01             	lea    0x1(%rbp),%edx
    1ad9:	49 81 c4 00 04 00 00 	add    $0x400,%r12
    1ae0:	44 8d 75 02          	lea    0x2(%rbp),%r14d
    1ae4:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1ae8:	83 fd 7d             	cmp    $0x7d,%ebp
    1aeb:	74 05                	je     1af2 <jki()+0xa2>
    1aed:	44 89 f5             	mov    %r14d,%ebp
    1af0:	eb 9d                	jmp    1a8f <jki()+0x3f>
    1af2:	48 63 c2             	movslq %edx,%rax
    1af5:	48 89 c2             	mov    %rax,%rdx
    1af8:	49 63 cd             	movslq %r13d,%rcx
    1afb:	48 c1 e2 07          	shl    $0x7,%rdx
    1aff:	48 01 ca             	add    %rcx,%rdx
    1b02:	c4 c1 7a 10 0c 93    	vmovss (%r11,%rdx,4),%xmm1
    1b08:	c4 c1 7a 10 04 81    	vmovss (%r9,%rax,4),%xmm0
    1b0e:	c5 fa 10 9f 00 fe 00 	vmovss 0xfe00(%rdi),%xmm3
    1b15:	00 
    1b16:	c4 e2 71 a9 06       	vfmadd213ss (%rsi),%xmm1,%xmm0
    1b1b:	4b 8d 14 82          	lea    (%r10,%r8,4),%rdx
    1b1f:	c4 e2 61 b9 05 34 38 	vfmadd231ss 0x13834(%rip),%xmm3,%xmm0        # 1535c <b+0x1fc>
    1b26:	01 00 
    1b28:	c5 fa 11 06          	vmovss %xmm0,(%rsi)
    1b2c:	c4 c1 7a 10 84 81 00 	vmovss 0x200(%r9,%rax,4),%xmm0
    1b33:	02 00 00 
    1b36:	48 c1 e0 02          	shl    $0x2,%rax
    1b3a:	c4 e2 71 a9 86 00 02 	vfmadd213ss 0x200(%rsi),%xmm1,%xmm0
    1b41:	00 00 
    1b43:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    1b47:	49 8d 4c 01 04       	lea    0x4(%r9,%rax,1),%rcx
    1b4c:	31 c0                	xor    %eax,%eax
    1b4e:	c4 e2 61 b9 05 05 3a 	vfmadd231ss 0x13a05(%rip),%xmm3,%xmm0        # 1555c <b+0x3fc>
    1b55:	01 00 
    1b57:	c5 fa 11 86 00 02 00 	vmovss %xmm0,0x200(%rsi)
    1b5e:	00 
    1b5f:	c5 fa 10 84 05 00 04 	vmovss 0x400(%rbp,%rax,1),%xmm0
    1b66:	00 00 
    1b68:	c5 fa 10 ac 01 00 04 	vmovss 0x400(%rcx,%rax,1),%xmm5
    1b6f:	00 00 
    1b71:	c4 e2 71 a9 82 00 04 	vfmadd213ss 0x400(%rdx),%xmm1,%xmm0
    1b78:	00 00 
    1b7a:	48 05 00 02 00 00    	add    $0x200,%rax
    1b80:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
    1b87:	c4 e2 51 b9 87 00 fe 	vfmadd231ss 0xfe00(%rdi),%xmm5,%xmm0
    1b8e:	00 00 
    1b90:	c5 fa 11 82 00 02 00 	vmovss %xmm0,0x200(%rdx)
    1b97:	00 
    1b98:	48 3d 00 fc 00 00    	cmp    $0xfc00,%rax
    1b9e:	75 bf                	jne    1b5f <jki()+0x10f>
    1ba0:	49 ff c0             	inc    %r8
    1ba3:	48 83 c7 04          	add    $0x4,%rdi
    1ba7:	48 83 c6 04          	add    $0x4,%rsi
    1bab:	49 81 f8 80 00 00 00 	cmp    $0x80,%r8
    1bb2:	0f 85 c9 fe ff ff    	jne    1a81 <jki()+0x31>
    1bb8:	5b                   	pop    %rbx
    1bb9:	5d                   	pop    %rbp
    1bba:	41 5c                	pop    %r12
    1bbc:	41 5d                	pop    %r13
    1bbe:	41 5e                	pop    %r14
    1bc0:	c3                   	retq   
    1bc1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1bc8:	00 00 00 00 
    1bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001bd0 <kij()>:
    1bd0:	f3 0f 1e fa          	endbr64 
    1bd4:	48 8d 05 85 35 02 00 	lea    0x23585(%rip),%rax        # 25160 <a>
    1bdb:	48 8d 3d 7e 35 01 00 	lea    0x1357e(%rip),%rdi        # 15160 <b>
    1be2:	4c 8d 80 00 00 01 00 	lea    0x10000(%rax),%r8
    1be9:	48 8d 35 70 35 01 00 	lea    0x13570(%rip),%rsi        # 15160 <b>
    1bf0:	48 8d 15 69 35 00 00 	lea    0x3569(%rip),%rdx        # 5160 <c>
    1bf7:	48 89 f9             	mov    %rdi,%rcx
    1bfa:	c4 e2 7d 18 01       	vbroadcastss (%rcx),%ymm0
    1bff:	c5 fc 28 0a          	vmovaps (%rdx),%ymm1
    1c03:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
    1c0a:	c4 e2 7d a8 08       	vfmadd213ps (%rax),%ymm0,%ymm1
    1c0f:	48 83 c1 04          	add    $0x4,%rcx
    1c13:	c5 fc 29 08          	vmovaps %ymm1,(%rax)
    1c17:	c5 fc 28 8a 20 fe ff 	vmovaps -0x1e0(%rdx),%ymm1
    1c1e:	ff 
    1c1f:	c4 e2 7d a8 48 20    	vfmadd213ps 0x20(%rax),%ymm0,%ymm1
    1c25:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    1c2a:	c5 fc 28 8a 40 fe ff 	vmovaps -0x1c0(%rdx),%ymm1
    1c31:	ff 
    1c32:	c4 e2 7d a8 48 40    	vfmadd213ps 0x40(%rax),%ymm0,%ymm1
    1c38:	c5 fc 29 48 40       	vmovaps %ymm1,0x40(%rax)
    1c3d:	c5 fc 28 8a 60 fe ff 	vmovaps -0x1a0(%rdx),%ymm1
    1c44:	ff 
    1c45:	c4 e2 7d a8 48 60    	vfmadd213ps 0x60(%rax),%ymm0,%ymm1
    1c4b:	c5 fc 29 48 60       	vmovaps %ymm1,0x60(%rax)
    1c50:	c5 fc 28 8a 80 fe ff 	vmovaps -0x180(%rdx),%ymm1
    1c57:	ff 
    1c58:	c4 e2 7d a8 88 80 00 	vfmadd213ps 0x80(%rax),%ymm0,%ymm1
    1c5f:	00 00 
    1c61:	c5 fc 29 88 80 00 00 	vmovaps %ymm1,0x80(%rax)
    1c68:	00 
    1c69:	c5 fc 28 8a a0 fe ff 	vmovaps -0x160(%rdx),%ymm1
    1c70:	ff 
    1c71:	c4 e2 7d a8 88 a0 00 	vfmadd213ps 0xa0(%rax),%ymm0,%ymm1
    1c78:	00 00 
    1c7a:	c5 fc 29 88 a0 00 00 	vmovaps %ymm1,0xa0(%rax)
    1c81:	00 
    1c82:	c5 fc 28 8a c0 fe ff 	vmovaps -0x140(%rdx),%ymm1
    1c89:	ff 
    1c8a:	c4 e2 7d a8 88 c0 00 	vfmadd213ps 0xc0(%rax),%ymm0,%ymm1
    1c91:	00 00 
    1c93:	c5 fc 29 88 c0 00 00 	vmovaps %ymm1,0xc0(%rax)
    1c9a:	00 
    1c9b:	c5 fc 28 8a e0 fe ff 	vmovaps -0x120(%rdx),%ymm1
    1ca2:	ff 
    1ca3:	c4 e2 7d a8 88 e0 00 	vfmadd213ps 0xe0(%rax),%ymm0,%ymm1
    1caa:	00 00 
    1cac:	c5 fc 29 88 e0 00 00 	vmovaps %ymm1,0xe0(%rax)
    1cb3:	00 
    1cb4:	c5 fc 28 8a 00 ff ff 	vmovaps -0x100(%rdx),%ymm1
    1cbb:	ff 
    1cbc:	c4 e2 7d a8 88 00 01 	vfmadd213ps 0x100(%rax),%ymm0,%ymm1
    1cc3:	00 00 
    1cc5:	c5 fc 29 88 00 01 00 	vmovaps %ymm1,0x100(%rax)
    1ccc:	00 
    1ccd:	c5 fc 28 8a 20 ff ff 	vmovaps -0xe0(%rdx),%ymm1
    1cd4:	ff 
    1cd5:	c4 e2 7d a8 88 20 01 	vfmadd213ps 0x120(%rax),%ymm0,%ymm1
    1cdc:	00 00 
    1cde:	c5 fc 29 88 20 01 00 	vmovaps %ymm1,0x120(%rax)
    1ce5:	00 
    1ce6:	c5 fc 28 8a 40 ff ff 	vmovaps -0xc0(%rdx),%ymm1
    1ced:	ff 
    1cee:	c4 e2 7d a8 88 40 01 	vfmadd213ps 0x140(%rax),%ymm0,%ymm1
    1cf5:	00 00 
    1cf7:	c5 fc 28 90 e0 01 00 	vmovaps 0x1e0(%rax),%ymm2
    1cfe:	00 
    1cff:	c5 fc 29 88 40 01 00 	vmovaps %ymm1,0x140(%rax)
    1d06:	00 
    1d07:	c5 fc 28 8a 60 ff ff 	vmovaps -0xa0(%rdx),%ymm1
    1d0e:	ff 
    1d0f:	c4 e2 7d a8 88 60 01 	vfmadd213ps 0x160(%rax),%ymm0,%ymm1
    1d16:	00 00 
    1d18:	c5 fc 29 88 60 01 00 	vmovaps %ymm1,0x160(%rax)
    1d1f:	00 
    1d20:	c5 fc 28 4a 80       	vmovaps -0x80(%rdx),%ymm1
    1d25:	c4 e2 7d a8 88 80 01 	vfmadd213ps 0x180(%rax),%ymm0,%ymm1
    1d2c:	00 00 
    1d2e:	c5 fc 29 88 80 01 00 	vmovaps %ymm1,0x180(%rax)
    1d35:	00 
    1d36:	c5 fc 28 4a a0       	vmovaps -0x60(%rdx),%ymm1
    1d3b:	c4 e2 7d a8 88 a0 01 	vfmadd213ps 0x1a0(%rax),%ymm0,%ymm1
    1d42:	00 00 
    1d44:	c5 fc 29 88 a0 01 00 	vmovaps %ymm1,0x1a0(%rax)
    1d4b:	00 
    1d4c:	c5 fc 28 4a c0       	vmovaps -0x40(%rdx),%ymm1
    1d51:	c4 e2 7d a8 88 c0 01 	vfmadd213ps 0x1c0(%rax),%ymm0,%ymm1
    1d58:	00 00 
    1d5a:	c5 fc 29 88 c0 01 00 	vmovaps %ymm1,0x1c0(%rax)
    1d61:	00 
    1d62:	c4 e2 6d 98 42 e0    	vfmadd132ps -0x20(%rdx),%ymm2,%ymm0
    1d68:	c5 fc 29 80 e0 01 00 	vmovaps %ymm0,0x1e0(%rax)
    1d6f:	00 
    1d70:	48 39 d6             	cmp    %rdx,%rsi
    1d73:	0f 85 81 fe ff ff    	jne    1bfa <kij()+0x2a>
    1d79:	48 05 00 02 00 00    	add    $0x200,%rax
    1d7f:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
    1d86:	4c 39 c0             	cmp    %r8,%rax
    1d89:	0f 85 61 fe ff ff    	jne    1bf0 <kij()+0x20>
    1d8f:	c5 f8 77             	vzeroupper 
    1d92:	c3                   	retq   
    1d93:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1d9a:	00 00 00 00 
    1d9e:	66 90                	xchg   %ax,%ax

0000000000001da0 <kji()>:
    1da0:	f3 0f 1e fa          	endbr64 
    1da4:	48 8d 05 b5 33 02 00 	lea    0x233b5(%rip),%rax        # 25160 <a>
    1dab:	48 8d 3d ae 33 01 00 	lea    0x133ae(%rip),%rdi        # 15160 <b>
    1db2:	4c 8d 80 00 00 01 00 	lea    0x10000(%rax),%r8
    1db9:	48 8d 35 a0 33 01 00 	lea    0x133a0(%rip),%rsi        # 15160 <b>
    1dc0:	48 8d 15 99 33 00 00 	lea    0x3399(%rip),%rdx        # 5160 <c>
    1dc7:	48 89 f9             	mov    %rdi,%rcx
    1dca:	c4 e2 7d 18 01       	vbroadcastss (%rcx),%ymm0
    1dcf:	c5 fc 28 0a          	vmovaps (%rdx),%ymm1
    1dd3:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
    1dda:	c4 e2 7d a8 08       	vfmadd213ps (%rax),%ymm0,%ymm1
    1ddf:	48 83 c1 04          	add    $0x4,%rcx
    1de3:	c5 fc 29 08          	vmovaps %ymm1,(%rax)
    1de7:	c5 fc 28 8a 20 fe ff 	vmovaps -0x1e0(%rdx),%ymm1
    1dee:	ff 
    1def:	c4 e2 7d a8 48 20    	vfmadd213ps 0x20(%rax),%ymm0,%ymm1
    1df5:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    1dfa:	c5 fc 28 8a 40 fe ff 	vmovaps -0x1c0(%rdx),%ymm1
    1e01:	ff 
    1e02:	c4 e2 7d a8 48 40    	vfmadd213ps 0x40(%rax),%ymm0,%ymm1
    1e08:	c5 fc 29 48 40       	vmovaps %ymm1,0x40(%rax)
    1e0d:	c5 fc 28 8a 60 fe ff 	vmovaps -0x1a0(%rdx),%ymm1
    1e14:	ff 
    1e15:	c4 e2 7d a8 48 60    	vfmadd213ps 0x60(%rax),%ymm0,%ymm1
    1e1b:	c5 fc 29 48 60       	vmovaps %ymm1,0x60(%rax)
    1e20:	c5 fc 28 8a 80 fe ff 	vmovaps -0x180(%rdx),%ymm1
    1e27:	ff 
    1e28:	c4 e2 7d a8 88 80 00 	vfmadd213ps 0x80(%rax),%ymm0,%ymm1
    1e2f:	00 00 
    1e31:	c5 fc 29 88 80 00 00 	vmovaps %ymm1,0x80(%rax)
    1e38:	00 
    1e39:	c5 fc 28 8a a0 fe ff 	vmovaps -0x160(%rdx),%ymm1
    1e40:	ff 
    1e41:	c4 e2 7d a8 88 a0 00 	vfmadd213ps 0xa0(%rax),%ymm0,%ymm1
    1e48:	00 00 
    1e4a:	c5 fc 29 88 a0 00 00 	vmovaps %ymm1,0xa0(%rax)
    1e51:	00 
    1e52:	c5 fc 28 8a c0 fe ff 	vmovaps -0x140(%rdx),%ymm1
    1e59:	ff 
    1e5a:	c4 e2 7d a8 88 c0 00 	vfmadd213ps 0xc0(%rax),%ymm0,%ymm1
    1e61:	00 00 
    1e63:	c5 fc 29 88 c0 00 00 	vmovaps %ymm1,0xc0(%rax)
    1e6a:	00 
    1e6b:	c5 fc 28 8a e0 fe ff 	vmovaps -0x120(%rdx),%ymm1
    1e72:	ff 
    1e73:	c4 e2 7d a8 88 e0 00 	vfmadd213ps 0xe0(%rax),%ymm0,%ymm1
    1e7a:	00 00 
    1e7c:	c5 fc 29 88 e0 00 00 	vmovaps %ymm1,0xe0(%rax)
    1e83:	00 
    1e84:	c5 fc 28 8a 00 ff ff 	vmovaps -0x100(%rdx),%ymm1
    1e8b:	ff 
    1e8c:	c4 e2 7d a8 88 00 01 	vfmadd213ps 0x100(%rax),%ymm0,%ymm1
    1e93:	00 00 
    1e95:	c5 fc 29 88 00 01 00 	vmovaps %ymm1,0x100(%rax)
    1e9c:	00 
    1e9d:	c5 fc 28 8a 20 ff ff 	vmovaps -0xe0(%rdx),%ymm1
    1ea4:	ff 
    1ea5:	c4 e2 7d a8 88 20 01 	vfmadd213ps 0x120(%rax),%ymm0,%ymm1
    1eac:	00 00 
    1eae:	c5 fc 29 88 20 01 00 	vmovaps %ymm1,0x120(%rax)
    1eb5:	00 
    1eb6:	c5 fc 28 8a 40 ff ff 	vmovaps -0xc0(%rdx),%ymm1
    1ebd:	ff 
    1ebe:	c4 e2 7d a8 88 40 01 	vfmadd213ps 0x140(%rax),%ymm0,%ymm1
    1ec5:	00 00 
    1ec7:	c5 fc 28 90 e0 01 00 	vmovaps 0x1e0(%rax),%ymm2
    1ece:	00 
    1ecf:	c5 fc 29 88 40 01 00 	vmovaps %ymm1,0x140(%rax)
    1ed6:	00 
    1ed7:	c5 fc 28 8a 60 ff ff 	vmovaps -0xa0(%rdx),%ymm1
    1ede:	ff 
    1edf:	c4 e2 7d a8 88 60 01 	vfmadd213ps 0x160(%rax),%ymm0,%ymm1
    1ee6:	00 00 
    1ee8:	c5 fc 29 88 60 01 00 	vmovaps %ymm1,0x160(%rax)
    1eef:	00 
    1ef0:	c5 fc 28 4a 80       	vmovaps -0x80(%rdx),%ymm1
    1ef5:	c4 e2 7d a8 88 80 01 	vfmadd213ps 0x180(%rax),%ymm0,%ymm1
    1efc:	00 00 
    1efe:	c5 fc 29 88 80 01 00 	vmovaps %ymm1,0x180(%rax)
    1f05:	00 
    1f06:	c5 fc 28 4a a0       	vmovaps -0x60(%rdx),%ymm1
    1f0b:	c4 e2 7d a8 88 a0 01 	vfmadd213ps 0x1a0(%rax),%ymm0,%ymm1
    1f12:	00 00 
    1f14:	c5 fc 29 88 a0 01 00 	vmovaps %ymm1,0x1a0(%rax)
    1f1b:	00 
    1f1c:	c5 fc 28 4a c0       	vmovaps -0x40(%rdx),%ymm1
    1f21:	c4 e2 7d a8 88 c0 01 	vfmadd213ps 0x1c0(%rax),%ymm0,%ymm1
    1f28:	00 00 
    1f2a:	c5 fc 29 88 c0 01 00 	vmovaps %ymm1,0x1c0(%rax)
    1f31:	00 
    1f32:	c4 e2 6d 98 42 e0    	vfmadd132ps -0x20(%rdx),%ymm2,%ymm0
    1f38:	c5 fc 29 80 e0 01 00 	vmovaps %ymm0,0x1e0(%rax)
    1f3f:	00 
    1f40:	48 39 d6             	cmp    %rdx,%rsi
    1f43:	0f 85 81 fe ff ff    	jne    1dca <kji()+0x2a>
    1f49:	48 05 00 02 00 00    	add    $0x200,%rax
    1f4f:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
    1f56:	4c 39 c0             	cmp    %r8,%rax
    1f59:	0f 85 61 fe ff ff    	jne    1dc0 <kji()+0x20>
    1f5f:	c5 f8 77             	vzeroupper 
    1f62:	c3                   	retq   
    1f63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1f6a:	00 00 00 
    1f6d:	0f 1f 00             	nopl   (%rax)

0000000000001f70 <std::ctype<char>::do_widen(char) const>:
    1f70:	f3 0f 1e fa          	endbr64 
    1f74:	89 f0                	mov    %esi,%eax
    1f76:	c3                   	retq   
    1f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1f7e:	00 00 

0000000000001f80 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)>:
    1f80:	f3 0f 1e fa          	endbr64 
    1f84:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    1f88:	49 89 c2             	mov    %rax,%r10
    1f8b:	49 c1 ea 3f          	shr    $0x3f,%r10
    1f8f:	49 01 c2             	add    %rax,%r10
    1f92:	49 89 d3             	mov    %rdx,%r11
    1f95:	49 d1 fa             	sar    %r10
    1f98:	41 83 e3 01          	and    $0x1,%r11d
    1f9c:	4c 39 d6             	cmp    %r10,%rsi
    1f9f:	0f 8d bb 00 00 00    	jge    2060 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xe0>
    1fa5:	49 89 f1             	mov    %rsi,%r9
    1fa8:	eb 20                	jmp    1fca <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x4a>
    1faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1fb0:	48 ff c8             	dec    %rax
    1fb3:	4c 8d 04 c7          	lea    (%rdi,%rax,8),%r8
    1fb7:	c4 c1 7b 10 08       	vmovsd (%r8),%xmm1
    1fbc:	c4 a1 7b 11 0c cf    	vmovsd %xmm1,(%rdi,%r9,8)
    1fc2:	49 39 c2             	cmp    %rax,%r10
    1fc5:	7e 30                	jle    1ff7 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x77>
    1fc7:	49 89 c1             	mov    %rax,%r9
    1fca:	49 8d 49 01          	lea    0x1(%r9),%rcx
    1fce:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    1fd2:	48 c1 e1 04          	shl    $0x4,%rcx
    1fd6:	c5 fb 10 4c 0f f8    	vmovsd -0x8(%rdi,%rcx,1),%xmm1
    1fdc:	4c 8d 04 0f          	lea    (%rdi,%rcx,1),%r8
    1fe0:	c4 c1 79 2f 08       	vcomisd (%r8),%xmm1
    1fe5:	77 c9                	ja     1fb0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x30>
    1fe7:	c4 c1 7b 10 08       	vmovsd (%r8),%xmm1
    1fec:	c4 a1 7b 11 0c cf    	vmovsd %xmm1,(%rdi,%r9,8)
    1ff2:	49 39 c2             	cmp    %rax,%r10
    1ff5:	7f d0                	jg     1fc7 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x47>
    1ff7:	4d 85 db             	test   %r11,%r11
    1ffa:	74 74                	je     2070 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xf0>
    1ffc:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2000:	48 89 d1             	mov    %rdx,%rcx
    2003:	48 c1 e9 3f          	shr    $0x3f,%rcx
    2007:	48 01 d1             	add    %rdx,%rcx
    200a:	48 d1 f9             	sar    %rcx
    200d:	48 39 f0             	cmp    %rsi,%rax
    2010:	7f 2f                	jg     2041 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xc1>
    2012:	eb 3c                	jmp    2050 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xd0>
    2014:	0f 1f 40 00          	nopl   0x0(%rax)
    2018:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    201c:	48 89 d0             	mov    %rdx,%rax
    201f:	48 c1 e8 3f          	shr    $0x3f,%rax
    2023:	48 01 d0             	add    %rdx,%rax
    2026:	c4 c1 7b 10 09       	vmovsd (%r9),%xmm1
    202b:	48 d1 f8             	sar    %rax
    202e:	48 89 c2             	mov    %rax,%rdx
    2031:	c4 c1 7b 11 08       	vmovsd %xmm1,(%r8)
    2036:	48 89 c8             	mov    %rcx,%rax
    2039:	48 39 ce             	cmp    %rcx,%rsi
    203c:	7d 72                	jge    20b0 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x130>
    203e:	48 89 d1             	mov    %rdx,%rcx
    2041:	4c 8d 0c cf          	lea    (%rdi,%rcx,8),%r9
    2045:	c4 c1 79 2f 01       	vcomisd (%r9),%xmm0
    204a:	4c 8d 04 c7          	lea    (%rdi,%rax,8),%r8
    204e:	77 c8                	ja     2018 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x98>
    2050:	c4 c1 7b 11 00       	vmovsd %xmm0,(%r8)
    2055:	c3                   	retq   
    2056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    205d:	00 00 00 
    2060:	4c 8d 04 f7          	lea    (%rdi,%rsi,8),%r8
    2064:	4d 85 db             	test   %r11,%r11
    2067:	75 e7                	jne    2050 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0xd0>
    2069:	48 89 f0             	mov    %rsi,%rax
    206c:	0f 1f 40 00          	nopl   0x0(%rax)
    2070:	48 83 ea 02          	sub    $0x2,%rdx
    2074:	48 89 d1             	mov    %rdx,%rcx
    2077:	48 c1 e9 3f          	shr    $0x3f,%rcx
    207b:	48 01 ca             	add    %rcx,%rdx
    207e:	48 d1 fa             	sar    %rdx
    2081:	48 39 c2             	cmp    %rax,%rdx
    2084:	0f 85 72 ff ff ff    	jne    1ffc <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x7c>
    208a:	48 8d 44 00 02       	lea    0x2(%rax,%rax,1),%rax
    208f:	c5 fb 10 4c c7 f8    	vmovsd -0x8(%rdi,%rax,8),%xmm1
    2095:	48 ff c8             	dec    %rax
    2098:	c4 c1 7b 11 08       	vmovsd %xmm1,(%r8)
    209d:	4c 8d 04 c7          	lea    (%rdi,%rax,8),%r8
    20a1:	e9 56 ff ff ff       	jmpq   1ffc <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)+0x7c>
    20a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    20ad:	00 00 00 
    20b0:	4d 89 c8             	mov    %r9,%r8
    20b3:	c4 c1 7b 11 00       	vmovsd %xmm0,(%r8)
    20b8:	c3                   	retq   
    20b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000020c0 <void test<void ()>(void (&)(), char const*)>:
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	41 57                	push   %r15
    20c6:	ba 00 00 01 00       	mov    $0x10000,%edx
    20cb:	41 56                	push   %r14
    20cd:	41 55                	push   %r13
    20cf:	49 89 fd             	mov    %rdi,%r13
    20d2:	48 8d 3d 87 30 02 00 	lea    0x23087(%rip),%rdi        # 25160 <a>
    20d9:	41 54                	push   %r12
    20db:	55                   	push   %rbp
    20dc:	48 89 f5             	mov    %rsi,%rbp
    20df:	31 f6                	xor    %esi,%esi
    20e1:	53                   	push   %rbx
    20e2:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    20e9:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    20ee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    20f5:	00 00 
    20f7:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
    20fe:	00 
    20ff:	31 c0                	xor    %eax,%eax
    2101:	49 89 df             	mov    %rbx,%r15
    2104:	e8 57 f0 ff ff       	callq  1160 <memset@plt>
    2109:	4c 8d a4 24 18 01 00 	lea    0x118(%rsp),%r12
    2110:	00 
    2111:	e8 2a f0 ff ff       	callq  1140 <std::chrono::_V2::system_clock::now()@plt>
    2116:	49 89 c6             	mov    %rax,%r14
    2119:	41 ff d5             	callq  *%r13
    211c:	e8 1f f0 ff ff       	callq  1140 <std::chrono::_V2::system_clock::now()@plt>
    2121:	4c 29 f0             	sub    %r14,%rax
    2124:	c5 d9 57 e4          	vxorpd %xmm4,%xmm4,%xmm4
    2128:	c4 e1 db 2a c0       	vcvtsi2sd %rax,%xmm4,%xmm0
    212d:	49 83 c7 08          	add    $0x8,%r15
    2131:	c5 fb 5e 05 4f 0f 00 	vdivsd 0xf4f(%rip),%xmm0,%xmm0        # 3088 <_IO_stdin_used+0x88>
    2138:	00 
    2139:	c4 c1 7b 11 47 f8    	vmovsd %xmm0,-0x8(%r15)
    213f:	4d 39 fc             	cmp    %r15,%r12
    2142:	75 cd                	jne    2111 <void test<void ()>(void (&)(), char const*)+0x51>
    2144:	c5 fb 10 54 24 10    	vmovsd 0x10(%rsp),%xmm2
    214a:	b9 0a 00 00 00       	mov    $0xa,%ecx
    214f:	b8 08 01 00 00       	mov    $0x108,%eax
    2154:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
    215b:	00 
    215c:	48 c1 f8 04          	sar    $0x4,%rax
    2160:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    2164:	c5 fb 10 5b 08       	vmovsd 0x8(%rbx),%xmm3
    2169:	c5 fb 10 08          	vmovsd (%rax),%xmm1
    216d:	c4 c1 7b 10 44 24 f8 	vmovsd -0x8(%r12),%xmm0
    2174:	c5 f9 2f cb          	vcomisd %xmm3,%xmm1
    2178:	48 8d 53 08          	lea    0x8(%rbx),%rdx
    217c:	0f 86 6e 02 00 00    	jbe    23f0 <void test<void ()>(void (&)(), char const*)+0x330>
    2182:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    2186:	0f 87 78 02 00 00    	ja     2404 <void test<void ()>(void (&)(), char const*)+0x344>
    218c:	c5 f9 2f c3          	vcomisd %xmm3,%xmm0
    2190:	0f 86 2f 03 00 00    	jbe    24c5 <void test<void ()>(void (&)(), char const*)+0x405>
    2196:	c5 fb 11 03          	vmovsd %xmm0,(%rbx)
    219a:	c4 c1 7b 11 54 24 f8 	vmovsd %xmm2,-0x8(%r12)
    21a1:	c5 f9 28 c2          	vmovapd %xmm2,%xmm0
    21a5:	c5 fb 10 0b          	vmovsd (%rbx),%xmm1
    21a9:	4c 89 e0             	mov    %r12,%rax
    21ac:	0f 1f 40 00          	nopl   0x0(%rax)
    21b0:	c5 fb 10 12          	vmovsd (%rdx),%xmm2
    21b4:	c5 f9 2f ca          	vcomisd %xmm2,%xmm1
    21b8:	77 37                	ja     21f1 <void test<void ()>(void (&)(), char const*)+0x131>
    21ba:	48 83 e8 08          	sub    $0x8,%rax
    21be:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    21c2:	76 13                	jbe    21d7 <void test<void ()>(void (&)(), char const*)+0x117>
    21c4:	0f 1f 40 00          	nopl   0x0(%rax)
    21c8:	c5 fb 10 40 f8       	vmovsd -0x8(%rax),%xmm0
    21cd:	48 83 e8 08          	sub    $0x8,%rax
    21d1:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    21d5:	77 f1                	ja     21c8 <void test<void ()>(void (&)(), char const*)+0x108>
    21d7:	48 39 c2             	cmp    %rax,%rdx
    21da:	73 1b                	jae    21f7 <void test<void ()>(void (&)(), char const*)+0x137>
    21dc:	c5 fb 10 00          	vmovsd (%rax),%xmm0
    21e0:	c5 fb 11 02          	vmovsd %xmm0,(%rdx)
    21e4:	c5 fb 11 10          	vmovsd %xmm2,(%rax)
    21e8:	c5 fb 10 0b          	vmovsd (%rbx),%xmm1
    21ec:	c5 fb 10 40 f8       	vmovsd -0x8(%rax),%xmm0
    21f1:	48 83 c2 08          	add    $0x8,%rdx
    21f5:	eb b9                	jmp    21b0 <void test<void ()>(void (&)(), char const*)+0xf0>
    21f7:	48 39 f2             	cmp    %rsi,%rdx
    21fa:	0f 86 18 02 00 00    	jbe    2418 <void test<void ()>(void (&)(), char const*)+0x358>
    2200:	49 89 d4             	mov    %rdx,%r12
    2203:	4c 89 e0             	mov    %r12,%rax
    2206:	48 29 d8             	sub    %rbx,%rax
    2209:	c5 f9 28 d1          	vmovapd %xmm1,%xmm2
    220d:	48 83 f8 18          	cmp    $0x18,%rax
    2211:	0f 8e 14 02 00 00    	jle    242b <void test<void ()>(void (&)(), char const*)+0x36b>
    2217:	48 ff c9             	dec    %rcx
    221a:	0f 85 3c ff ff ff    	jne    215c <void test<void ()>(void (&)(), char const*)+0x9c>
    2220:	4c 8d ac 24 98 00 00 	lea    0x98(%rsp),%r13
    2227:	00 
    2228:	4d 89 ef             	mov    %r13,%r15
    222b:	49 29 df             	sub    %rbx,%r15
    222e:	49 83 ff 08          	cmp    $0x8,%r15
    2232:	7e 41                	jle    2275 <void test<void ()>(void (&)(), char const*)+0x1b5>
    2234:	4c 89 fa             	mov    %r15,%rdx
    2237:	48 c1 fa 03          	sar    $0x3,%rdx
    223b:	48 8d 42 fe          	lea    -0x2(%rdx),%rax
    223f:	49 89 c6             	mov    %rax,%r14
    2242:	49 c1 ee 3f          	shr    $0x3f,%r14
    2246:	49 01 c6             	add    %rax,%r14
    2249:	49 d1 fe             	sar    %r14
    224c:	eb 03                	jmp    2251 <void test<void ()>(void (&)(), char const*)+0x191>
    224e:	49 ff ce             	dec    %r14
    2251:	c4 a1 7b 10 04 f3    	vmovsd (%rbx,%r14,8),%xmm0
    2257:	4c 89 f6             	mov    %r14,%rsi
    225a:	48 89 df             	mov    %rbx,%rdi
    225d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    2262:	e8 19 fd ff ff       	callq  1f80 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)>
    2267:	4d 85 f6             	test   %r14,%r14
    226a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    226f:	75 dd                	jne    224e <void test<void ()>(void (&)(), char const*)+0x18e>
    2271:	c5 fb 10 13          	vmovsd (%rbx),%xmm2
    2275:	49 c1 ff 03          	sar    $0x3,%r15
    2279:	4d 39 ec             	cmp    %r13,%r12
    227c:	77 0b                	ja     2289 <void test<void ()>(void (&)(), char const*)+0x1c9>
    227e:	eb 3b                	jmp    22bb <void test<void ()>(void (&)(), char const*)+0x1fb>
    2280:	49 83 c5 08          	add    $0x8,%r13
    2284:	4d 39 ec             	cmp    %r13,%r12
    2287:	76 32                	jbe    22bb <void test<void ()>(void (&)(), char const*)+0x1fb>
    2289:	c4 c1 79 2f 55 00    	vcomisd 0x0(%r13),%xmm2
    228f:	76 ef                	jbe    2280 <void test<void ()>(void (&)(), char const*)+0x1c0>
    2291:	c5 fb 10 0b          	vmovsd (%rbx),%xmm1
    2295:	c4 c1 7b 10 45 00    	vmovsd 0x0(%r13),%xmm0
    229b:	4c 89 fa             	mov    %r15,%rdx
    229e:	c4 c1 7b 11 4d 00    	vmovsd %xmm1,0x0(%r13)
    22a4:	31 f6                	xor    %esi,%esi
    22a6:	48 89 df             	mov    %rbx,%rdi
    22a9:	49 83 c5 08          	add    $0x8,%r13
    22ad:	e8 ce fc ff ff       	callq  1f80 <void std::__adjust_heap<std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter>(std::chrono::duration<double, std::ratio<1l, 1000l> >*, long, long, std::chrono::duration<double, std::ratio<1l, 1000l> >, __gnu_cxx::__ops::_Iter_less_iter)>
    22b2:	c5 fb 10 13          	vmovsd (%rbx),%xmm2
    22b6:	4d 39 ec             	cmp    %r13,%r12
    22b9:	77 ce                	ja     2289 <void test<void ()>(void (&)(), char const*)+0x1c9>
    22bb:	c5 fb 10 84 24 90 00 	vmovsd 0x90(%rsp),%xmm0
    22c2:	00 00 
    22c4:	c5 fb 11 03          	vmovsd %xmm0,(%rbx)
    22c8:	c5 fb 11 94 24 90 00 	vmovsd %xmm2,0x90(%rsp)
    22cf:	00 00 
    22d1:	48 85 ed             	test   %rbp,%rbp
    22d4:	0f 84 32 02 00 00    	je     250c <void test<void ()>(void (&)(), char const*)+0x44c>
    22da:	48 89 ef             	mov    %rbp,%rdi
    22dd:	e8 6e ee ff ff       	callq  1150 <strlen@plt>
    22e2:	48 89 c2             	mov    %rax,%rdx
    22e5:	48 89 ee             	mov    %rbp,%rsi
    22e8:	48 8d 3d 51 2d 00 00 	lea    0x2d51(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    22ef:	e8 bc ee ff ff       	callq  11b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    22f4:	48 8d 1d 45 2d 00 00 	lea    0x2d45(%rip),%rbx        # 5040 <std::cout@@GLIBCXX_3.4>
    22fb:	48 8d 35 02 0d 00 00 	lea    0xd02(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    2302:	ba 01 00 00 00       	mov    $0x1,%edx
    2307:	48 8d 3d 32 2d 00 00 	lea    0x2d32(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    230e:	e8 9d ee ff ff       	callq  11b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    2313:	48 8b 0d 26 2d 00 00 	mov    0x2d26(%rip),%rcx        # 5040 <std::cout@@GLIBCXX_3.4>
    231a:	c5 fb 10 84 24 90 00 	vmovsd 0x90(%rsp),%xmm0
    2321:	00 00 
    2323:	48 8b 51 e8          	mov    -0x18(%rcx),%rdx
    2327:	48 8d 3d 12 2d 00 00 	lea    0x2d12(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    232e:	48 01 da             	add    %rbx,%rdx
    2331:	8b 42 18             	mov    0x18(%rdx),%eax
    2334:	48 c7 42 08 02 00 00 	movq   $0x2,0x8(%rdx)
    233b:	00 
    233c:	25 fb fe ff ff       	and    $0xfffffefb,%eax
    2341:	83 c8 04             	or     $0x4,%eax
    2344:	89 42 18             	mov    %eax,0x18(%rdx)
    2347:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    234b:	48 c7 44 03 10 06 00 	movq   $0x6,0x10(%rbx,%rax,1)
    2352:	00 00 
    2354:	e8 97 ee ff ff       	callq  11f0 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
    2359:	48 89 c5             	mov    %rax,%rbp
    235c:	ba 02 00 00 00       	mov    $0x2,%edx
    2361:	48 8d 35 9e 0c 00 00 	lea    0xc9e(%rip),%rsi        # 3006 <_IO_stdin_used+0x6>
    2368:	48 89 c7             	mov    %rax,%rdi
    236b:	e8 40 ee ff ff       	callq  11b0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    2370:	48 8b 45 00          	mov    0x0(%rbp),%rax
    2374:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    2378:	4c 8b a4 05 f0 00 00 	mov    0xf0(%rbp,%rax,1),%r12
    237f:	00 
    2380:	4d 85 e4             	test   %r12,%r12
    2383:	0f 84 d8 01 00 00    	je     2561 <void test<void ()>(void (&)(), char const*)+0x4a1>
    2389:	41 80 7c 24 38 00    	cmpb   $0x0,0x38(%r12)
    238f:	0f 84 45 01 00 00    	je     24da <void test<void ()>(void (&)(), char const*)+0x41a>
    2395:	41 0f be 74 24 43    	movsbl 0x43(%r12),%esi
    239b:	48 89 ef             	mov    %rbp,%rdi
    239e:	e8 8d ed ff ff       	callq  1130 <std::ostream::put(char)@plt>
    23a3:	48 89 c7             	mov    %rax,%rdi
    23a6:	e8 d5 ed ff ff       	callq  1180 <std::ostream::flush()@plt>
    23ab:	c5 fa 10 05 a9 2d 03 	vmovss 0x32da9(%rip),%xmm0        # 3515c <a+0xfffc>
    23b2:	00 
    23b3:	c5 f8 2e 05 d5 0c 00 	vucomiss 0xcd5(%rip),%xmm0        # 3090 <_IO_stdin_used+0x90>
    23ba:	00 
    23bb:	0f 8a 81 01 00 00    	jp     2542 <void test<void ()>(void (&)(), char const*)+0x482>
    23c1:	0f 85 7b 01 00 00    	jne    2542 <void test<void ()>(void (&)(), char const*)+0x482>
    23c7:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
    23ce:	00 
    23cf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    23d6:	00 00 
    23d8:	0f 85 5f 01 00 00    	jne    253d <void test<void ()>(void (&)(), char const*)+0x47d>
    23de:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    23e5:	5b                   	pop    %rbx
    23e6:	5d                   	pop    %rbp
    23e7:	41 5c                	pop    %r12
    23e9:	41 5d                	pop    %r13
    23eb:	41 5e                	pop    %r14
    23ed:	41 5f                	pop    %r15
    23ef:	c3                   	retq   
    23f0:	c5 f9 2f c3          	vcomisd %xmm3,%xmm0
    23f4:	0f 87 cb 00 00 00    	ja     24c5 <void test<void ()>(void (&)(), char const*)+0x405>
    23fa:	c5 f9 2f c1          	vcomisd %xmm1,%xmm0
    23fe:	0f 87 92 fd ff ff    	ja     2196 <void test<void ()>(void (&)(), char const*)+0xd6>
    2404:	c5 fb 11 0b          	vmovsd %xmm1,(%rbx)
    2408:	c5 fb 11 10          	vmovsd %xmm2,(%rax)
    240c:	c4 c1 7b 10 44 24 f8 	vmovsd -0x8(%r12),%xmm0
    2413:	e9 8d fd ff ff       	jmpq   21a5 <void test<void ()>(void (&)(), char const*)+0xe5>
    2418:	48 89 d3             	mov    %rdx,%rbx
    241b:	4c 89 e0             	mov    %r12,%rax
    241e:	48 29 d8             	sub    %rbx,%rax
    2421:	48 83 f8 18          	cmp    $0x18,%rax
    2425:	0f 8f ec fd ff ff    	jg     2217 <void test<void ()>(void (&)(), char const*)+0x157>
    242b:	4c 39 e3             	cmp    %r12,%rbx
    242e:	0f 84 9d fe ff ff    	je     22d1 <void test<void ()>(void (&)(), char const*)+0x211>
    2434:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
    2438:	4d 39 ec             	cmp    %r13,%r12
    243b:	0f 84 90 fe ff ff    	je     22d1 <void test<void ()>(void (&)(), char const*)+0x211>
    2441:	41 be 08 00 00 00    	mov    $0x8,%r14d
    2447:	eb 3b                	jmp    2484 <void test<void ()>(void (&)(), char const*)+0x3c4>
    2449:	49 39 dd             	cmp    %rbx,%r13
    244c:	74 21                	je     246f <void test<void ()>(void (&)(), char const*)+0x3af>
    244e:	4a 8d 04 33          	lea    (%rbx,%r14,1),%rax
    2452:	4c 89 ea             	mov    %r13,%rdx
    2455:	48 29 da             	sub    %rbx,%rdx
    2458:	48 89 de             	mov    %rbx,%rsi
    245b:	48 89 c7             	mov    %rax,%rdi
    245e:	c5 fb 11 44 24 08    	vmovsd %xmm0,0x8(%rsp)
    2464:	e8 97 ed ff ff       	callq  1200 <memmove@plt>
    2469:	c5 fb 10 44 24 08    	vmovsd 0x8(%rsp),%xmm0
    246f:	c5 fb 11 03          	vmovsd %xmm0,(%rbx)
    2473:	49 83 c5 08          	add    $0x8,%r13
    2477:	4d 39 ec             	cmp    %r13,%r12
    247a:	0f 84 51 fe ff ff    	je     22d1 <void test<void ()>(void (&)(), char const*)+0x211>
    2480:	c5 fb 10 13          	vmovsd (%rbx),%xmm2
    2484:	c4 c1 7b 10 45 00    	vmovsd 0x0(%r13),%xmm0
    248a:	c5 f9 2f d0          	vcomisd %xmm0,%xmm2
    248e:	77 b9                	ja     2449 <void test<void ()>(void (&)(), char const*)+0x389>
    2490:	c4 c1 7b 10 4d f8    	vmovsd -0x8(%r13),%xmm1
    2496:	49 8d 45 f8          	lea    -0x8(%r13),%rax
    249a:	c5 f9 2f c8          	vcomisd %xmm0,%xmm1
    249e:	0f 86 8d 00 00 00    	jbe    2531 <void test<void ()>(void (&)(), char const*)+0x471>
    24a4:	c5 fb 10 08          	vmovsd (%rax),%xmm1
    24a8:	48 89 c2             	mov    %rax,%rdx
    24ab:	c5 fb 11 48 08       	vmovsd %xmm1,0x8(%rax)
    24b0:	c5 fb 10 48 f8       	vmovsd -0x8(%rax),%xmm1
    24b5:	48 83 e8 08          	sub    $0x8,%rax
    24b9:	c5 f9 2f c8          	vcomisd %xmm0,%xmm1
    24bd:	77 e5                	ja     24a4 <void test<void ()>(void (&)(), char const*)+0x3e4>
    24bf:	c5 fb 11 02          	vmovsd %xmm0,(%rdx)
    24c3:	eb ae                	jmp    2473 <void test<void ()>(void (&)(), char const*)+0x3b3>
    24c5:	c5 fb 11 1b          	vmovsd %xmm3,(%rbx)
    24c9:	c5 fb 11 53 08       	vmovsd %xmm2,0x8(%rbx)
    24ce:	c4 c1 7b 10 44 24 f8 	vmovsd -0x8(%r12),%xmm0
    24d5:	e9 cb fc ff ff       	jmpq   21a5 <void test<void ()>(void (&)(), char const*)+0xe5>
    24da:	4c 89 e7             	mov    %r12,%rdi
    24dd:	e8 de ec ff ff       	callq  11c0 <std::ctype<char>::_M_widen_init() const@plt>
    24e2:	49 8b 04 24          	mov    (%r12),%rax
    24e6:	48 8d 15 83 fa ff ff 	lea    -0x57d(%rip),%rdx        # 1f70 <std::ctype<char>::do_widen(char) const>
    24ed:	48 8b 40 30          	mov    0x30(%rax),%rax
    24f1:	be 0a 00 00 00       	mov    $0xa,%esi
    24f6:	48 39 d0             	cmp    %rdx,%rax
    24f9:	0f 84 9c fe ff ff    	je     239b <void test<void ()>(void (&)(), char const*)+0x2db>
    24ff:	4c 89 e7             	mov    %r12,%rdi
    2502:	ff d0                	callq  *%rax
    2504:	0f be f0             	movsbl %al,%esi
    2507:	e9 8f fe ff ff       	jmpq   239b <void test<void ()>(void (&)(), char const*)+0x2db>
    250c:	48 8b 05 2d 2b 00 00 	mov    0x2b2d(%rip),%rax        # 5040 <std::cout@@GLIBCXX_3.4>
    2513:	48 8d 1d 26 2b 00 00 	lea    0x2b26(%rip),%rbx        # 5040 <std::cout@@GLIBCXX_3.4>
    251a:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    251e:	48 01 df             	add    %rbx,%rdi
    2521:	8b 77 20             	mov    0x20(%rdi),%esi
    2524:	83 ce 01             	or     $0x1,%esi
    2527:	e8 e4 ec ff ff       	callq  1210 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    252c:	e9 ca fd ff ff       	jmpq   22fb <void test<void ()>(void (&)(), char const*)+0x23b>
    2531:	4c 89 ea             	mov    %r13,%rdx
    2534:	c5 fb 11 02          	vmovsd %xmm0,(%rdx)
    2538:	e9 36 ff ff ff       	jmpq   2473 <void test<void ()>(void (&)(), char const*)+0x3b3>
    253d:	e8 5e ec ff ff       	callq  11a0 <__stack_chk_fail@plt>
    2542:	48 8d 0d cf 0a 00 00 	lea    0xacf(%rip),%rcx        # 3018 <_IO_stdin_used+0x18>
    2549:	ba 51 00 00 00       	mov    $0x51,%edx
    254e:	48 8d 35 b4 0a 00 00 	lea    0xab4(%rip),%rsi        # 3009 <_IO_stdin_used+0x9>
    2555:	48 8d 3d ec 0a 00 00 	lea    0xaec(%rip),%rdi        # 3048 <_IO_stdin_used+0x48>
    255c:	e8 0f ec ff ff       	callq  1170 <__assert_fail@plt>
    2561:	e8 6a ec ff ff       	callq  11d0 <std::__throw_bad_cast()@plt>
    2566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    256d:	00 00 00 

0000000000002570 <__libc_csu_init>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	41 57                	push   %r15
    2576:	4c 8d 3d ab 27 00 00 	lea    0x27ab(%rip),%r15        # 4d28 <__frame_dummy_init_array_entry>
    257d:	41 56                	push   %r14
    257f:	49 89 d6             	mov    %rdx,%r14
    2582:	41 55                	push   %r13
    2584:	49 89 f5             	mov    %rsi,%r13
    2587:	41 54                	push   %r12
    2589:	41 89 fc             	mov    %edi,%r12d
    258c:	55                   	push   %rbp
    258d:	48 8d 2d a4 27 00 00 	lea    0x27a4(%rip),%rbp        # 4d38 <__do_global_dtors_aux_fini_array_entry>
    2594:	53                   	push   %rbx
    2595:	4c 29 fd             	sub    %r15,%rbp
    2598:	48 83 ec 08          	sub    $0x8,%rsp
    259c:	e8 5f ea ff ff       	callq  1000 <_init>
    25a1:	48 c1 fd 03          	sar    $0x3,%rbp
    25a5:	74 1f                	je     25c6 <__libc_csu_init+0x56>
    25a7:	31 db                	xor    %ebx,%ebx
    25a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    25b0:	4c 89 f2             	mov    %r14,%rdx
    25b3:	4c 89 ee             	mov    %r13,%rsi
    25b6:	44 89 e7             	mov    %r12d,%edi
    25b9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    25bd:	48 83 c3 01          	add    $0x1,%rbx
    25c1:	48 39 dd             	cmp    %rbx,%rbp
    25c4:	75 ea                	jne    25b0 <__libc_csu_init+0x40>
    25c6:	48 83 c4 08          	add    $0x8,%rsp
    25ca:	5b                   	pop    %rbx
    25cb:	5d                   	pop    %rbp
    25cc:	41 5c                	pop    %r12
    25ce:	41 5d                	pop    %r13
    25d0:	41 5e                	pop    %r14
    25d2:	41 5f                	pop    %r15
    25d4:	c3                   	retq   
    25d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    25dc:	00 00 00 00 

00000000000025e0 <__libc_csu_fini>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	c3                   	retq   

Desensamblado de la sección .fini:

00000000000025e8 <_fini>:
    25e8:	f3 0f 1e fa          	endbr64 
    25ec:	48 83 ec 08          	sub    $0x8,%rsp
    25f0:	48 83 c4 08          	add    $0x8,%rsp
    25f4:	c3                   	retq   
