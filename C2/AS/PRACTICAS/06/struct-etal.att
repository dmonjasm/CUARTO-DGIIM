
struct-etal:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000001020 <.plt>:
    1020:	ff 35 02 3f 00 00    	pushq  0x3f02(%rip)        # 4f28 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 03 3f 00 00 	bnd jmpq *0x3f03(%rip)        # 4f30 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	pushq  $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmpq 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	pushq  $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmpq 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	pushq  $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmpq 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	pushq  $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmpq 1020 <.plt>
    115f:	90                   	nop

Desensamblado de la sección .plt.got:

0000000000001160 <__cxa_finalize@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 65 3e 00 00 	bnd jmpq *0x3e65(%rip)        # 4fd0 <__cxa_finalize@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .plt.sec:

0000000000001170 <std::ostream::put(char)@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 bd 3d 00 00 	bnd jmpq *0x3dbd(%rip)        # 4f38 <std::ostream::put(char)@GLIBCXX_3.4>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <std::chrono::_V2::system_clock::now()@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 b5 3d 00 00 	bnd jmpq *0x3db5(%rip)        # 4f40 <std::chrono::_V2::system_clock::now()@GLIBCXX_3.4.19>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <strlen@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 ad 3d 00 00 	bnd jmpq *0x3dad(%rip)        # 4f48 <strlen@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <memset@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 a5 3d 00 00 	bnd jmpq *0x3da5(%rip)        # 4f50 <memset@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <std::ostream::flush()@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 9d 3d 00 00 	bnd jmpq *0x3d9d(%rip)        # 4f58 <std::ostream::flush()@GLIBCXX_3.4>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <__cxa_atexit@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 95 3d 00 00 	bnd jmpq *0x3d95(%rip)        # 4f60 <__cxa_atexit@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <std::random_device::_M_fini()@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 8d 3d 00 00 	bnd jmpq *0x3d8d(%rip)        # 4f68 <std::random_device::_M_fini()@GLIBCXX_3.4.18>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <operator delete(void*)@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 85 3d 00 00 	bnd jmpq *0x3d85(%rip)        # 4f70 <operator delete(void*)@GLIBCXX_3.4>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <std::ostream& std::ostream::_M_insert<long>(long)@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 7d 3d 00 00 	bnd jmpq *0x3d7d(%rip)        # 4f78 <std::ostream& std::ostream::_M_insert<long>(long)@GLIBCXX_3.4.9>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <__stack_chk_fail@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 75 3d 00 00 	bnd jmpq *0x3d75(%rip)        # 4f80 <__stack_chk_fail@GLIBC_2.4>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 6d 3d 00 00 	bnd jmpq *0x3d6d(%rip)        # 4f88 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <std::ctype<char>::_M_widen_init() const@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 65 3d 00 00 	bnd jmpq *0x3d65(%rip)        # 4f90 <std::ctype<char>::_M_widen_init() const@GLIBCXX_3.4.11>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <std::__throw_bad_cast()@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 5d 3d 00 00 	bnd jmpq *0x3d5d(%rip)        # 4f98 <std::__throw_bad_cast()@GLIBCXX_3.4>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <std::random_device::_M_getval()@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 55 3d 00 00 	bnd jmpq *0x3d55(%rip)        # 4fa0 <std::random_device::_M_getval()@GLIBCXX_3.4.18>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <std::ios_base::Init::Init()@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 4d 3d 00 00 	bnd jmpq *0x3d4d(%rip)        # 4fa8 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <std::random_device::_M_init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 45 3d 00 00 	bnd jmpq *0x3d45(%rip)        # 4fb0 <std::random_device::_M_init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@GLIBCXX_3.4.21>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 3d 3d 00 00 	bnd jmpq *0x3d3d(%rip)        # 4fb8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@GLIBCXX_3.4>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <std::ostream::operator<<(int)@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 35 3d 00 00 	bnd jmpq *0x3d35(%rip)        # 4fc0 <std::ostream::operator<<(int)@GLIBCXX_3.4>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <_Unwind_Resume@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 2d 3d 00 00 	bnd jmpq *0x3d2d(%rip)        # 4fc8 <_Unwind_Resume@GCC_3.0>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la sección .text:

00000000000012a0 <main>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	48 83 ec 08          	sub    $0x8,%rsp
    12a8:	48 8d 35 77 1d 00 00 	lea    0x1d77(%rip),%rsi        # 3026 <_IO_stdin_used+0x26>
    12af:	48 8d 3d 4a 04 00 00 	lea    0x44a(%rip),%rdi        # 1700 <v0()>
    12b6:	e8 c5 0a 00 00       	callq  1d80 <void test<void ()>(void (&)(), char const*)>
    12bb:	48 8d 35 67 1d 00 00 	lea    0x1d67(%rip),%rsi        # 3029 <_IO_stdin_used+0x29>
    12c2:	48 8d 3d 27 06 00 00 	lea    0x627(%rip),%rdi        # 18f0 <v1()>
    12c9:	e8 b2 0a 00 00       	callq  1d80 <void test<void ()>(void (&)(), char const*)>
    12ce:	48 8d 35 57 1d 00 00 	lea    0x1d57(%rip),%rsi        # 302c <_IO_stdin_used+0x2c>
    12d5:	48 8d 3d a4 06 00 00 	lea    0x6a4(%rip),%rdi        # 1980 <v2()>
    12dc:	e8 9f 0a 00 00       	callq  1d80 <void test<void ()>(void (&)(), char const*)>
    12e1:	48 8d 35 47 1d 00 00 	lea    0x1d47(%rip),%rsi        # 302f <_IO_stdin_used+0x2f>
    12e8:	48 8d 3d 31 07 00 00 	lea    0x731(%rip),%rdi        # 1a20 <v3()>
    12ef:	e8 8c 0a 00 00       	callq  1d80 <void test<void ()>(void (&)(), char const*)>
    12f4:	48 8d 35 37 1d 00 00 	lea    0x1d37(%rip),%rsi        # 3032 <_IO_stdin_used+0x32>
    12fb:	48 8d 3d ce 07 00 00 	lea    0x7ce(%rip),%rdi        # 1ad0 <v4()>
    1302:	e8 79 0a 00 00       	callq  1d80 <void test<void ()>(void (&)(), char const*)>
    1307:	48 8d 35 27 1d 00 00 	lea    0x1d27(%rip),%rsi        # 3035 <_IO_stdin_used+0x35>
    130e:	48 8d 3d ab 08 00 00 	lea    0x8ab(%rip),%rdi        # 1bc0 <v5()>
    1315:	e8 66 0a 00 00       	callq  1d80 <void test<void ()>(void (&)(), char const*)>
    131a:	31 c0                	xor    %eax,%eax
    131c:	48 83 c4 08          	add    $0x8,%rsp
    1320:	c3                   	retq   
    1321:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1328:	00 00 00 00 
    132c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001330 <_GLOBAL__sub_I_device>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	41 57                	push   %r15
    1336:	48 8d 3d c3 26 02 00 	lea    0x226c3(%rip),%rdi        # 23a00 <std::__ioinit>
    133d:	4c 8d 3d 3c ee 00 00 	lea    0xee3c(%rip),%r15        # 10180 <s>
    1344:	41 56                	push   %r14
    1346:	4d 8d b7 80 38 01 00 	lea    0x13880(%r15),%r14
    134d:	41 55                	push   %r13
    134f:	49 bd 09 00 00 00 02 	movabs $0x8000000200000009,%r13
    1356:	00 00 80 
    1359:	41 54                	push   %r12
    135b:	55                   	push   %rbp
    135c:	48 8d 2d 4d da 00 00 	lea    0xda4d(%rip),%rbp        # edb0 <rng>
    1363:	53                   	push   %rbx
    1364:	48 bb 05 00 00 00 02 	movabs $0x200000005,%rbx
    136b:	00 00 00 
    136e:	48 83 ec 28          	sub    $0x28,%rsp
    1372:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1379:	00 00 
    137b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1380:	31 c0                	xor    %eax,%eax
    1382:	e8 c9 fe ff ff       	callq  1250 <std::ios_base::Init::Init()@plt>
    1387:	48 8b 3d 6a 3c 00 00 	mov    0x3c6a(%rip),%rdi        # 4ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    138e:	48 8d 15 73 3c 00 00 	lea    0x3c73(%rip),%rdx        # 5008 <__dso_handle>
    1395:	48 8d 35 64 26 02 00 	lea    0x22664(%rip),%rsi        # 23a00 <std::__ioinit>
    139c:	e8 1f fe ff ff       	callq  11c0 <__cxa_atexit@plt>
    13a1:	48 8d 3d 38 da 00 00 	lea    0xda38(%rip),%rdi        # ede0 <device>
    13a8:	e8 33 09 00 00       	callq  1ce0 <std::random_device::random_device()>
    13ad:	48 8d 15 54 3c 00 00 	lea    0x3c54(%rip),%rdx        # 5008 <__dso_handle>
    13b4:	48 8d 35 25 da 00 00 	lea    0xda25(%rip),%rsi        # ede0 <device>
    13bb:	48 8d 3d fe 08 00 00 	lea    0x8fe(%rip),%rdi        # 1cc0 <std::random_device::~random_device()>
    13c2:	e8 f9 fd ff ff       	callq  11c0 <__cxa_atexit@plt>
    13c7:	48 8d 3d 12 da 00 00 	lea    0xda12(%rip),%rdi        # ede0 <device>
    13ce:	e8 6d fe ff ff       	callq  1240 <std::random_device::_M_getval()@plt>
    13d3:	89 c1                	mov    %eax,%ecx
    13d5:	48 89 c8             	mov    %rcx,%rax
    13d8:	48 f7 e3             	mul    %rbx
    13db:	48 89 c8             	mov    %rcx,%rax
    13de:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    13e3:	48 29 d0             	sub    %rdx,%rax
    13e6:	48 d1 e8             	shr    %rax
    13e9:	48 01 c2             	add    %rax,%rdx
    13ec:	48 c1 ea 1e          	shr    $0x1e,%rdx
    13f0:	48 89 d0             	mov    %rdx,%rax
    13f3:	48 c1 e0 1f          	shl    $0x1f,%rax
    13f7:	48 29 d0             	sub    %rdx,%rax
    13fa:	48 29 c1             	sub    %rax,%rcx
    13fd:	48 89 ca             	mov    %rcx,%rdx
    1400:	b8 01 00 00 00       	mov    $0x1,%eax
    1405:	48 0f 44 d0          	cmove  %rax,%rdx
    1409:	48 b8 00 00 00 00 09 	movabs $0x900000000,%rax
    1410:	00 00 00 
    1413:	48 89 15 ae d9 00 00 	mov    %rdx,0xd9ae(%rip)        # edc8 <generator>
    141a:	48 89 05 9f d9 00 00 	mov    %rax,0xd99f(%rip)        # edc0 <distribution>
    1421:	48 89 05 88 d9 00 00 	mov    %rax,0xd988(%rip)        # edb0 <rng>
    1428:	48 89 15 89 d9 00 00 	mov    %rdx,0xd989(%rip)        # edb8 <rng+0x8>
    142f:	90                   	nop
    1430:	48 8d 15 79 d9 00 00 	lea    0xd979(%rip),%rdx        # edb0 <rng>
    1437:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    143b:	48 89 d7             	mov    %rdx,%rdi
    143e:	e8 2d 0b 00 00       	callq  1f70 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)>
    1443:	41 89 07             	mov    %eax,(%r15)
    1446:	48 63 0d 67 d9 00 00 	movslq 0xd967(%rip),%rcx        # edb4 <rng+0x4>
    144d:	48 63 45 00          	movslq 0x0(%rbp),%rax
    1451:	48 29 c1             	sub    %rax,%rcx
    1454:	48 89 c6             	mov    %rax,%rsi
    1457:	48 81 f9 fc ff ff 7f 	cmp    $0x7ffffffc,%rcx
    145e:	0f 87 9c 00 00 00    	ja     1500 <_GLOBAL__sub_I_device+0x1d0>
    1464:	48 ff c1             	inc    %rcx
    1467:	b8 fd ff ff 7f       	mov    $0x7ffffffd,%eax
    146c:	31 d2                	xor    %edx,%edx
    146e:	48 f7 f1             	div    %rcx
    1471:	48 8b 3d 40 d9 00 00 	mov    0xd940(%rip),%rdi        # edb8 <rng+0x8>
    1478:	48 0f af c8          	imul   %rax,%rcx
    147c:	49 89 c0             	mov    %rax,%r8
    147f:	90                   	nop
    1480:	4c 69 cf a7 41 00 00 	imul   $0x41a7,%rdi,%r9
    1487:	4c 89 c8             	mov    %r9,%rax
    148a:	48 f7 e3             	mul    %rbx
    148d:	4c 89 cf             	mov    %r9,%rdi
    1490:	48 29 d7             	sub    %rdx,%rdi
    1493:	48 d1 ef             	shr    %rdi
    1496:	48 01 d7             	add    %rdx,%rdi
    1499:	48 c1 ef 1e          	shr    $0x1e,%rdi
    149d:	48 89 f8             	mov    %rdi,%rax
    14a0:	48 c1 e0 1f          	shl    $0x1f,%rax
    14a4:	48 29 f8             	sub    %rdi,%rax
    14a7:	4c 89 cf             	mov    %r9,%rdi
    14aa:	48 29 c7             	sub    %rax,%rdi
    14ad:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
    14b1:	48 39 c1             	cmp    %rax,%rcx
    14b4:	76 ca                	jbe    1480 <_GLOBAL__sub_I_device+0x150>
    14b6:	31 d2                	xor    %edx,%edx
    14b8:	49 f7 f0             	div    %r8
    14bb:	48 89 3d f6 d8 00 00 	mov    %rdi,0xd8f6(%rip)        # edb8 <rng+0x8>
    14c2:	01 f0                	add    %esi,%eax
    14c4:	41 89 47 04          	mov    %eax,0x4(%r15)
    14c8:	49 83 c7 08          	add    $0x8,%r15
    14cc:	4d 39 f7             	cmp    %r14,%r15
    14cf:	0f 85 5b ff ff ff    	jne    1430 <_GLOBAL__sub_I_device+0x100>
    14d5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    14da:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    14e1:	00 00 
    14e3:	0f 85 1f 01 00 00    	jne    1608 <_GLOBAL__sub_I_device+0x2d8>
    14e9:	48 83 c4 28          	add    $0x28,%rsp
    14ed:	5b                   	pop    %rbx
    14ee:	5d                   	pop    %rbp
    14ef:	41 5c                	pop    %r12
    14f1:	41 5d                	pop    %r13
    14f3:	41 5e                	pop    %r14
    14f5:	41 5f                	pop    %r15
    14f7:	c3                   	retq   
    14f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    14ff:	00 
    1500:	48 81 f9 fd ff ff 7f 	cmp    $0x7ffffffd,%rcx
    1507:	0f 84 bb 00 00 00    	je     15c8 <_GLOBAL__sub_I_device+0x298>
    150d:	48 89 ca             	mov    %rcx,%rdx
    1510:	48 d1 ea             	shr    %rdx
    1513:	48 89 d0             	mov    %rdx,%rax
    1516:	49 f7 e5             	mul    %r13
    1519:	48 c1 ea 1d          	shr    $0x1d,%rdx
    151d:	49 89 d0             	mov    %rdx,%r8
    1520:	48 8d 35 91 d8 00 00 	lea    0xd891(%rip),%rsi        # edb8 <rng+0x8>
    1527:	4c 89 e2             	mov    %r12,%rdx
    152a:	48 8d 7e f8          	lea    -0x8(%rsi),%rdi
    152e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1533:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
    1538:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    153d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    1544:	00 
    1545:	e8 26 0a 00 00       	callq  1f70 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)>
    154a:	48 69 35 63 d8 00 00 	imul   $0x41a7,0xd863(%rip),%rsi        # edb8 <rng+0x8>
    1551:	a7 41 00 00 
    1555:	41 89 c1             	mov    %eax,%r9d
    1558:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    155d:	48 89 f0             	mov    %rsi,%rax
    1560:	48 f7 e3             	mul    %rbx
    1563:	48 89 f0             	mov    %rsi,%rax
    1566:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    156b:	48 29 d0             	sub    %rdx,%rax
    156e:	48 d1 e8             	shr    %rax
    1571:	48 01 c2             	add    %rax,%rdx
    1574:	48 89 d0             	mov    %rdx,%rax
    1577:	48 c1 e8 1e          	shr    $0x1e,%rax
    157b:	48 89 c2             	mov    %rax,%rdx
    157e:	48 c1 e2 1f          	shl    $0x1f,%rdx
    1582:	48 29 c2             	sub    %rax,%rdx
    1585:	48 29 d6             	sub    %rdx,%rsi
    1588:	49 63 d1             	movslq %r9d,%rdx
    158b:	48 69 d2 fe ff ff 7f 	imul   $0x7ffffffe,%rdx,%rdx
    1592:	48 89 f0             	mov    %rsi,%rax
    1595:	48 ff c8             	dec    %rax
    1598:	48 01 d0             	add    %rdx,%rax
    159b:	0f 92 c2             	setb   %dl
    159e:	48 39 c1             	cmp    %rax,%rcx
    15a1:	48 89 35 10 d8 00 00 	mov    %rsi,0xd810(%rip)        # edb8 <rng+0x8>
    15a8:	0f b6 d2             	movzbl %dl,%edx
    15ab:	0f 82 6f ff ff ff    	jb     1520 <_GLOBAL__sub_I_device+0x1f0>
    15b1:	48 85 d2             	test   %rdx,%rdx
    15b4:	0f 85 66 ff ff ff    	jne    1520 <_GLOBAL__sub_I_device+0x1f0>
    15ba:	8b 75 00             	mov    0x0(%rbp),%esi
    15bd:	e9 00 ff ff ff       	jmpq   14c2 <_GLOBAL__sub_I_device+0x192>
    15c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    15c8:	48 69 0d e5 d7 00 00 	imul   $0x41a7,0xd7e5(%rip),%rcx        # edb8 <rng+0x8>
    15cf:	a7 41 00 00 
    15d3:	48 89 c8             	mov    %rcx,%rax
    15d6:	48 f7 e3             	mul    %rbx
    15d9:	48 89 c8             	mov    %rcx,%rax
    15dc:	48 29 d0             	sub    %rdx,%rax
    15df:	48 d1 e8             	shr    %rax
    15e2:	48 01 d0             	add    %rdx,%rax
    15e5:	48 c1 e8 1e          	shr    $0x1e,%rax
    15e9:	48 89 c2             	mov    %rax,%rdx
    15ec:	48 c1 e2 1f          	shl    $0x1f,%rdx
    15f0:	48 29 c2             	sub    %rax,%rdx
    15f3:	48 29 d1             	sub    %rdx,%rcx
    15f6:	48 89 c8             	mov    %rcx,%rax
    15f9:	48 89 0d b8 d7 00 00 	mov    %rcx,0xd7b8(%rip)        # edb8 <rng+0x8>
    1600:	48 ff c8             	dec    %rax
    1603:	e9 ba fe ff ff       	jmpq   14c2 <_GLOBAL__sub_I_device+0x192>
    1608:	e8 f3 fb ff ff       	callq  1200 <__stack_chk_fail@plt>
    160d:	0f 1f 00             	nopl   (%rax)

0000000000001610 <_start>:
    1610:	f3 0f 1e fa          	endbr64 
    1614:	31 ed                	xor    %ebp,%ebp
    1616:	49 89 d1             	mov    %rdx,%r9
    1619:	5e                   	pop    %rsi
    161a:	48 89 e2             	mov    %rsp,%rdx
    161d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1621:	50                   	push   %rax
    1622:	54                   	push   %rsp
    1623:	4c 8d 05 86 0b 00 00 	lea    0xb86(%rip),%r8        # 21b0 <__libc_csu_fini>
    162a:	48 8d 0d 0f 0b 00 00 	lea    0xb0f(%rip),%rcx        # 2140 <__libc_csu_init>
    1631:	48 8d 3d 68 fc ff ff 	lea    -0x398(%rip),%rdi        # 12a0 <main>
    1638:	ff 15 a2 39 00 00    	callq  *0x39a2(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    163e:	f4                   	hlt    
    163f:	90                   	nop

0000000000001640 <deregister_tm_clones>:
    1640:	48 8d 3d d1 39 00 00 	lea    0x39d1(%rip),%rdi        # 5018 <__TMC_END__>
    1647:	48 8d 05 ca 39 00 00 	lea    0x39ca(%rip),%rax        # 5018 <__TMC_END__>
    164e:	48 39 f8             	cmp    %rdi,%rax
    1651:	74 15                	je     1668 <deregister_tm_clones+0x28>
    1653:	48 8b 05 7e 39 00 00 	mov    0x397e(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable>
    165a:	48 85 c0             	test   %rax,%rax
    165d:	74 09                	je     1668 <deregister_tm_clones+0x28>
    165f:	ff e0                	jmpq   *%rax
    1661:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1668:	c3                   	retq   
    1669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001670 <register_tm_clones>:
    1670:	48 8d 3d a1 39 00 00 	lea    0x39a1(%rip),%rdi        # 5018 <__TMC_END__>
    1677:	48 8d 35 9a 39 00 00 	lea    0x399a(%rip),%rsi        # 5018 <__TMC_END__>
    167e:	48 29 fe             	sub    %rdi,%rsi
    1681:	48 89 f0             	mov    %rsi,%rax
    1684:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1688:	48 c1 f8 03          	sar    $0x3,%rax
    168c:	48 01 c6             	add    %rax,%rsi
    168f:	48 d1 fe             	sar    %rsi
    1692:	74 14                	je     16a8 <register_tm_clones+0x38>
    1694:	48 8b 05 55 39 00 00 	mov    0x3955(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable>
    169b:	48 85 c0             	test   %rax,%rax
    169e:	74 08                	je     16a8 <register_tm_clones+0x38>
    16a0:	ff e0                	jmpq   *%rax
    16a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    16a8:	c3                   	retq   
    16a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000016b0 <__do_global_dtors_aux>:
    16b0:	f3 0f 1e fa          	endbr64 
    16b4:	80 3d 95 3a 00 00 00 	cmpb   $0x0,0x3a95(%rip)        # 5150 <completed.8061>
    16bb:	75 2b                	jne    16e8 <__do_global_dtors_aux+0x38>
    16bd:	55                   	push   %rbp
    16be:	48 83 3d 0a 39 00 00 	cmpq   $0x0,0x390a(%rip)        # 4fd0 <__cxa_finalize@GLIBC_2.2.5>
    16c5:	00 
    16c6:	48 89 e5             	mov    %rsp,%rbp
    16c9:	74 0c                	je     16d7 <__do_global_dtors_aux+0x27>
    16cb:	48 8b 3d 36 39 00 00 	mov    0x3936(%rip),%rdi        # 5008 <__dso_handle>
    16d2:	e8 89 fa ff ff       	callq  1160 <__cxa_finalize@plt>
    16d7:	e8 64 ff ff ff       	callq  1640 <deregister_tm_clones>
    16dc:	c6 05 6d 3a 00 00 01 	movb   $0x1,0x3a6d(%rip)        # 5150 <completed.8061>
    16e3:	5d                   	pop    %rbp
    16e4:	c3                   	retq   
    16e5:	0f 1f 00             	nopl   (%rax)
    16e8:	c3                   	retq   
    16e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000016f0 <frame_dummy>:
    16f0:	f3 0f 1e fa          	endbr64 
    16f4:	e9 77 ff ff ff       	jmpq   1670 <register_tm_clones>
    16f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001700 <v0()>:
    1700:	f3 0f 1e fa          	endbr64 
    1704:	55                   	push   %rbp
    1705:	48 8d 0d f4 22 02 00 	lea    0x222f4(%rip),%rcx        # 23a00 <std::__ioinit>
    170c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    1712:	48 89 e5             	mov    %rsp,%rbp
    1715:	41 57                	push   %r15
    1717:	48 8d 51 c4          	lea    -0x3c(%rcx),%rdx
    171b:	4c 8d 0d 3e 3a 00 00 	lea    0x3a3e(%rip),%r9        # 5160 <R>
    1722:	41 56                	push   %r14
    1724:	41 55                	push   %r13
    1726:	41 54                	push   %r12
    1728:	53                   	push   %rbx
    1729:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
    172d:	8b 05 91 22 02 00    	mov    0x22291(%rip),%eax        # 239c4 <s+0x13844>
    1733:	44 8d 34 40          	lea    (%rax,%rax,2),%r14d
    1737:	8b 05 8f 22 02 00    	mov    0x2228f(%rip),%eax        # 239cc <s+0x1384c>
    173d:	44 8d 2c 40          	lea    (%rax,%rax,2),%r13d
    1741:	8b 05 8d 22 02 00    	mov    0x2228d(%rip),%eax        # 239d4 <s+0x13854>
    1747:	44 8d 24 40          	lea    (%rax,%rax,2),%r12d
    174b:	8b 05 8b 22 02 00    	mov    0x2228b(%rip),%eax        # 239dc <s+0x1385c>
    1751:	8d 1c 40             	lea    (%rax,%rax,2),%ebx
    1754:	8b 05 8a 22 02 00    	mov    0x2228a(%rip),%eax        # 239e4 <s+0x13864>
    175a:	44 8d 1c 40          	lea    (%rax,%rax,2),%r11d
    175e:	8b 05 88 22 02 00    	mov    0x22288(%rip),%eax        # 239ec <s+0x1386c>
    1764:	44 8d 14 40          	lea    (%rax,%rax,2),%r10d
    1768:	8b 05 86 22 02 00    	mov    0x22286(%rip),%eax        # 239f4 <s+0x13874>
    176e:	8d 04 40             	lea    (%rax,%rax,2),%eax
    1771:	89 44 24 fc          	mov    %eax,-0x4(%rsp)
    1775:	8b 05 81 22 02 00    	mov    0x22281(%rip),%eax        # 239fc <s+0x1387c>
    177b:	8d 04 40             	lea    (%rax,%rax,2),%eax
    177e:	89 44 24 f8          	mov    %eax,-0x8(%rsp)
    1782:	c4 c1 79 6e d0       	vmovd  %r8d,%xmm2
    1787:	44 89 c6             	mov    %r8d,%esi
    178a:	c4 e2 7d 58 d2       	vpbroadcastd %xmm2,%ymm2
    178f:	48 8d 05 ea e9 00 00 	lea    0xe9ea(%rip),%rax        # 10180 <s>
    1796:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
    179a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    17a0:	c5 fd 6f 08          	vmovdqa (%rax),%ymm1
    17a4:	c5 fd 6f 58 20       	vmovdqa 0x20(%rax),%ymm3
    17a9:	48 83 c0 40          	add    $0x40,%rax
    17ad:	c4 e3 75 46 c3 20    	vperm2i128 $0x20,%ymm3,%ymm1,%ymm0
    17b3:	c4 e3 75 46 cb 31    	vperm2i128 $0x31,%ymm3,%ymm1,%ymm1
    17b9:	c5 fd 70 c0 d8       	vpshufd $0xd8,%ymm0,%ymm0
    17be:	c5 fd 70 c9 d8       	vpshufd $0xd8,%ymm1,%ymm1
    17c3:	c5 fd 6c c1          	vpunpcklqdq %ymm1,%ymm0,%ymm0
    17c7:	c5 fd 72 f0 01       	vpslld $0x1,%ymm0,%ymm0
    17cc:	c5 fd fe c2          	vpaddd %ymm2,%ymm0,%ymm0
    17d0:	c5 dd fe e0          	vpaddd %ymm0,%ymm4,%ymm4
    17d4:	48 39 c8             	cmp    %rcx,%rax
    17d7:	75 c7                	jne    17a0 <v0()+0xa0>
    17d9:	c5 f9 6f c4          	vmovdqa %xmm4,%xmm0
    17dd:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    17e3:	c5 f9 fe e4          	vpaddd %xmm4,%xmm0,%xmm4
    17e7:	c5 f9 73 dc 08       	vpsrldq $0x8,%xmm4,%xmm0
    17ec:	c5 d9 fe c0          	vpaddd %xmm0,%xmm4,%xmm0
    17f0:	c5 f1 73 d8 04       	vpsrldq $0x4,%xmm0,%xmm1
    17f5:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    17f9:	c5 f9 7e c7          	vmovd  %xmm0,%edi
    17fd:	48 8d 05 80 e9 00 00 	lea    0xe980(%rip),%rax        # 10184 <s+0x4>
    1804:	c5 d9 ef e4          	vpxor  %xmm4,%xmm4,%xmm4
    1808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    180f:	00 
    1810:	c5 fe 6f 08          	vmovdqu (%rax),%ymm1
    1814:	c5 fe 6f 58 20       	vmovdqu 0x20(%rax),%ymm3
    1819:	48 83 c0 40          	add    $0x40,%rax
    181d:	c4 e3 75 46 c3 20    	vperm2i128 $0x20,%ymm3,%ymm1,%ymm0
    1823:	c4 e3 75 46 cb 31    	vperm2i128 $0x31,%ymm3,%ymm1,%ymm1
    1829:	c5 fd 70 c9 d8       	vpshufd $0xd8,%ymm1,%ymm1
    182e:	c5 fd 70 c0 d8       	vpshufd $0xd8,%ymm0,%ymm0
    1833:	c5 fd 6c c1          	vpunpcklqdq %ymm1,%ymm0,%ymm0
    1837:	c5 f5 72 f0 01       	vpslld $0x1,%ymm0,%ymm1
    183c:	c5 f5 fe c0          	vpaddd %ymm0,%ymm1,%ymm0
    1840:	c5 fd fa c2          	vpsubd %ymm2,%ymm0,%ymm0
    1844:	c5 dd fe e0          	vpaddd %ymm0,%ymm4,%ymm4
    1848:	48 39 c2             	cmp    %rax,%rdx
    184b:	75 c3                	jne    1810 <v0()+0x110>
    184d:	c5 f9 6f c4          	vmovdqa %xmm4,%xmm0
    1851:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    1857:	c5 f9 fe e4          	vpaddd %xmm4,%xmm0,%xmm4
    185b:	c5 f9 73 dc 08       	vpsrldq $0x8,%xmm4,%xmm0
    1860:	c5 d9 fe c0          	vpaddd %xmm0,%xmm4,%xmm0
    1864:	c5 f1 73 d8 04       	vpsrldq $0x4,%xmm0,%xmm1
    1869:	45 89 f7             	mov    %r14d,%r15d
    186c:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    1870:	41 29 f7             	sub    %esi,%r15d
    1873:	c5 f9 7e c0          	vmovd  %xmm0,%eax
    1877:	44 01 f8             	add    %r15d,%eax
    187a:	45 89 ef             	mov    %r13d,%r15d
    187d:	41 29 f7             	sub    %esi,%r15d
    1880:	44 01 f8             	add    %r15d,%eax
    1883:	45 89 e7             	mov    %r12d,%r15d
    1886:	41 29 f7             	sub    %esi,%r15d
    1889:	44 01 f8             	add    %r15d,%eax
    188c:	41 89 df             	mov    %ebx,%r15d
    188f:	41 29 f7             	sub    %esi,%r15d
    1892:	44 01 f8             	add    %r15d,%eax
    1895:	45 89 df             	mov    %r11d,%r15d
    1898:	41 29 f7             	sub    %esi,%r15d
    189b:	44 01 f8             	add    %r15d,%eax
    189e:	45 89 d7             	mov    %r10d,%r15d
    18a1:	41 29 f7             	sub    %esi,%r15d
    18a4:	44 01 f8             	add    %r15d,%eax
    18a7:	44 8b 7c 24 fc       	mov    -0x4(%rsp),%r15d
    18ac:	41 29 f7             	sub    %esi,%r15d
    18af:	44 01 f8             	add    %r15d,%eax
    18b2:	44 8b 7c 24 f8       	mov    -0x8(%rsp),%r15d
    18b7:	41 29 f7             	sub    %esi,%r15d
    18ba:	44 01 f8             	add    %r15d,%eax
    18bd:	39 f8                	cmp    %edi,%eax
    18bf:	0f 4f c7             	cmovg  %edi,%eax
    18c2:	43 89 04 81          	mov    %eax,(%r9,%r8,4)
    18c6:	49 ff c0             	inc    %r8
    18c9:	49 81 f8 11 27 00 00 	cmp    $0x2711,%r8
    18d0:	0f 85 ac fe ff ff    	jne    1782 <v0()+0x82>
    18d6:	c5 f8 77             	vzeroupper 
    18d9:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    18dd:	5b                   	pop    %rbx
    18de:	41 5c                	pop    %r12
    18e0:	41 5d                	pop    %r13
    18e2:	41 5e                	pop    %r14
    18e4:	41 5f                	pop    %r15
    18e6:	5d                   	pop    %rbp
    18e7:	c3                   	retq   
    18e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    18ef:	00 

00000000000018f0 <v1()>:
    18f0:	f3 0f 1e fa          	endbr64 
    18f4:	48 8d 35 69 38 00 00 	lea    0x3869(%rip),%rsi        # 5164 <R+0x4>
    18fb:	c5 fd 6f 25 3d 17 00 	vmovdqa 0x173d(%rip),%ymm4        # 3040 <_IO_stdin_used+0x40>
    1902:	00 
    1903:	c5 fd 6f 2d 55 17 00 	vmovdqa 0x1755(%rip),%ymm5        # 3060 <_IO_stdin_used+0x60>
    190a:	00 
    190b:	48 8d be 40 9c 00 00 	lea    0x9c40(%rsi),%rdi
    1912:	48 8d 0d e7 20 02 00 	lea    0x220e7(%rip),%rcx        # 23a00 <std::__ioinit>
    1919:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
    191d:	c5 fd 6f dc          	vmovdqa %ymm4,%ymm3
    1921:	48 8d 15 58 e8 00 00 	lea    0xe858(%rip),%rdx        # 10180 <s>
    1928:	c5 dd fe e5          	vpaddd %ymm5,%ymm4,%ymm4
    192c:	c5 fd 6f d1          	vmovdqa %ymm1,%ymm2
    1930:	8b 02                	mov    (%rdx),%eax
    1932:	48 83 c2 08          	add    $0x8,%rdx
    1936:	01 c0                	add    %eax,%eax
    1938:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    193c:	8b 42 fc             	mov    -0x4(%rdx),%eax
    193f:	c4 e2 7d 58 c0       	vpbroadcastd %xmm0,%ymm0
    1944:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    1948:	8d 04 40             	lea    (%rax,%rax,2),%eax
    194b:	c5 ed fe d0          	vpaddd %ymm0,%ymm2,%ymm2
    194f:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    1953:	c4 e2 7d 58 c0       	vpbroadcastd %xmm0,%ymm0
    1958:	c5 fd fa c3          	vpsubd %ymm3,%ymm0,%ymm0
    195c:	c5 f5 fe c8          	vpaddd %ymm0,%ymm1,%ymm1
    1960:	48 39 d1             	cmp    %rdx,%rcx
    1963:	75 cb                	jne    1930 <v1()+0x40>
    1965:	c4 e2 75 39 ca       	vpminsd %ymm2,%ymm1,%ymm1
    196a:	c5 fe 7f 0e          	vmovdqu %ymm1,(%rsi)
    196e:	48 83 c6 20          	add    $0x20,%rsi
    1972:	48 39 fe             	cmp    %rdi,%rsi
    1975:	75 a2                	jne    1919 <v1()+0x29>
    1977:	c5 f8 77             	vzeroupper 
    197a:	c3                   	retq   
    197b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001980 <v2()>:
    1980:	f3 0f 1e fa          	endbr64 
    1984:	48 8d 35 d9 37 00 00 	lea    0x37d9(%rip),%rsi        # 5164 <R+0x4>
    198b:	c5 fd 6f 2d ad 16 00 	vmovdqa 0x16ad(%rip),%ymm5        # 3040 <_IO_stdin_used+0x40>
    1992:	00 
    1993:	c5 fd 6f 35 c5 16 00 	vmovdqa 0x16c5(%rip),%ymm6        # 3060 <_IO_stdin_used+0x60>
    199a:	00 
    199b:	48 8d be 40 9c 00 00 	lea    0x9c40(%rsi),%rdi
    19a2:	48 8d 0d 57 20 02 00 	lea    0x22057(%rip),%rcx        # 23a00 <std::__ioinit>
    19a9:	c5 fd 6f dd          	vmovdqa %ymm5,%ymm3
    19ad:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
    19b1:	c5 d5 fe ee          	vpaddd %ymm6,%ymm5,%ymm5
    19b5:	c5 dd 72 f3 01       	vpslld $0x1,%ymm3,%ymm4
    19ba:	48 8d 15 bf e7 00 00 	lea    0xe7bf(%rip),%rdx        # 10180 <s>
    19c1:	c5 fd 6f d1          	vmovdqa %ymm1,%ymm2
    19c5:	0f 1f 00             	nopl   (%rax)
    19c8:	8b 42 08             	mov    0x8(%rdx),%eax
    19cb:	48 83 c2 10          	add    $0x10,%rdx
    19cf:	03 42 f0             	add    -0x10(%rdx),%eax
    19d2:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    19d6:	8b 42 fc             	mov    -0x4(%rdx),%eax
    19d9:	c4 e2 7d 58 c0       	vpbroadcastd %xmm0,%ymm0
    19de:	03 42 f4             	add    -0xc(%rdx),%eax
    19e1:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    19e5:	c5 fd 72 f0 01       	vpslld $0x1,%ymm0,%ymm0
    19ea:	8d 04 40             	lea    (%rax,%rax,2),%eax
    19ed:	c5 ed fe d0          	vpaddd %ymm0,%ymm2,%ymm2
    19f1:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    19f5:	c4 e2 7d 58 c0       	vpbroadcastd %xmm0,%ymm0
    19fa:	c5 fd fa c4          	vpsubd %ymm4,%ymm0,%ymm0
    19fe:	c5 f5 fe c8          	vpaddd %ymm0,%ymm1,%ymm1
    1a02:	48 39 d1             	cmp    %rdx,%rcx
    1a05:	75 c1                	jne    19c8 <v2()+0x48>
    1a07:	c4 e2 75 39 ca       	vpminsd %ymm2,%ymm1,%ymm1
    1a0c:	c5 fe 7f 0e          	vmovdqu %ymm1,(%rsi)
    1a10:	48 83 c6 20          	add    $0x20,%rsi
    1a14:	48 39 f7             	cmp    %rsi,%rdi
    1a17:	75 90                	jne    19a9 <v2()+0x29>
    1a19:	c5 f8 77             	vzeroupper 
    1a1c:	c3                   	retq   
    1a1d:	0f 1f 00             	nopl   (%rax)

0000000000001a20 <v3()>:
    1a20:	f3 0f 1e fa          	endbr64 
    1a24:	48 8d 0d 39 37 00 00 	lea    0x3739(%rip),%rcx        # 5164 <R+0x4>
    1a2b:	c5 fd 6f 25 0d 16 00 	vmovdqa 0x160d(%rip),%ymm4        # 3040 <_IO_stdin_used+0x40>
    1a32:	00 
    1a33:	c5 fd 6f 3d 25 16 00 	vmovdqa 0x1625(%rip),%ymm7        # 3060 <_IO_stdin_used+0x60>
    1a3a:	00 
    1a3b:	c5 fd 6f 35 3d 16 00 	vmovdqa 0x163d(%rip),%ymm6        # 3080 <_IO_stdin_used+0x80>
    1a42:	00 
    1a43:	c5 fd 6f 2d 55 16 00 	vmovdqa 0x1655(%rip),%ymm5        # 30a0 <_IO_stdin_used+0xa0>
    1a4a:	00 
    1a4b:	48 8d b1 40 9c 00 00 	lea    0x9c40(%rcx),%rsi
    1a52:	48 8d 15 a7 1f 02 00 	lea    0x21fa7(%rip),%rdx        # 23a00 <std::__ioinit>
    1a59:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    1a5d:	c5 fd 6f dc          	vmovdqa %ymm4,%ymm3
    1a61:	48 8d 05 18 e7 00 00 	lea    0xe718(%rip),%rax        # 10180 <s>
    1a68:	c5 dd fe e7          	vpaddd %ymm7,%ymm4,%ymm4
    1a6c:	c5 fd 6f c8          	vmovdqa %ymm0,%ymm1
    1a70:	c4 e2 7d 58 10       	vpbroadcastd (%rax),%ymm2
    1a75:	48 83 c0 08          	add    $0x8,%rax
    1a79:	c5 f5 fe ca          	vpaddd %ymm2,%ymm1,%ymm1
    1a7d:	c4 e2 7d 58 50 fc    	vpbroadcastd -0x4(%rax),%ymm2
    1a83:	c5 fd fe c2          	vpaddd %ymm2,%ymm0,%ymm0
    1a87:	48 39 c2             	cmp    %rax,%rdx
    1a8a:	75 e4                	jne    1a70 <v3()+0x50>
    1a8c:	c4 e2 65 40 d6       	vpmulld %ymm6,%ymm3,%ymm2
    1a91:	c4 e2 65 40 dd       	vpmulld %ymm5,%ymm3,%ymm3
    1a96:	48 83 c1 20          	add    $0x20,%rcx
    1a9a:	c5 ed fe c9          	vpaddd %ymm1,%ymm2,%ymm1
    1a9e:	c5 ed 72 f0 01       	vpslld $0x1,%ymm0,%ymm2
    1aa3:	c5 ed fe c0          	vpaddd %ymm0,%ymm2,%ymm0
    1aa7:	c5 f5 72 f1 01       	vpslld $0x1,%ymm1,%ymm1
    1aac:	c5 e5 fe c0          	vpaddd %ymm0,%ymm3,%ymm0
    1ab0:	c4 e2 75 39 c0       	vpminsd %ymm0,%ymm1,%ymm0
    1ab5:	c5 fe 7f 41 e0       	vmovdqu %ymm0,-0x20(%rcx)
    1aba:	48 39 f1             	cmp    %rsi,%rcx
    1abd:	75 9a                	jne    1a59 <v3()+0x39>
    1abf:	c5 f8 77             	vzeroupper 
    1ac2:	c3                   	retq   
    1ac3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1aca:	00 00 00 00 
    1ace:	66 90                	xchg   %ax,%ax

0000000000001ad0 <v4()>:
    1ad0:	f3 0f 1e fa          	endbr64 
    1ad4:	48 8d 05 a5 e6 00 00 	lea    0xe6a5(%rip),%rax        # 10180 <s>
    1adb:	48 8d 90 80 38 01 00 	lea    0x13880(%rax),%rdx
    1ae2:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    1ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1aed:	00 00 00 
    1af0:	c5 fd fe 00          	vpaddd (%rax),%ymm0,%ymm0
    1af4:	48 83 c0 20          	add    $0x20,%rax
    1af8:	48 39 d0             	cmp    %rdx,%rax
    1afb:	75 f3                	jne    1af0 <v4()+0x20>
    1afd:	c4 c1 79 7e c1       	vmovd  %xmm0,%r9d
    1b02:	c4 c3 79 16 c0 01    	vpextrd $0x1,%xmm0,%r8d
    1b08:	c4 c3 79 16 c2 02    	vpextrd $0x2,%xmm0,%r10d
    1b0e:	c4 e3 79 16 c1 03    	vpextrd $0x3,%xmm0,%ecx
    1b14:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    1b1a:	c4 e3 79 16 c6 01    	vpextrd $0x1,%xmm0,%esi
    1b20:	44 01 c1             	add    %r8d,%ecx
    1b23:	c5 f9 7e c7          	vmovd  %xmm0,%edi
    1b27:	c4 e3 79 16 c0 03    	vpextrd $0x3,%xmm0,%eax
    1b2d:	45 01 d1             	add    %r10d,%r9d
    1b30:	01 f1                	add    %esi,%ecx
    1b32:	c4 e3 79 16 c2 02    	vpextrd $0x2,%xmm0,%edx
    1b38:	44 01 cf             	add    %r9d,%edi
    1b3b:	01 c8                	add    %ecx,%eax
    1b3d:	01 fa                	add    %edi,%edx
    1b3f:	8d 04 40             	lea    (%rax,%rax,2),%eax
    1b42:	c5 f9 6e da          	vmovd  %edx,%xmm3
    1b46:	c5 f9 6e e0          	vmovd  %eax,%xmm4
    1b4a:	c5 fd 6f 15 ee 14 00 	vmovdqa 0x14ee(%rip),%ymm2        # 3040 <_IO_stdin_used+0x40>
    1b51:	00 
    1b52:	48 8d 05 0b 36 00 00 	lea    0x360b(%rip),%rax        # 5164 <R+0x4>
    1b59:	c5 fd 6f 3d ff 14 00 	vmovdqa 0x14ff(%rip),%ymm7        # 3060 <_IO_stdin_used+0x60>
    1b60:	00 
    1b61:	c5 fd 6f 35 17 15 00 	vmovdqa 0x1517(%rip),%ymm6        # 3080 <_IO_stdin_used+0x80>
    1b68:	00 
    1b69:	c5 fd 6f 2d 2f 15 00 	vmovdqa 0x152f(%rip),%ymm5        # 30a0 <_IO_stdin_used+0xa0>
    1b70:	00 
    1b71:	c4 e2 7d 58 db       	vpbroadcastd %xmm3,%ymm3
    1b76:	c4 e2 7d 58 e4       	vpbroadcastd %xmm4,%ymm4
    1b7b:	48 8d 90 40 9c 00 00 	lea    0x9c40(%rax),%rdx
    1b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1b88:	c5 fd 6f ca          	vmovdqa %ymm2,%ymm1
    1b8c:	c4 e2 75 40 c6       	vpmulld %ymm6,%ymm1,%ymm0
    1b91:	c4 e2 75 40 cd       	vpmulld %ymm5,%ymm1,%ymm1
    1b96:	48 83 c0 20          	add    $0x20,%rax
    1b9a:	c5 ed fe d7          	vpaddd %ymm7,%ymm2,%ymm2
    1b9e:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    1ba2:	c5 fd 72 f0 01       	vpslld $0x1,%ymm0,%ymm0
    1ba7:	c5 f5 fe cc          	vpaddd %ymm4,%ymm1,%ymm1
    1bab:	c4 e2 7d 39 c1       	vpminsd %ymm1,%ymm0,%ymm0
    1bb0:	c5 fe 7f 40 e0       	vmovdqu %ymm0,-0x20(%rax)
    1bb5:	48 39 c2             	cmp    %rax,%rdx
    1bb8:	75 ce                	jne    1b88 <v4()+0xb8>
    1bba:	c5 f8 77             	vzeroupper 
    1bbd:	c3                   	retq   
    1bbe:	66 90                	xchg   %ax,%ax

0000000000001bc0 <v5()>:
    1bc0:	f3 0f 1e fa          	endbr64 
    1bc4:	48 8d 05 b5 e5 00 00 	lea    0xe5b5(%rip),%rax        # 10180 <s>
    1bcb:	48 8d 90 80 38 01 00 	lea    0x13880(%rax),%rdx
    1bd2:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    1bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1bdd:	00 00 00 
    1be0:	c5 fd fe 00          	vpaddd (%rax),%ymm0,%ymm0
    1be4:	48 83 c0 20          	add    $0x20,%rax
    1be8:	48 39 d0             	cmp    %rdx,%rax
    1beb:	75 f3                	jne    1be0 <v5()+0x20>
    1bed:	c4 c1 79 7e c1       	vmovd  %xmm0,%r9d
    1bf2:	c4 c3 79 16 c0 01    	vpextrd $0x1,%xmm0,%r8d
    1bf8:	c4 c3 79 16 c2 02    	vpextrd $0x2,%xmm0,%r10d
    1bfe:	c4 e3 79 16 c1 03    	vpextrd $0x3,%xmm0,%ecx
    1c04:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    1c0a:	c4 e3 79 16 c6 01    	vpextrd $0x1,%xmm0,%esi
    1c10:	44 01 c1             	add    %r8d,%ecx
    1c13:	c5 f9 7e c7          	vmovd  %xmm0,%edi
    1c17:	c4 e3 79 16 c0 03    	vpextrd $0x3,%xmm0,%eax
    1c1d:	45 01 d1             	add    %r10d,%r9d
    1c20:	01 f1                	add    %esi,%ecx
    1c22:	c4 e3 79 16 c2 02    	vpextrd $0x2,%xmm0,%edx
    1c28:	44 01 cf             	add    %r9d,%edi
    1c2b:	01 c8                	add    %ecx,%eax
    1c2d:	01 fa                	add    %edi,%edx
    1c2f:	8d 04 40             	lea    (%rax,%rax,2),%eax
    1c32:	c5 f9 6e e0          	vmovd  %eax,%xmm4
    1c36:	c5 f9 6e da          	vmovd  %edx,%xmm3
    1c3a:	48 8d 05 23 35 00 00 	lea    0x3523(%rip),%rax        # 5164 <R+0x4>
    1c41:	c5 fd 6f 15 f7 13 00 	vmovdqa 0x13f7(%rip),%ymm2        # 3040 <_IO_stdin_used+0x40>
    1c48:	00 
    1c49:	c5 fd 6f 3d 0f 14 00 	vmovdqa 0x140f(%rip),%ymm7        # 3060 <_IO_stdin_used+0x60>
    1c50:	00 
    1c51:	c5 fd 6f 35 27 14 00 	vmovdqa 0x1427(%rip),%ymm6        # 3080 <_IO_stdin_used+0x80>
    1c58:	00 
    1c59:	c5 fd 6f 2d 3f 14 00 	vmovdqa 0x143f(%rip),%ymm5        # 30a0 <_IO_stdin_used+0xa0>
    1c60:	00 
    1c61:	c4 e2 7d 58 e4       	vpbroadcastd %xmm4,%ymm4
    1c66:	c4 e2 7d 58 db       	vpbroadcastd %xmm3,%ymm3
    1c6b:	48 8d 90 40 9c 00 00 	lea    0x9c40(%rax),%rdx
    1c72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1c78:	c5 fd 6f ca          	vmovdqa %ymm2,%ymm1
    1c7c:	c4 e2 75 40 c6       	vpmulld %ymm6,%ymm1,%ymm0
    1c81:	c4 e2 75 40 cd       	vpmulld %ymm5,%ymm1,%ymm1
    1c86:	48 83 c0 20          	add    $0x20,%rax
    1c8a:	c5 ed fe d7          	vpaddd %ymm7,%ymm2,%ymm2
    1c8e:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    1c92:	c5 fd 72 f0 01       	vpslld $0x1,%ymm0,%ymm0
    1c97:	c5 f5 fe cc          	vpaddd %ymm4,%ymm1,%ymm1
    1c9b:	c4 e2 7d 39 c1       	vpminsd %ymm1,%ymm0,%ymm0
    1ca0:	c5 fe 7f 40 e0       	vmovdqu %ymm0,-0x20(%rax)
    1ca5:	48 39 c2             	cmp    %rax,%rdx
    1ca8:	75 ce                	jne    1c78 <v5()+0xb8>
    1caa:	c5 f8 77             	vzeroupper 
    1cad:	c3                   	retq   
    1cae:	66 90                	xchg   %ax,%ax

0000000000001cb0 <std::ctype<char>::do_widen(char) const>:
    1cb0:	f3 0f 1e fa          	endbr64 
    1cb4:	89 f0                	mov    %esi,%eax
    1cb6:	c3                   	retq   
    1cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1cbe:	00 00 

0000000000001cc0 <std::random_device::~random_device()>:
    1cc0:	f3 0f 1e fa          	endbr64 
    1cc4:	48 83 ec 08          	sub    $0x8,%rsp
    1cc8:	e8 03 f5 ff ff       	callq  11d0 <std::random_device::_M_fini()@plt>
    1ccd:	48 83 c4 08          	add    $0x8,%rsp
    1cd1:	c3                   	retq   
    1cd2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1cd9:	00 00 00 
    1cdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001ce0 <std::random_device::random_device()>:
    1ce0:	f3 0f 1e fa          	endbr64 
    1ce4:	55                   	push   %rbp
    1ce5:	53                   	push   %rbx
    1ce6:	48 83 ec 38          	sub    $0x38,%rsp
    1cea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1cf1:	00 00 
    1cf3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    1cf8:	31 c0                	xor    %eax,%eax
    1cfa:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    1cff:	b8 75 6c 00 00       	mov    $0x6c75,%eax
    1d04:	48 89 e6             	mov    %rsp,%rsi
    1d07:	48 89 1c 24          	mov    %rbx,(%rsp)
    1d0b:	c7 44 24 10 64 65 66 	movl   $0x61666564,0x10(%rsp)
    1d12:	61 
    1d13:	66 89 44 24 14       	mov    %ax,0x14(%rsp)
    1d18:	c6 44 24 16 74       	movb   $0x74,0x16(%rsp)
    1d1d:	48 c7 44 24 08 07 00 	movq   $0x7,0x8(%rsp)
    1d24:	00 00 
    1d26:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
    1d2b:	e8 30 f5 ff ff       	callq  1260 <std::random_device::_M_init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@plt>
    1d30:	48 8b 3c 24          	mov    (%rsp),%rdi
    1d34:	48 39 df             	cmp    %rbx,%rdi
    1d37:	74 05                	je     1d3e <std::random_device::random_device()+0x5e>
    1d39:	e8 a2 f4 ff ff       	callq  11e0 <operator delete(void*)@plt>
    1d3e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1d43:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1d4a:	00 00 
    1d4c:	75 07                	jne    1d55 <std::random_device::random_device()+0x75>
    1d4e:	48 83 c4 38          	add    $0x38,%rsp
    1d52:	5b                   	pop    %rbx
    1d53:	5d                   	pop    %rbp
    1d54:	c3                   	retq   
    1d55:	e8 a6 f4 ff ff       	callq  1200 <__stack_chk_fail@plt>
    1d5a:	f3 0f 1e fa          	endbr64 
    1d5e:	48 89 c5             	mov    %rax,%rbp
    1d61:	48 8b 3c 24          	mov    (%rsp),%rdi
    1d65:	48 39 df             	cmp    %rbx,%rdi
    1d68:	74 10                	je     1d7a <std::random_device::random_device()+0x9a>
    1d6a:	c5 f8 77             	vzeroupper 
    1d6d:	e8 6e f4 ff ff       	callq  11e0 <operator delete(void*)@plt>
    1d72:	48 89 ef             	mov    %rbp,%rdi
    1d75:	e8 16 f5 ff ff       	callq  1290 <_Unwind_Resume@plt>
    1d7a:	c5 f8 77             	vzeroupper 
    1d7d:	eb f3                	jmp    1d72 <std::random_device::random_device()+0x92>
    1d7f:	90                   	nop

0000000000001d80 <void test<void ()>(void (&)(), char const*)>:
    1d80:	f3 0f 1e fa          	endbr64 
    1d84:	55                   	push   %rbp
    1d85:	ba 40 9c 00 00       	mov    $0x9c40,%edx
    1d8a:	48 89 e5             	mov    %rsp,%rbp
    1d8d:	41 55                	push   %r13
    1d8f:	41 54                	push   %r12
    1d91:	49 89 f4             	mov    %rsi,%r12
    1d94:	31 f6                	xor    %esi,%esi
    1d96:	53                   	push   %rbx
    1d97:	48 89 fb             	mov    %rdi,%rbx
    1d9a:	48 8d 3d bf 33 00 00 	lea    0x33bf(%rip),%rdi        # 5160 <R>
    1da1:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
    1da5:	e8 f6 f3 ff ff       	callq  11a0 <memset@plt>
    1daa:	ff d3                	callq  *%rbx
    1dac:	ff d3                	callq  *%rbx
    1dae:	ff d3                	callq  *%rbx
    1db0:	e8 cb f3 ff ff       	callq  1180 <std::chrono::_V2::system_clock::now()@plt>
    1db5:	49 89 c5             	mov    %rax,%r13
    1db8:	ff d3                	callq  *%rbx
    1dba:	e8 c1 f3 ff ff       	callq  1180 <std::chrono::_V2::system_clock::now()@plt>
    1dbf:	ba 0a 00 00 00       	mov    $0xa,%edx
    1dc4:	48 8d 35 39 12 00 00 	lea    0x1239(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1dcb:	48 8d 3d 6e 32 00 00 	lea    0x326e(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1dd2:	48 89 c3             	mov    %rax,%rbx
    1dd5:	e8 36 f4 ff ff       	callq  1210 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1dda:	4d 85 e4             	test   %r12,%r12
    1ddd:	0f 84 55 01 00 00    	je     1f38 <void test<void ()>(void (&)(), char const*)+0x1b8>
    1de3:	4c 89 e7             	mov    %r12,%rdi
    1de6:	e8 a5 f3 ff ff       	callq  1190 <strlen@plt>
    1deb:	48 89 c2             	mov    %rax,%rdx
    1dee:	4c 89 e6             	mov    %r12,%rsi
    1df1:	48 8d 3d 48 32 00 00 	lea    0x3248(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1df8:	e8 13 f4 ff ff       	callq  1210 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1dfd:	4c 8d 25 3c 32 00 00 	lea    0x323c(%rip),%r12        # 5040 <std::cout@@GLIBCXX_3.4>
    1e04:	ba 08 00 00 00       	mov    $0x8,%edx
    1e09:	48 8d 35 ff 11 00 00 	lea    0x11ff(%rip),%rsi        # 300f <_IO_stdin_used+0xf>
    1e10:	48 8d 3d 29 32 00 00 	lea    0x3229(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1e17:	e8 f4 f3 ff ff       	callq  1210 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1e1c:	48 8b 05 1d 32 00 00 	mov    0x321d(%rip),%rax        # 5040 <std::cout@@GLIBCXX_3.4>
    1e23:	48 89 d9             	mov    %rbx,%rcx
    1e26:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    1e2a:	4c 29 e9             	sub    %r13,%rcx
    1e2d:	49 c7 44 04 10 07 00 	movq   $0x7,0x10(%r12,%rax,1)
    1e34:	00 00 
    1e36:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    1e3d:	9b c4 20 
    1e40:	48 89 c8             	mov    %rcx,%rax
    1e43:	48 f7 ea             	imul   %rdx
    1e46:	48 c1 f9 3f          	sar    $0x3f,%rcx
    1e4a:	48 8d 3d ef 31 00 00 	lea    0x31ef(%rip),%rdi        # 5040 <std::cout@@GLIBCXX_3.4>
    1e51:	48 c1 fa 07          	sar    $0x7,%rdx
    1e55:	48 89 d6             	mov    %rdx,%rsi
    1e58:	48 29 ce             	sub    %rcx,%rsi
    1e5b:	e8 90 f3 ff ff       	callq  11f0 <std::ostream& std::ostream::_M_insert<long>(long)@plt>
    1e60:	48 89 c7             	mov    %rax,%rdi
    1e63:	ba 0d 00 00 00       	mov    $0xd,%edx
    1e68:	48 8d 35 a9 11 00 00 	lea    0x11a9(%rip),%rsi        # 3018 <_IO_stdin_used+0x18>
    1e6f:	49 89 c4             	mov    %rax,%r12
    1e72:	e8 99 f3 ff ff       	callq  1210 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1e77:	48 8d 05 e6 32 00 00 	lea    0x32e6(%rip),%rax        # 5164 <R+0x4>
    1e7e:	48 8d 90 40 9c 00 00 	lea    0x9c40(%rax),%rdx
    1e85:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    1e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1e90:	c5 fd fe 00          	vpaddd (%rax),%ymm0,%ymm0
    1e94:	48 83 c0 20          	add    $0x20,%rax
    1e98:	48 39 c2             	cmp    %rax,%rdx
    1e9b:	75 f3                	jne    1e90 <void test<void ()>(void (&)(), char const*)+0x110>
    1e9d:	c4 e3 7d 39 c1 01    	vextracti128 $0x1,%ymm0,%xmm1
    1ea3:	c5 f1 fe c0          	vpaddd %xmm0,%xmm1,%xmm0
    1ea7:	c5 f1 73 d8 08       	vpsrldq $0x8,%xmm0,%xmm1
    1eac:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    1eb0:	c5 f1 73 d8 04       	vpsrldq $0x4,%xmm0,%xmm1
    1eb5:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    1eb9:	c5 f9 7e c6          	vmovd  %xmm0,%esi
    1ebd:	4c 89 e7             	mov    %r12,%rdi
    1ec0:	c5 f8 77             	vzeroupper 
    1ec3:	e8 b8 f3 ff ff       	callq  1280 <std::ostream::operator<<(int)@plt>
    1ec8:	49 89 c4             	mov    %rax,%r12
    1ecb:	48 8b 00             	mov    (%rax),%rax
    1ece:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    1ed2:	4d 8b ac 04 f0 00 00 	mov    0xf0(%r12,%rax,1),%r13
    1ed9:	00 
    1eda:	4d 85 ed             	test   %r13,%r13
    1edd:	74 7e                	je     1f5d <void test<void ()>(void (&)(), char const*)+0x1dd>
    1edf:	41 80 7d 38 00       	cmpb   $0x0,0x38(%r13)
    1ee4:	74 22                	je     1f08 <void test<void ()>(void (&)(), char const*)+0x188>
    1ee6:	41 0f be 75 43       	movsbl 0x43(%r13),%esi
    1eeb:	4c 89 e7             	mov    %r12,%rdi
    1eee:	e8 7d f2 ff ff       	callq  1170 <std::ostream::put(char)@plt>
    1ef3:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    1ef7:	5b                   	pop    %rbx
    1ef8:	41 5c                	pop    %r12
    1efa:	41 5d                	pop    %r13
    1efc:	48 89 c7             	mov    %rax,%rdi
    1eff:	5d                   	pop    %rbp
    1f00:	e9 ab f2 ff ff       	jmpq   11b0 <std::ostream::flush()@plt>
    1f05:	0f 1f 00             	nopl   (%rax)
    1f08:	4c 89 ef             	mov    %r13,%rdi
    1f0b:	e8 10 f3 ff ff       	callq  1220 <std::ctype<char>::_M_widen_init() const@plt>
    1f10:	49 8b 45 00          	mov    0x0(%r13),%rax
    1f14:	48 8d 15 95 fd ff ff 	lea    -0x26b(%rip),%rdx        # 1cb0 <std::ctype<char>::do_widen(char) const>
    1f1b:	48 8b 40 30          	mov    0x30(%rax),%rax
    1f1f:	be 0a 00 00 00       	mov    $0xa,%esi
    1f24:	48 39 d0             	cmp    %rdx,%rax
    1f27:	74 c2                	je     1eeb <void test<void ()>(void (&)(), char const*)+0x16b>
    1f29:	4c 89 ef             	mov    %r13,%rdi
    1f2c:	ff d0                	callq  *%rax
    1f2e:	0f be f0             	movsbl %al,%esi
    1f31:	eb b8                	jmp    1eeb <void test<void ()>(void (&)(), char const*)+0x16b>
    1f33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1f38:	48 8b 05 01 31 00 00 	mov    0x3101(%rip),%rax        # 5040 <std::cout@@GLIBCXX_3.4>
    1f3f:	4c 8d 25 fa 30 00 00 	lea    0x30fa(%rip),%r12        # 5040 <std::cout@@GLIBCXX_3.4>
    1f46:	48 8b 78 e8          	mov    -0x18(%rax),%rdi
    1f4a:	4c 01 e7             	add    %r12,%rdi
    1f4d:	8b 77 20             	mov    0x20(%rdi),%esi
    1f50:	83 ce 01             	or     $0x1,%esi
    1f53:	e8 18 f3 ff ff       	callq  1270 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@plt>
    1f58:	e9 a7 fe ff ff       	jmpq   1e04 <void test<void ()>(void (&)(), char const*)+0x84>
    1f5d:	e8 ce f2 ff ff       	callq  1230 <std::__throw_bad_cast()@plt>
    1f62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1f69:	00 00 00 
    1f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001f70 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)>:
    1f70:	f3 0f 1e fa          	endbr64 
    1f74:	41 57                	push   %r15
    1f76:	41 56                	push   %r14
    1f78:	41 55                	push   %r13
    1f7a:	49 89 f5             	mov    %rsi,%r13
    1f7d:	41 54                	push   %r12
    1f7f:	55                   	push   %rbp
    1f80:	53                   	push   %rbx
    1f81:	48 83 ec 18          	sub    $0x18,%rsp
    1f85:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1f8c:	00 00 
    1f8e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1f93:	31 c0                	xor    %eax,%eax
    1f95:	4c 63 72 04          	movslq 0x4(%rdx),%r14
    1f99:	48 63 02             	movslq (%rdx),%rax
    1f9c:	49 29 c6             	sub    %rax,%r14
    1f9f:	48 89 c6             	mov    %rax,%rsi
    1fa2:	49 81 fe fc ff ff 7f 	cmp    $0x7ffffffc,%r14
    1fa9:	0f 87 91 00 00 00    	ja     2040 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0xd0>
    1faf:	49 ff c6             	inc    %r14
    1fb2:	b8 fd ff ff 7f       	mov    $0x7ffffffd,%eax
    1fb7:	31 d2                	xor    %edx,%edx
    1fb9:	49 f7 f6             	div    %r14
    1fbc:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    1fc0:	49 b9 05 00 00 00 02 	movabs $0x200000005,%r9
    1fc7:	00 00 00 
    1fca:	4c 0f af f0          	imul   %rax,%r14
    1fce:	49 89 c2             	mov    %rax,%r10
    1fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1fd8:	4c 69 c1 a7 41 00 00 	imul   $0x41a7,%rcx,%r8
    1fdf:	4c 89 c0             	mov    %r8,%rax
    1fe2:	49 f7 e1             	mul    %r9
    1fe5:	4c 89 c1             	mov    %r8,%rcx
    1fe8:	48 29 d1             	sub    %rdx,%rcx
    1feb:	48 d1 e9             	shr    %rcx
    1fee:	48 01 ca             	add    %rcx,%rdx
    1ff1:	48 c1 ea 1e          	shr    $0x1e,%rdx
    1ff5:	48 89 d7             	mov    %rdx,%rdi
    1ff8:	48 c1 e7 1f          	shl    $0x1f,%rdi
    1ffc:	48 29 d7             	sub    %rdx,%rdi
    1fff:	49 29 f8             	sub    %rdi,%r8
    2002:	49 8d 40 ff          	lea    -0x1(%r8),%rax
    2006:	4c 89 c1             	mov    %r8,%rcx
    2009:	49 39 c6             	cmp    %rax,%r14
    200c:	76 ca                	jbe    1fd8 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0x68>
    200e:	31 d2                	xor    %edx,%edx
    2010:	49 f7 f2             	div    %r10
    2013:	4d 89 45 00          	mov    %r8,0x0(%r13)
    2017:	01 f0                	add    %esi,%eax
    2019:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    201e:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    2025:	00 00 
    2027:	0f 85 07 01 00 00    	jne    2134 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0x1c4>
    202d:	48 83 c4 18          	add    $0x18,%rsp
    2031:	5b                   	pop    %rbx
    2032:	5d                   	pop    %rbp
    2033:	41 5c                	pop    %r12
    2035:	41 5d                	pop    %r13
    2037:	41 5e                	pop    %r14
    2039:	41 5f                	pop    %r15
    203b:	c3                   	retq   
    203c:	0f 1f 40 00          	nopl   0x0(%rax)
    2040:	49 81 fe fd ff ff 7f 	cmp    $0x7ffffffd,%r14
    2047:	0f 84 a3 00 00 00    	je     20f0 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0x180>
    204d:	49 89 d7             	mov    %rdx,%r15
    2050:	4c 89 f2             	mov    %r14,%rdx
    2053:	48 d1 ea             	shr    %rdx
    2056:	48 bb 09 00 00 00 02 	movabs $0x8000000200000009,%rbx
    205d:	00 00 80 
    2060:	48 89 d0             	mov    %rdx,%rax
    2063:	48 f7 e3             	mul    %rbx
    2066:	48 89 fd             	mov    %rdi,%rbp
    2069:	49 89 e4             	mov    %rsp,%r12
    206c:	48 89 d3             	mov    %rdx,%rbx
    206f:	48 c1 eb 1d          	shr    $0x1d,%rbx
    2073:	4c 89 e2             	mov    %r12,%rdx
    2076:	4c 89 ee             	mov    %r13,%rsi
    2079:	48 89 ef             	mov    %rbp,%rdi
    207c:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
    2083:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
    2087:	e8 e4 fe ff ff       	callq  1f70 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)>
    208c:	49 69 4d 00 a7 41 00 	imul   $0x41a7,0x0(%r13),%rcx
    2093:	00 
    2094:	4c 63 c0             	movslq %eax,%r8
    2097:	48 b8 05 00 00 00 02 	movabs $0x200000005,%rax
    209e:	00 00 00 
    20a1:	48 f7 e1             	mul    %rcx
    20a4:	48 89 c8             	mov    %rcx,%rax
    20a7:	48 29 d0             	sub    %rdx,%rax
    20aa:	48 d1 e8             	shr    %rax
    20ad:	48 01 c2             	add    %rax,%rdx
    20b0:	48 c1 ea 1e          	shr    $0x1e,%rdx
    20b4:	48 89 d0             	mov    %rdx,%rax
    20b7:	48 c1 e0 1f          	shl    $0x1f,%rax
    20bb:	48 29 d0             	sub    %rdx,%rax
    20be:	48 89 ca             	mov    %rcx,%rdx
    20c1:	48 29 c2             	sub    %rax,%rdx
    20c4:	49 69 c0 fe ff ff 7f 	imul   $0x7ffffffe,%r8,%rax
    20cb:	49 89 55 00          	mov    %rdx,0x0(%r13)
    20cf:	48 ff ca             	dec    %rdx
    20d2:	48 01 d0             	add    %rdx,%rax
    20d5:	0f 92 c2             	setb   %dl
    20d8:	0f b6 d2             	movzbl %dl,%edx
    20db:	49 39 c6             	cmp    %rax,%r14
    20de:	72 93                	jb     2073 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0x103>
    20e0:	48 85 d2             	test   %rdx,%rdx
    20e3:	75 8e                	jne    2073 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0x103>
    20e5:	41 8b 37             	mov    (%r15),%esi
    20e8:	e9 2a ff ff ff       	jmpq   2017 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0xa7>
    20ed:	0f 1f 00             	nopl   (%rax)
    20f0:	49 69 4d 00 a7 41 00 	imul   $0x41a7,0x0(%r13),%rcx
    20f7:	00 
    20f8:	48 ba 05 00 00 00 02 	movabs $0x200000005,%rdx
    20ff:	00 00 00 
    2102:	48 89 c8             	mov    %rcx,%rax
    2105:	48 f7 e2             	mul    %rdx
    2108:	48 89 c8             	mov    %rcx,%rax
    210b:	48 29 d0             	sub    %rdx,%rax
    210e:	48 d1 e8             	shr    %rax
    2111:	48 01 d0             	add    %rdx,%rax
    2114:	48 c1 e8 1e          	shr    $0x1e,%rax
    2118:	48 89 c2             	mov    %rax,%rdx
    211b:	48 c1 e2 1f          	shl    $0x1f,%rdx
    211f:	48 29 c2             	sub    %rax,%rdx
    2122:	48 29 d1             	sub    %rdx,%rcx
    2125:	48 89 c8             	mov    %rcx,%rax
    2128:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    212c:	48 ff c8             	dec    %rax
    212f:	e9 e3 fe ff ff       	jmpq   2017 <int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)+0xa7>
    2134:	e8 c7 f0 ff ff       	callq  1200 <__stack_chk_fail@plt>
    2139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002140 <__libc_csu_init>:
    2140:	f3 0f 1e fa          	endbr64 
    2144:	41 57                	push   %r15
    2146:	4c 8d 3d ab 2b 00 00 	lea    0x2bab(%rip),%r15        # 4cf8 <__frame_dummy_init_array_entry>
    214d:	41 56                	push   %r14
    214f:	49 89 d6             	mov    %rdx,%r14
    2152:	41 55                	push   %r13
    2154:	49 89 f5             	mov    %rsi,%r13
    2157:	41 54                	push   %r12
    2159:	41 89 fc             	mov    %edi,%r12d
    215c:	55                   	push   %rbp
    215d:	48 8d 2d a4 2b 00 00 	lea    0x2ba4(%rip),%rbp        # 4d08 <__do_global_dtors_aux_fini_array_entry>
    2164:	53                   	push   %rbx
    2165:	4c 29 fd             	sub    %r15,%rbp
    2168:	48 83 ec 08          	sub    $0x8,%rsp
    216c:	e8 8f ee ff ff       	callq  1000 <_init>
    2171:	48 c1 fd 03          	sar    $0x3,%rbp
    2175:	74 1f                	je     2196 <__libc_csu_init+0x56>
    2177:	31 db                	xor    %ebx,%ebx
    2179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2180:	4c 89 f2             	mov    %r14,%rdx
    2183:	4c 89 ee             	mov    %r13,%rsi
    2186:	44 89 e7             	mov    %r12d,%edi
    2189:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    218d:	48 83 c3 01          	add    $0x1,%rbx
    2191:	48 39 dd             	cmp    %rbx,%rbp
    2194:	75 ea                	jne    2180 <__libc_csu_init+0x40>
    2196:	48 83 c4 08          	add    $0x8,%rsp
    219a:	5b                   	pop    %rbx
    219b:	5d                   	pop    %rbp
    219c:	41 5c                	pop    %r12
    219e:	41 5d                	pop    %r13
    21a0:	41 5e                	pop    %r14
    21a2:	41 5f                	pop    %r15
    21a4:	c3                   	retq   
    21a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    21ac:	00 00 00 00 

00000000000021b0 <__libc_csu_fini>:
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	c3                   	retq   

Desensamblado de la sección .fini:

00000000000021b8 <_fini>:
    21b8:	f3 0f 1e fa          	endbr64 
    21bc:	48 83 ec 08          	sub    $0x8,%rsp
    21c0:	48 83 c4 08          	add    $0x8,%rsp
    21c4:	c3                   	retq   
