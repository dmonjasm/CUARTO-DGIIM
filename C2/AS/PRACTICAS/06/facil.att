
facil:     formato del fichero elf64-x86-64


Desensamblado de la secci贸n .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Desensamblado de la secci贸n .plt:

0000000000001020 <.plt>:
    1020:	ff 35 a2 2f 00 00    	pushq  0x2fa2(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 a3 2f 00 00 	bnd jmpq *0x2fa3(%rip)        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)

Desensamblado de la secci贸n .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	f3 0f 1e fa          	endbr64 
    1034:	f2 ff 25 bd 2f 00 00 	bnd jmpq *0x2fbd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    103b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la secci贸n .text:

0000000000001040 <main>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	c5 fd 6f 05 d4 0f 00 	vmovdqa 0xfd4(%rip),%ymm0        # 2020 <_IO_stdin_used+0x20>
    104b:	00 
    104c:	c5 fd 6f 1d ec 0f 00 	vmovdqa 0xfec(%rip),%ymm3        # 2040 <_IO_stdin_used+0x40>
    1053:	00 
    1054:	31 c0                	xor    %eax,%eax
    1056:	c5 e9 ef d2          	vpxor  %xmm2,%xmm2,%xmm2
    105a:	c5 fd 6f c8          	vmovdqa %ymm0,%ymm1
    105e:	66 90                	xchg   %ax,%ax
    1060:	c5 fd 6f e1          	vmovdqa %ymm1,%ymm4
    1064:	ff c0                	inc    %eax
    1066:	c5 f5 fe cb          	vpaddd %ymm3,%ymm1,%ymm1
    106a:	c5 ed fe d4          	vpaddd %ymm4,%ymm2,%ymm2
    106e:	3d 00 00 40 00       	cmp    $0x400000,%eax
    1073:	75 eb                	jne    1060 <main+0x20>
    1075:	c5 f9 6f ca          	vmovdqa %xmm2,%xmm1
    1079:	c4 e3 7d 39 d2 01    	vextracti128 $0x1,%ymm2,%xmm2
    107f:	c5 f1 fe d2          	vpaddd %xmm2,%xmm1,%xmm2
    1083:	c5 f1 73 da 08       	vpsrldq $0x8,%xmm2,%xmm1
    1088:	c5 e9 fe c9          	vpaddd %xmm1,%xmm2,%xmm1
    108c:	c5 e9 73 d9 04       	vpsrldq $0x4,%xmm1,%xmm2
    1091:	c5 f1 fe ca          	vpaddd %xmm2,%xmm1,%xmm1
    1095:	c5 f9 7e ca          	vmovd  %xmm1,%edx
    1099:	31 c0                	xor    %eax,%eax
    109b:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
    109f:	90                   	nop
    10a0:	c5 fd 6f d0          	vmovdqa %ymm0,%ymm2
    10a4:	ff c0                	inc    %eax
    10a6:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    10aa:	c5 f5 fe ca          	vpaddd %ymm2,%ymm1,%ymm1
    10ae:	3d 00 00 80 00       	cmp    $0x800000,%eax
    10b3:	75 eb                	jne    10a0 <main+0x60>
    10b5:	c5 f9 6f c1          	vmovdqa %xmm1,%xmm0
    10b9:	c4 e3 7d 39 c9 01    	vextracti128 $0x1,%ymm1,%xmm1
    10bf:	c5 f9 fe c9          	vpaddd %xmm1,%xmm0,%xmm1
    10c3:	c5 f9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm0
    10c8:	c5 f1 fe c0          	vpaddd %xmm0,%xmm1,%xmm0
    10cc:	c5 f1 73 d8 04       	vpsrldq $0x4,%xmm0,%xmm1
    10d1:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    10d5:	c5 f9 7e c0          	vmovd  %xmm0,%eax
    10d9:	01 d0                	add    %edx,%eax
    10db:	c5 f8 77             	vzeroupper 
    10de:	c3                   	retq   
    10df:	90                   	nop

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	4c 8d 05 06 02 00 00 	lea    0x206(%rip),%r8        # 1300 <__libc_csu_fini>
    10fa:	48 8d 0d 8f 01 00 00 	lea    0x18f(%rip),%rcx        # 1290 <__libc_csu_init>
    1101:	48 8d 3d 38 ff ff ff 	lea    -0xc8(%rip),%rdi        # 1040 <main>
    1108:	ff 15 d2 2e 00 00    	callq  *0x2ed2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    110e:	f4                   	hlt    
    110f:	90                   	nop

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d f9 2e 00 00 	lea    0x2ef9(%rip),%rdi        # 4010 <__TMC_END__>
    1117:	48 8d 05 f2 2e 00 00 	lea    0x2ef2(%rip),%rax        # 4010 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 ae 2e 00 00 	mov    0x2eae(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmpq   *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d c9 2e 00 00 	lea    0x2ec9(%rip),%rdi        # 4010 <__TMC_END__>
    1147:	48 8d 35 c2 2e 00 00 	lea    0x2ec2(%rip),%rsi        # 4010 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmpq   *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d 85 2e 00 00 00 	cmpb   $0x0,0x2e85(%rip)        # 4010 <__TMC_END__>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 62 2e 00 00 	cmpq   $0x0,0x2e62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 89 fe ff ff       	callq  1030 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	callq  1110 <deregister_tm_clones>
    11ac:	c6 05 5d 2e 00 00 01 	movb   $0x1,0x2e5d(%rip)        # 4010 <__TMC_END__>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	retq   
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmpq   1140 <register_tm_clones>
    11c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011d0 <f1()>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	c5 fd 6f 05 44 0e 00 	vmovdqa 0xe44(%rip),%ymm0        # 2020 <_IO_stdin_used+0x20>
    11db:	00 
    11dc:	c5 fd 6f 1d 5c 0e 00 	vmovdqa 0xe5c(%rip),%ymm3        # 2040 <_IO_stdin_used+0x40>
    11e3:	00 
    11e4:	31 c0                	xor    %eax,%eax
    11e6:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
    11ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11f0:	c5 fd 6f d0          	vmovdqa %ymm0,%ymm2
    11f4:	ff c0                	inc    %eax
    11f6:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    11fa:	c5 f5 fe ca          	vpaddd %ymm2,%ymm1,%ymm1
    11fe:	3d 00 00 40 00       	cmp    $0x400000,%eax
    1203:	75 eb                	jne    11f0 <f1()+0x20>
    1205:	c5 f9 6f c1          	vmovdqa %xmm1,%xmm0
    1209:	c4 e3 7d 39 c9 01    	vextracti128 $0x1,%ymm1,%xmm1
    120f:	c5 f9 fe c9          	vpaddd %xmm1,%xmm0,%xmm1
    1213:	c5 f9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm0
    1218:	c5 f1 fe c0          	vpaddd %xmm0,%xmm1,%xmm0
    121c:	c5 f1 73 d8 04       	vpsrldq $0x4,%xmm0,%xmm1
    1221:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    1225:	c5 f9 7e c0          	vmovd  %xmm0,%eax
    1229:	c5 f8 77             	vzeroupper 
    122c:	c3                   	retq   
    122d:	0f 1f 00             	nopl   (%rax)

0000000000001230 <f2()>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	c5 fd 6f 05 e4 0d 00 	vmovdqa 0xde4(%rip),%ymm0        # 2020 <_IO_stdin_used+0x20>
    123b:	00 
    123c:	c5 fd 6f 1d fc 0d 00 	vmovdqa 0xdfc(%rip),%ymm3        # 2040 <_IO_stdin_used+0x40>
    1243:	00 
    1244:	31 c0                	xor    %eax,%eax
    1246:	c5 f1 ef c9          	vpxor  %xmm1,%xmm1,%xmm1
    124a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1250:	c5 fd 6f d0          	vmovdqa %ymm0,%ymm2
    1254:	ff c0                	inc    %eax
    1256:	c5 fd fe c3          	vpaddd %ymm3,%ymm0,%ymm0
    125a:	c5 f5 fe ca          	vpaddd %ymm2,%ymm1,%ymm1
    125e:	3d 00 00 80 00       	cmp    $0x800000,%eax
    1263:	75 eb                	jne    1250 <f2()+0x20>
    1265:	c5 f9 6f c1          	vmovdqa %xmm1,%xmm0
    1269:	c4 e3 7d 39 c9 01    	vextracti128 $0x1,%ymm1,%xmm1
    126f:	c5 f9 fe c9          	vpaddd %xmm1,%xmm0,%xmm1
    1273:	c5 f9 73 d9 08       	vpsrldq $0x8,%xmm1,%xmm0
    1278:	c5 f1 fe c0          	vpaddd %xmm0,%xmm1,%xmm0
    127c:	c5 f1 73 d8 04       	vpsrldq $0x4,%xmm0,%xmm1
    1281:	c5 f9 fe c1          	vpaddd %xmm1,%xmm0,%xmm0
    1285:	c5 f9 7e c0          	vmovd  %xmm0,%eax
    1289:	c5 f8 77             	vzeroupper 
    128c:	c3                   	retq   
    128d:	0f 1f 00             	nopl   (%rax)

0000000000001290 <__libc_csu_init>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	41 57                	push   %r15
    1296:	4c 8d 3d 53 2b 00 00 	lea    0x2b53(%rip),%r15        # 3df0 <__frame_dummy_init_array_entry>
    129d:	41 56                	push   %r14
    129f:	49 89 d6             	mov    %rdx,%r14
    12a2:	41 55                	push   %r13
    12a4:	49 89 f5             	mov    %rsi,%r13
    12a7:	41 54                	push   %r12
    12a9:	41 89 fc             	mov    %edi,%r12d
    12ac:	55                   	push   %rbp
    12ad:	48 8d 2d 44 2b 00 00 	lea    0x2b44(%rip),%rbp        # 3df8 <__do_global_dtors_aux_fini_array_entry>
    12b4:	53                   	push   %rbx
    12b5:	4c 29 fd             	sub    %r15,%rbp
    12b8:	48 83 ec 08          	sub    $0x8,%rsp
    12bc:	e8 3f fd ff ff       	callq  1000 <_init>
    12c1:	48 c1 fd 03          	sar    $0x3,%rbp
    12c5:	74 1f                	je     12e6 <__libc_csu_init+0x56>
    12c7:	31 db                	xor    %ebx,%ebx
    12c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12d0:	4c 89 f2             	mov    %r14,%rdx
    12d3:	4c 89 ee             	mov    %r13,%rsi
    12d6:	44 89 e7             	mov    %r12d,%edi
    12d9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    12dd:	48 83 c3 01          	add    $0x1,%rbx
    12e1:	48 39 dd             	cmp    %rbx,%rbp
    12e4:	75 ea                	jne    12d0 <__libc_csu_init+0x40>
    12e6:	48 83 c4 08          	add    $0x8,%rsp
    12ea:	5b                   	pop    %rbx
    12eb:	5d                   	pop    %rbp
    12ec:	41 5c                	pop    %r12
    12ee:	41 5d                	pop    %r13
    12f0:	41 5e                	pop    %r14
    12f2:	41 5f                	pop    %r15
    12f4:	c3                   	retq   
    12f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12fc:	00 00 00 00 

0000000000001300 <__libc_csu_fini>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	c3                   	retq   

Desensamblado de la secci贸n .fini:

0000000000001308 <_fini>:
    1308:	f3 0f 1e fa          	endbr64 
    130c:	48 83 ec 08          	sub    $0x8,%rsp
    1310:	48 83 c4 08          	add    $0x8,%rsp
    1314:	c3                   	retq   
