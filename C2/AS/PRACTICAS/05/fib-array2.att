
fib-array2:     formato del fichero elf64-x86-64


Desensamblado de la secci贸n .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Desensamblado de la secci贸n .plt:

0000000000001020 <.plt>:
    1020:	ff 35 f2 2e 00 00    	pushq  0x2ef2(%rip)        # 3f18 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 f3 2e 00 00 	bnd jmpq *0x2ef3(%rip)        # 3f20 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	pushq  $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmpq 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	pushq  $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmpq 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	pushq  $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmpq 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	pushq  $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmpq 1020 <.plt>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	pushq  $0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmpq 1020 <.plt>
    116f:	90                   	nop

Desensamblado de la secci贸n .plt.got:

0000000000001170 <__cxa_finalize@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 4d 2e 00 00 	bnd jmpq *0x2e4d(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la secci贸n .plt.sec:

0000000000001180 <strlen@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 9d 2d 00 00 	bnd jmpq *0x2d9d(%rip)        # 3f28 <strlen@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 95 2d 00 00 	bnd jmpq *0x2d95(%rip)        # 3f30 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()@GLIBCXX_3.4.21>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 8d 2d 00 00 	bnd jmpq *0x2d8d(%rip)        # 3f38 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <__cxa_allocate_exception@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 85 2d 00 00 	bnd jmpq *0x2d85(%rip)        # 3f40 <__cxa_allocate_exception@CXXABI_1.3>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 7d 2d 00 00 	bnd jmpq *0x2d7d(%rip)        # 3f48 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@GLIBCXX_3.4.9>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <std::__throw_logic_error(char const*)@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 75 2d 00 00 	bnd jmpq *0x2d75(%rip)        # 3f50 <std::__throw_logic_error(char const*)@GLIBCXX_3.4>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <__cxa_free_exception@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 6d 2d 00 00 	bnd jmpq *0x2d6d(%rip)        # 3f58 <__cxa_free_exception@CXXABI_1.3>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <memcpy@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 65 2d 00 00 	bnd jmpq *0x2d65(%rip)        # 3f60 <memcpy@GLIBC_2.14>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <__cxa_atexit@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 5d 2d 00 00 	bnd jmpq *0x2d5d(%rip)        # 3f68 <__cxa_atexit@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <operator delete(void*)@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 55 2d 00 00 	bnd jmpq *0x2d55(%rip)        # 3f70 <operator delete(void*)@GLIBCXX_3.4>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 4d 2d 00 00 	bnd jmpq *0x2d4d(%rip)        # 3f78 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@GLIBCXX_3.4>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <__stack_chk_fail@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 45 2d 00 00 	bnd jmpq *0x2d45(%rip)        # 3f80 <__stack_chk_fail@GLIBC_2.4>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 3d 2d 00 00 	bnd jmpq *0x2d3d(%rip)        # 3f88 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <std::ios_base::Init::Init()@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 35 2d 00 00 	bnd jmpq *0x2d35(%rip)        # 3f90 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Ios_Openmode)@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 2d 2d 00 00 	bnd jmpq *0x2d2d(%rip)        # 3f98 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Ios_Openmode)@GLIBCXX_3.4.21>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <__cxa_throw@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 25 2d 00 00 	bnd jmpq *0x2d25(%rip)        # 3fa0 <__cxa_throw@CXXABI_1.3>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <std::istream& std::istream::_M_extract<unsigned int>(unsigned int&)@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 1d 2d 00 00 	bnd jmpq *0x2d1d(%rip)        # 3fa8 <std::istream& std::istream::_M_extract<unsigned int>(unsigned int&)@GLIBCXX_3.4.9>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <_Unwind_Resume@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 15 2d 00 00 	bnd jmpq *0x2d15(%rip)        # 3fb0 <_Unwind_Resume@GCC_3.0>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012a0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 0d 2d 00 00 	bnd jmpq *0x2d0d(%rip)        # 3fb8 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@GLIBCXX_3.4.21>
    12ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012b0 <std::invalid_argument::invalid_argument(char const*)@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 05 2d 00 00 	bnd jmpq *0x2d05(%rip)        # 3fc0 <std::invalid_argument::invalid_argument(char const*)@GLIBCXX_3.4.21>
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Desensamblado de la secci贸n .text:

00000000000012c0 <main.cold>:
    12c0:	bf 10 00 00 00       	mov    $0x10,%edi
    12c5:	e8 e6 fe ff ff       	callq  11b0 <__cxa_allocate_exception@plt>
    12ca:	48 89 c7             	mov    %rax,%rdi
    12cd:	48 8d 35 34 0d 00 00 	lea    0xd34(%rip),%rsi        # 2008 <_IO_stdin_used+0x8>
    12d4:	48 89 c5             	mov    %rax,%rbp
    12d7:	e8 d4 ff ff ff       	callq  12b0 <std::invalid_argument::invalid_argument(char const*)@plt>
    12dc:	48 8b 15 ed 2c 00 00 	mov    0x2ced(%rip),%rdx        # 3fd0 <std::invalid_argument::~invalid_argument()@GLIBCXX_3.4>
    12e3:	48 8d 35 ee 29 00 00 	lea    0x29ee(%rip),%rsi        # 3cd8 <typeinfo for std::invalid_argument@@GLIBCXX_3.4>
    12ea:	48 89 ef             	mov    %rbp,%rdi
    12ed:	e8 7e ff ff ff       	callq  1270 <__cxa_throw@plt>
    12f2:	bf 10 00 00 00       	mov    $0x10,%edi
    12f7:	e8 b4 fe ff ff       	callq  11b0 <__cxa_allocate_exception@plt>
    12fc:	48 89 c7             	mov    %rax,%rdi
    12ff:	48 8d 35 5a 0d 00 00 	lea    0xd5a(%rip),%rsi        # 2060 <_IO_stdin_used+0x60>
    1306:	49 89 c5             	mov    %rax,%r13
    1309:	e8 a2 ff ff ff       	callq  12b0 <std::invalid_argument::invalid_argument(char const*)@plt>
    130e:	48 8b 15 bb 2c 00 00 	mov    0x2cbb(%rip),%rdx        # 3fd0 <std::invalid_argument::~invalid_argument()@GLIBCXX_3.4>
    1315:	48 8d 35 bc 29 00 00 	lea    0x29bc(%rip),%rsi        # 3cd8 <typeinfo for std::invalid_argument@@GLIBCXX_3.4>
    131c:	4c 89 ef             	mov    %r13,%rdi
    131f:	e8 4c ff ff ff       	callq  1270 <__cxa_throw@plt>
    1324:	f3 0f 1e fa          	endbr64 
    1328:	49 89 c4             	mov    %rax,%r12
    132b:	48 89 ef             	mov    %rbp,%rdi
    132e:	c5 f8 77             	vzeroupper 
    1331:	e8 aa fe ff ff       	callq  11e0 <__cxa_free_exception@plt>
    1336:	4c 89 e7             	mov    %r12,%rdi
    1339:	e8 52 ff ff ff       	callq  1290 <_Unwind_Resume@plt>
    133e:	f3 0f 1e fa          	endbr64 
    1342:	48 89 c5             	mov    %rax,%rbp
    1345:	c5 f8 77             	vzeroupper 
    1348:	eb 12                	jmp    135c <main.cold+0x9c>
    134a:	f3 0f 1e fa          	endbr64 
    134e:	48 89 c5             	mov    %rax,%rbp
    1351:	4c 89 ef             	mov    %r13,%rdi
    1354:	c5 f8 77             	vzeroupper 
    1357:	e8 84 fe ff ff       	callq  11e0 <__cxa_free_exception@plt>
    135c:	4c 89 e7             	mov    %r12,%rdi
    135f:	e8 2c fe ff ff       	callq  1190 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()@plt>
    1364:	48 89 ef             	mov    %rbp,%rdi
    1367:	e8 24 ff ff ff       	callq  1290 <_Unwind_Resume@plt>
    136c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1371:	4c 39 ef             	cmp    %r13,%rdi
    1374:	74 10                	je     1386 <main.cold+0xc6>
    1376:	c5 f8 77             	vzeroupper 
    1379:	e8 92 fe ff ff       	callq  1210 <operator delete(void*)@plt>
    137e:	48 89 ef             	mov    %rbp,%rdi
    1381:	e8 0a ff ff ff       	callq  1290 <_Unwind_Resume@plt>
    1386:	c5 f8 77             	vzeroupper 
    1389:	eb f3                	jmp    137e <main.cold+0xbe>
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001390 <main>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	41 57                	push   %r15
    1396:	41 56                	push   %r14
    1398:	41 55                	push   %r13
    139a:	41 54                	push   %r12
    139c:	55                   	push   %rbp
    139d:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    13a4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13ab:	00 00 
    13ad:	48 89 84 24 b8 01 00 	mov    %rax,0x1b8(%rsp)
    13b4:	00 
    13b5:	31 c0                	xor    %eax,%eax
    13b7:	83 ff 01             	cmp    $0x1,%edi
    13ba:	0f 8e 00 ff ff ff    	jle    12c0 <main.cold>
    13c0:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
    13c4:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    13c9:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    13ce:	48 89 f5             	mov    %rsi,%rbp
    13d1:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    13d6:	4d 85 ff             	test   %r15,%r15
    13d9:	0f 84 d3 01 00 00    	je     15b2 <main+0x222>
    13df:	4c 89 ff             	mov    %r15,%rdi
    13e2:	e8 99 fd ff ff       	callq  1180 <strlen@plt>
    13e7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    13ec:	49 89 c4             	mov    %rax,%r12
    13ef:	48 83 f8 0f          	cmp    $0xf,%rax
    13f3:	0f 87 88 01 00 00    	ja     1581 <main+0x1f1>
    13f9:	48 83 f8 01          	cmp    $0x1,%rax
    13fd:	0f 85 70 01 00 00    	jne    1573 <main+0x1e3>
    1403:	41 0f b6 07          	movzbl (%r15),%eax
    1407:	88 44 24 20          	mov    %al,0x20(%rsp)
    140b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1410:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    1415:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    141a:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    141e:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    1423:	ba 08 00 00 00       	mov    $0x8,%edx
    1428:	4c 89 f6             	mov    %r14,%rsi
    142b:	4c 89 e7             	mov    %r12,%rdi
    142e:	e8 2d fe ff ff       	callq  1260 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::basic_istringstream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Ios_Openmode)@plt>
    1433:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1438:	4c 39 ef             	cmp    %r13,%rdi
    143b:	74 05                	je     1442 <main+0xb2>
    143d:	e8 ce fd ff ff       	callq  1210 <operator delete(void*)@plt>
    1442:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    1447:	4c 89 e7             	mov    %r12,%rdi
    144a:	e8 31 fe ff ff       	callq  1280 <std::istream& std::istream::_M_extract<unsigned int>(unsigned int&)@plt>
    144f:	f6 84 24 c8 00 00 00 	testb  $0x5,0xc8(%rsp)
    1456:	05 
    1457:	0f 85 95 fe ff ff    	jne    12f2 <main.cold+0x32>
    145d:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    1461:	48 8d 3d d8 34 3d 00 	lea    0x3d34d8(%rip),%rdi        # 3d4940 <std::cout@@GLIBCXX_3.4>
    1468:	e8 b3 fd ff ff       	callq  1220 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    146d:	ba 01 00 00 00       	mov    $0x1,%edx
    1472:	48 8d 35 0e 0c 00 00 	lea    0xc0e(%rip),%rsi        # 2087 <_IO_stdin_used+0x87>
    1479:	48 89 c7             	mov    %rax,%rdi
    147c:	49 89 c5             	mov    %rax,%r13
    147f:	e8 bc fd ff ff       	callq  1240 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1484:	48 8b 75 08          	mov    0x8(%rbp),%rsi
    1488:	4c 89 ef             	mov    %r13,%rdi
    148b:	e8 90 fd ff ff       	callq  1220 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
    1490:	ba 04 00 00 00       	mov    $0x4,%edx
    1495:	48 8d 35 ed 0b 00 00 	lea    0xbed(%rip),%rsi        # 2089 <_IO_stdin_used+0x89>
    149c:	48 89 c7             	mov    %rax,%rdi
    149f:	48 89 c5             	mov    %rax,%rbp
    14a2:	e8 99 fd ff ff       	callq  1240 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    14a7:	4c 8b 0d 72 34 3d 00 	mov    0x3d3472(%rip),%r9        # 3d4920 <fib<unsigned int>(unsigned int)::last>
    14ae:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    14b2:	4d 8d 41 01          	lea    0x1(%r9),%r8
    14b6:	4c 89 05 63 34 3d 00 	mov    %r8,0x3d3463(%rip)        # 3d4920 <fib<unsigned int>(unsigned int)::last>
    14bd:	48 8d 35 5c 2b 00 00 	lea    0x2b5c(%rip),%rsi        # 4020 <fib<unsigned int>(unsigned int)::solutions>
    14c4:	49 39 f9             	cmp    %rdi,%r9
    14c7:	73 69                	jae    1532 <main+0x1a2>
    14c9:	4a 8d 14 8e          	lea    (%rsi,%r9,4),%rdx
    14cd:	4c 8d 5f ff          	lea    -0x1(%rdi),%r11
    14d1:	85 ff                	test   %edi,%edi
    14d3:	0f 84 e5 00 00 00    	je     15be <main+0x22e>
    14d9:	4d 39 d8             	cmp    %r11,%r8
    14dc:	0f 83 dc 00 00 00    	jae    15be <main+0x22e>
    14e2:	44 8b 52 fc          	mov    -0x4(%rdx),%r10d
    14e6:	8b 0a                	mov    (%rdx),%ecx
    14e8:	4c 89 c0             	mov    %r8,%rax
    14eb:	4c 8d 6e 04          	lea    0x4(%rsi),%r13
    14ef:	41 01 ca             	add    %ecx,%r10d
    14f2:	44 01 d1             	add    %r10d,%ecx
    14f5:	44 89 14 86          	mov    %r10d,(%rsi,%rax,4)
    14f9:	48 8d 50 01          	lea    0x1(%rax),%rdx
    14fd:	41 89 4c 85 00       	mov    %ecx,0x0(%r13,%rax,4)
    1502:	48 83 c0 02          	add    $0x2,%rax
    1506:	49 39 c3             	cmp    %rax,%r11
    1509:	77 e4                	ja     14ef <main+0x15f>
    150b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1510:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
    1513:	03 4c 96 fc          	add    -0x4(%rsi,%rdx,4),%ecx
    1517:	48 89 c2             	mov    %rax,%rdx
    151a:	89 0c 86             	mov    %ecx,(%rsi,%rax,4)
    151d:	48 ff c0             	inc    %rax
    1520:	48 39 d7             	cmp    %rdx,%rdi
    1523:	77 eb                	ja     1510 <main+0x180>
    1525:	49 01 f8             	add    %rdi,%r8
    1528:	4d 29 c8             	sub    %r9,%r8
    152b:	4c 89 05 ee 33 3d 00 	mov    %r8,0x3d33ee(%rip)        # 3d4920 <fib<unsigned int>(unsigned int)::last>
    1532:	8b 34 be             	mov    (%rsi,%rdi,4),%esi
    1535:	48 89 ef             	mov    %rbp,%rdi
    1538:	e8 83 fc ff ff       	callq  11c0 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    153d:	48 89 c7             	mov    %rax,%rdi
    1540:	e8 5b fc ff ff       	callq  11a0 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    1545:	4c 89 e7             	mov    %r12,%rdi
    1548:	e8 43 fc ff ff       	callq  1190 <std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()@plt>
    154d:	48 8b 84 24 b8 01 00 	mov    0x1b8(%rsp),%rax
    1554:	00 
    1555:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    155c:	00 00 
    155e:	75 69                	jne    15c9 <main+0x239>
    1560:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    1567:	5d                   	pop    %rbp
    1568:	41 5c                	pop    %r12
    156a:	41 5d                	pop    %r13
    156c:	41 5e                	pop    %r14
    156e:	31 c0                	xor    %eax,%eax
    1570:	41 5f                	pop    %r15
    1572:	c3                   	retq   
    1573:	48 85 c0             	test   %rax,%rax
    1576:	0f 84 8f fe ff ff    	je     140b <main+0x7b>
    157c:	4c 89 ef             	mov    %r13,%rdi
    157f:	eb 21                	jmp    15a2 <main+0x212>
    1581:	4c 89 f7             	mov    %r14,%rdi
    1584:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    1589:	31 d2                	xor    %edx,%edx
    158b:	e8 10 fd ff ff       	callq  12a0 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)@plt>
    1590:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1595:	48 89 c7             	mov    %rax,%rdi
    1598:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    159d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    15a2:	4c 89 e2             	mov    %r12,%rdx
    15a5:	4c 89 fe             	mov    %r15,%rsi
    15a8:	e8 43 fc ff ff       	callq  11f0 <memcpy@plt>
    15ad:	e9 59 fe ff ff       	jmpq   140b <main+0x7b>
    15b2:	48 8d 3d 77 0a 00 00 	lea    0xa77(%rip),%rdi        # 2030 <_IO_stdin_used+0x30>
    15b9:	e8 12 fc ff ff       	callq  11d0 <std::__throw_logic_error(char const*)@plt>
    15be:	4c 89 c0             	mov    %r8,%rax
    15c1:	4c 89 ca             	mov    %r9,%rdx
    15c4:	e9 47 ff ff ff       	jmpq   1510 <main+0x180>
    15c9:	e8 62 fc ff ff       	callq  1230 <__stack_chk_fail@plt>
    15ce:	f3 0f 1e fa          	endbr64 
    15d2:	48 89 c5             	mov    %rax,%rbp
    15d5:	e9 92 fd ff ff       	jmpq   136c <main.cold+0xac>
    15da:	f3 0f 1e fa          	endbr64 
    15de:	e9 5f fd ff ff       	jmpq   1342 <main.cold+0x82>
    15e3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    15ea:	00 00 00 00 
    15ee:	66 90                	xchg   %ax,%ax

00000000000015f0 <_GLOBAL__sub_I_main>:
    15f0:	f3 0f 1e fa          	endbr64 
    15f4:	48 83 ec 08          	sub    $0x8,%rsp
    15f8:	48 8d 3d 52 34 3d 00 	lea    0x3d3452(%rip),%rdi        # 3d4a51 <std::__ioinit>
    15ff:	e8 4c fc ff ff       	callq  1250 <std::ios_base::Init::Init()@plt>
    1604:	48 8b 3d ed 29 00 00 	mov    0x29ed(%rip),%rdi        # 3ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    160b:	48 8d 15 f6 29 00 00 	lea    0x29f6(%rip),%rdx        # 4008 <__dso_handle>
    1612:	48 8d 35 38 34 3d 00 	lea    0x3d3438(%rip),%rsi        # 3d4a51 <std::__ioinit>
    1619:	48 83 c4 08          	add    $0x8,%rsp
    161d:	e9 de fb ff ff       	jmpq   1200 <__cxa_atexit@plt>
    1622:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1629:	00 00 00 
    162c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001630 <_start>:
    1630:	f3 0f 1e fa          	endbr64 
    1634:	31 ed                	xor    %ebp,%ebp
    1636:	49 89 d1             	mov    %rdx,%r9
    1639:	5e                   	pop    %rsi
    163a:	48 89 e2             	mov    %rsp,%rdx
    163d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1641:	50                   	push   %rax
    1642:	54                   	push   %rsp
    1643:	4c 8d 05 46 01 00 00 	lea    0x146(%rip),%r8        # 1790 <__libc_csu_fini>
    164a:	48 8d 0d cf 00 00 00 	lea    0xcf(%rip),%rcx        # 1720 <__libc_csu_init>
    1651:	48 8d 3d 38 fd ff ff 	lea    -0x2c8(%rip),%rdi        # 1390 <main>
    1658:	ff 15 82 29 00 00    	callq  *0x2982(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    165e:	f4                   	hlt    
    165f:	90                   	nop

0000000000001660 <deregister_tm_clones>:
    1660:	48 8d 3d c9 32 3d 00 	lea    0x3d32c9(%rip),%rdi        # 3d4930 <__TMC_END__>
    1667:	48 8d 05 c2 32 3d 00 	lea    0x3d32c2(%rip),%rax        # 3d4930 <__TMC_END__>
    166e:	48 39 f8             	cmp    %rdi,%rax
    1671:	74 15                	je     1688 <deregister_tm_clones+0x28>
    1673:	48 8b 05 5e 29 00 00 	mov    0x295e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    167a:	48 85 c0             	test   %rax,%rax
    167d:	74 09                	je     1688 <deregister_tm_clones+0x28>
    167f:	ff e0                	jmpq   *%rax
    1681:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1688:	c3                   	retq   
    1689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001690 <register_tm_clones>:
    1690:	48 8d 3d 99 32 3d 00 	lea    0x3d3299(%rip),%rdi        # 3d4930 <__TMC_END__>
    1697:	48 8d 35 92 32 3d 00 	lea    0x3d3292(%rip),%rsi        # 3d4930 <__TMC_END__>
    169e:	48 29 fe             	sub    %rdi,%rsi
    16a1:	48 89 f0             	mov    %rsi,%rax
    16a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    16a8:	48 c1 f8 03          	sar    $0x3,%rax
    16ac:	48 01 c6             	add    %rax,%rsi
    16af:	48 d1 fe             	sar    %rsi
    16b2:	74 14                	je     16c8 <register_tm_clones+0x38>
    16b4:	48 8b 05 35 29 00 00 	mov    0x2935(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    16bb:	48 85 c0             	test   %rax,%rax
    16be:	74 08                	je     16c8 <register_tm_clones+0x38>
    16c0:	ff e0                	jmpq   *%rax
    16c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    16c8:	c3                   	retq   
    16c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000016d0 <__do_global_dtors_aux>:
    16d0:	f3 0f 1e fa          	endbr64 
    16d4:	80 3d 75 33 3d 00 00 	cmpb   $0x0,0x3d3375(%rip)        # 3d4a50 <completed.8061>
    16db:	75 2b                	jne    1708 <__do_global_dtors_aux+0x38>
    16dd:	55                   	push   %rbp
    16de:	48 83 3d e2 28 00 00 	cmpq   $0x0,0x28e2(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    16e5:	00 
    16e6:	48 89 e5             	mov    %rsp,%rbp
    16e9:	74 0c                	je     16f7 <__do_global_dtors_aux+0x27>
    16eb:	48 8b 3d 16 29 00 00 	mov    0x2916(%rip),%rdi        # 4008 <__dso_handle>
    16f2:	e8 79 fa ff ff       	callq  1170 <__cxa_finalize@plt>
    16f7:	e8 64 ff ff ff       	callq  1660 <deregister_tm_clones>
    16fc:	c6 05 4d 33 3d 00 01 	movb   $0x1,0x3d334d(%rip)        # 3d4a50 <completed.8061>
    1703:	5d                   	pop    %rbp
    1704:	c3                   	retq   
    1705:	0f 1f 00             	nopl   (%rax)
    1708:	c3                   	retq   
    1709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001710 <frame_dummy>:
    1710:	f3 0f 1e fa          	endbr64 
    1714:	e9 77 ff ff ff       	jmpq   1690 <register_tm_clones>
    1719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001720 <__libc_csu_init>:
    1720:	f3 0f 1e fa          	endbr64 
    1724:	41 57                	push   %r15
    1726:	4c 8d 3d 93 25 00 00 	lea    0x2593(%rip),%r15        # 3cc0 <__frame_dummy_init_array_entry>
    172d:	41 56                	push   %r14
    172f:	49 89 d6             	mov    %rdx,%r14
    1732:	41 55                	push   %r13
    1734:	49 89 f5             	mov    %rsi,%r13
    1737:	41 54                	push   %r12
    1739:	41 89 fc             	mov    %edi,%r12d
    173c:	55                   	push   %rbp
    173d:	48 8d 2d 8c 25 00 00 	lea    0x258c(%rip),%rbp        # 3cd0 <__do_global_dtors_aux_fini_array_entry>
    1744:	53                   	push   %rbx
    1745:	4c 29 fd             	sub    %r15,%rbp
    1748:	48 83 ec 08          	sub    $0x8,%rsp
    174c:	e8 af f8 ff ff       	callq  1000 <_init>
    1751:	48 c1 fd 03          	sar    $0x3,%rbp
    1755:	74 1f                	je     1776 <__libc_csu_init+0x56>
    1757:	31 db                	xor    %ebx,%ebx
    1759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1760:	4c 89 f2             	mov    %r14,%rdx
    1763:	4c 89 ee             	mov    %r13,%rsi
    1766:	44 89 e7             	mov    %r12d,%edi
    1769:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    176d:	48 83 c3 01          	add    $0x1,%rbx
    1771:	48 39 dd             	cmp    %rbx,%rbp
    1774:	75 ea                	jne    1760 <__libc_csu_init+0x40>
    1776:	48 83 c4 08          	add    $0x8,%rsp
    177a:	5b                   	pop    %rbx
    177b:	5d                   	pop    %rbp
    177c:	41 5c                	pop    %r12
    177e:	41 5d                	pop    %r13
    1780:	41 5e                	pop    %r14
    1782:	41 5f                	pop    %r15
    1784:	c3                   	retq   
    1785:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    178c:	00 00 00 00 

0000000000001790 <__libc_csu_fini>:
    1790:	f3 0f 1e fa          	endbr64 
    1794:	c3                   	retq   

Desensamblado de la secci贸n .fini:

0000000000001798 <_fini>:
    1798:	f3 0f 1e fa          	endbr64 
    179c:	48 83 ec 08          	sub    $0x8,%rsp
    17a0:	48 83 c4 08          	add    $0x8,%rsp
    17a4:	c3                   	retq   
